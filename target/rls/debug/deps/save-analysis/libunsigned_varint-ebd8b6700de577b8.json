{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","unsigned_varint","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"asynchronous-codec\"","--cfg","feature=\"asynchronous_codec\"","--cfg","feature=\"bytes\"","--cfg","feature=\"futures\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"std\"","-C","metadata=ebd8b6700de577b8","-C","extra-filename=-ebd8b6700de577b8","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","--extern","asynchronous_codec=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libasynchronous_codec-70c47ea41aa04522.rmeta","--extern","bytes=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libbytes-c6cfa29df40c7f31.rmeta","--extern","futures_io=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libfutures_io-1c195713bef2a55e.rmeta","--extern","futures_util=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libfutures_util-3f8eb67a4ee5ab67.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libunsigned_varint-ebd8b6700de577b8.rmeta"},"prelude":{"crate_id":{"name":"unsigned_varint","disambiguator":[3699113349644548328,8249341213065987774]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":18,"id":{"name":"futures_io","disambiguator":[270725918300058876,4905979488191877425]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":19,"id":{"name":"futures_util","disambiguator":[3412234492872956721,8131286690751886035]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":20,"id":{"name":"futures_core","disambiguator":[1046546965213587078,8658575172137901013]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":21,"id":{"name":"pin_utils","disambiguator":[6148991665019902715,7706982228305245343]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":22,"id":{"name":"proc_macro_hack","disambiguator":[18107074244595300940,7254669559897049488]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":23,"id":{"name":"futures_task","disambiguator":[7618684552912277039,4128123339859082111]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":24,"id":{"name":"futures_sink","disambiguator":[2141815619016393580,10417567691692566831]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[1711543636367193386,9447910762872662077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":26,"id":{"name":"futures_channel","disambiguator":[9460539002444017091,3079714972523010606]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":27,"id":{"name":"slab","disambiguator":[10964154642823013274,18136006732140345220]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":28,"id":{"name":"futures","disambiguator":[2098182083268404567,641404974437566644]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":29,"id":{"name":"futures_macro","disambiguator":[12335486991606108299,14487723658410264878]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","num":30,"id":{"name":"memchr","disambiguator":[1157675088820504487,7216068552727726090]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","num":31,"id":{"name":"bytes","disambiguator":[4121457881287143626,15114504427084966429]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","num":32,"id":{"name":"asynchronous_codec","disambiguator":[14008260920931689863,1851057872219904417]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1126,"byte_end":1634,"line_start":20,"line_end":40,"column_start":1,"column_end":13}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1126,"byte_end":1634,"line_start":20,"line_end":40,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":57},{"krate":0,"index":73},{"krate":0,"index":82}],"decl_id":null,"docs":" Unsigned varint encodes unsigned integers in 7-bit groups. The most\n significant bit (MSB) in each byte indicates if another byte follows\n (MSB = 1), or not (MSB = 0).\n","sig":null,"attributes":[{"value":"/ Unsigned varint encodes unsigned integers in 7-bit groups. The most","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1126,"byte_end":1197,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ significant bit (MSB) in each byte indicates if another byte follows","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1198,"byte_end":1270,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ (MSB = 1), or not (MSB = 0).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1271,"byte_end":1303,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"forbid(unsafe_code, unused_imports, unused_variables)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1305,"byte_end":1362,"line_start":24,"line_end":24,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":125},{"krate":0,"index":138},{"krate":0,"index":136},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Basic unsigned-varint decoding.\n","sig":null,"attributes":[{"value":"/ Basic unsigned-varint decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":2762,"byte_end":2797,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":126},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3045,"byte_end":3057,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"Insufficient","qualname":"::decode::Error::Insufficient","value":"Error::Insufficient","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Not enough input bytes.\n","sig":null,"attributes":[{"value":"/ Not enough input bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3013,"byte_end":3040,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":128},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3099,"byte_end":3107,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::decode::Error::Overflow","value":"Error::Overflow","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Input bytes exceed maximum.\n","sig":null,"attributes":[{"value":"/ Input bytes exceed maximum.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3063,"byte_end":3094,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":125},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3001,"byte_end":3006,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"pub enum Error {\n\n    /// Not enough input bytes.\n    Insufficient,\n\n    /// Input bytes exceed maximum.\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"decl_id":null,"docs":" Possible decoding errors.","sig":null,"attributes":[{"value":"/ Possible decoding errors.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":2823,"byte_end":2852,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":2853,"byte_end":2856,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note**: The `std` feature is required for the `std::error::Error` impl.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":2857,"byte_end":2934,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"non_exhaustive","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":2935,"byte_end":2952,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4025,"byte_end":4032,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"is_last","qualname":"::decode::is_last","value":"pub fn is_last(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the last byte of an unsigned varint?\n","sig":null,"attributes":[{"value":"/ Is this the last byte of an unsigned varint?","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3959,"byte_end":4007,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4008,"byte_end":4017,"line_start":67,"line_end":67,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4175,"byte_end":4177,"line_start":76,"line_end":76,"column_start":8,"column_end":10},"name":"u8","qualname":"::decode::u8","value":"pub fn u8(&[u8]) -> Result<(u8, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u8`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u8`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4071,"byte_end":4106,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4107,"byte_end":4110,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4111,"byte_end":4157,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4158,"byte_end":4167,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4354,"byte_end":4357,"line_start":84,"line_end":84,"column_start":8,"column_end":11},"name":"u16","qualname":"::decode::u16","value":"pub fn u16(&[u8]) -> Result<(u16, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u16`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u16`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4249,"byte_end":4285,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4286,"byte_end":4289,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4290,"byte_end":4336,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4337,"byte_end":4346,"line_start":83,"line_end":83,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4536,"byte_end":4539,"line_start":92,"line_end":92,"column_start":8,"column_end":11},"name":"u32","qualname":"::decode::u32","value":"pub fn u32(&[u8]) -> Result<(u32, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u32`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u32`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4431,"byte_end":4467,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4468,"byte_end":4471,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4472,"byte_end":4518,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4519,"byte_end":4528,"line_start":91,"line_end":91,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4718,"byte_end":4721,"line_start":100,"line_end":100,"column_start":8,"column_end":11},"name":"u64","qualname":"::decode::u64","value":"pub fn u64(&[u8]) -> Result<(u64, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u64`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u64`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4613,"byte_end":4649,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4650,"byte_end":4653,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4654,"byte_end":4700,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4701,"byte_end":4710,"line_start":99,"line_end":99,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4901,"byte_end":4905,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"u128","qualname":"::decode::u128","value":"pub fn u128(&[u8]) -> Result<(u128, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `u128`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `u128`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4795,"byte_end":4832,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4833,"byte_end":4836,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4837,"byte_end":4883,"line_start":106,"line_end":106,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4884,"byte_end":4893,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":5125,"byte_end":5130,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"usize","qualname":"::decode::usize","value":"pub fn usize(&[u8]) -> Result<(usize, &[u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given slice as `usize`.","sig":null,"attributes":[{"value":"/ Decode the given slice as `usize`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":4982,"byte_end":5020,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":5021,"byte_end":5024,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Returns the value and the remaining slice.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":5025,"byte_end":5071,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":5072,"byte_end":5081,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":5082,"byte_end":5117,"line_start":116,"line_end":116,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Basic unsigned-varint encoding.\n","sig":null,"attributes":[{"value":"/ Basic unsigned-varint encoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":6588,"byte_end":6623,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7119,"byte_end":7121,"line_start":45,"line_end":45,"column_start":8,"column_end":10},"name":"u8","qualname":"::encode::u8","value":"pub fn u8(u8, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u8` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u8` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7005,"byte_end":7057,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7058,"byte_end":7061,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7062,"byte_end":7101,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7102,"byte_end":7111,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7312,"byte_end":7315,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"u16","qualname":"::encode::u16","value":"pub fn u16(u16, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u16` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u16` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7197,"byte_end":7250,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7251,"byte_end":7254,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7255,"byte_end":7294,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7295,"byte_end":7304,"line_start":52,"line_end":52,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7508,"byte_end":7511,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"u32","qualname":"::encode::u32","value":"pub fn u32(u32, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u32` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u32` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7393,"byte_end":7446,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7447,"byte_end":7450,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7451,"byte_end":7490,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7491,"byte_end":7500,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7704,"byte_end":7707,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"u64","qualname":"::encode::u64","value":"pub fn u64(u64, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u64` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u64` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7589,"byte_end":7642,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7643,"byte_end":7646,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7647,"byte_end":7686,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7687,"byte_end":7696,"line_start":68,"line_end":68,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7901,"byte_end":7905,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"u128","qualname":"::encode::u128","value":"pub fn u128(u128, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `u128` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `u128` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7785,"byte_end":7839,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7840,"byte_end":7843,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7844,"byte_end":7883,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7884,"byte_end":7893,"line_start":76,"line_end":76,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8138,"byte_end":8143,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"usize","qualname":"::encode::usize","value":"pub fn usize(usize, &mut [u8; ]) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode the given `usize` into the given byte array.","sig":null,"attributes":[{"value":"/ Encode the given `usize` into the given byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":7985,"byte_end":8040,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8041,"byte_end":8044,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Returns the slice of encoded bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8045,"byte_end":8084,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8085,"byte_end":8094,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8095,"byte_end":8130,"line_start":85,"line_end":85,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8545,"byte_end":8554,"line_start":101,"line_end":101,"column_start":8,"column_end":17},"name":"u8_buffer","qualname":"::encode::u8_buffer","value":"pub fn u8_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u8` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u8` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8471,"byte_end":8527,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8528,"byte_end":8537,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8669,"byte_end":8679,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"u16_buffer","qualname":"::encode::u16_buffer","value":"pub fn u16_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u16` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u16` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8594,"byte_end":8651,"line_start":105,"line_end":105,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8652,"byte_end":8661,"line_start":106,"line_end":106,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8796,"byte_end":8806,"line_start":113,"line_end":113,"column_start":8,"column_end":18},"name":"u32_buffer","qualname":"::encode::u32_buffer","value":"pub fn u32_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u32` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u32` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8721,"byte_end":8778,"line_start":111,"line_end":111,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8779,"byte_end":8788,"line_start":112,"line_end":112,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8923,"byte_end":8933,"line_start":119,"line_end":119,"column_start":8,"column_end":18},"name":"u64_buffer","qualname":"::encode::u64_buffer","value":"pub fn u64_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u64` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u64` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8848,"byte_end":8905,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8906,"byte_end":8915,"line_start":118,"line_end":118,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":9051,"byte_end":9062,"line_start":125,"line_end":125,"column_start":8,"column_end":19},"name":"u128_buffer","qualname":"::encode::u128_buffer","value":"pub fn u128_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `u128` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `u128` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":8975,"byte_end":9033,"line_start":123,"line_end":123,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":9034,"byte_end":9043,"line_start":124,"line_end":124,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":9183,"byte_end":9195,"line_start":131,"line_end":131,"column_start":8,"column_end":20},"name":"usize_buffer","qualname":"::encode::usize_buffer","value":"pub fn usize_buffer() -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Create new array buffer for encoding of `usize` values.\n","sig":null,"attributes":[{"value":"/ Create new array buffer for encoding of `usize` values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":9106,"byte_end":9165,"line_start":129,"line_end":129,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/encode.rs","byte_start":9166,"byte_end":9175,"line_start":130,"line_end":130,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":159},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71}],"decl_id":null,"docs":" Decode using [`std::io::Read`] types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1440,"byte_end":1463,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ Decode using [`std::io::Read`] types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":10681,"byte_end":10722,"line_start":20,"line_end":20,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11596,"byte_end":11603,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"read_u8","qualname":"::io::read_u8","value":"pub fn read_u8<R: io::Read>(R) -> Result<u8, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u8`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":142},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11641,"byte_end":11649,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"read_u16","qualname":"::io::read_u16","value":"pub fn read_u16<R: io::Read>(R) -> Result<u16, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u16`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11687,"byte_end":11695,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"read_u32","qualname":"::io::read_u32","value":"pub fn read_u32<R: io::Read>(R) -> Result<u32, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u32`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11733,"byte_end":11741,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"read_u64","qualname":"::io::read_u64","value":"pub fn read_u64<R: io::Read>(R) -> Result<u64, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u64`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11779,"byte_end":11788,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"read_u128","qualname":"::io::read_u128","value":"pub fn read_u128<R: io::Read>(R) -> Result<u128, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u128`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11826,"byte_end":11836,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"read_usize","qualname":"::io::read_usize","value":"pub fn read_usize<R: io::Read>(R) -> Result<usize, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`usize`\n from the given `Read` type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":153},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11958,"byte_end":11960,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"Io","qualname":"::io::ReadError::Io","value":"ReadError::Io(io::Error)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11977,"byte_end":11983,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Decode","qualname":"::io::ReadError::Decode","value":"ReadError::Decode(decode::Error)","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":152},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11942,"byte_end":11951,"line_start":60,"line_end":60,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::io::ReadError","value":"pub enum ReadError { Io(io::Error), Decode(decode::Error), }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":156}],"decl_id":null,"docs":" Possible read errors.\n","sig":null,"attributes":[{"value":"/ Possible read errors.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11872,"byte_end":11897,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":11898,"byte_end":11915,"line_start":58,"line_end":58,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aio","qualname":"::aio","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":181}],"decl_id":null,"docs":" Decode using [`futures_io::AsyncRead`] types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"futures\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1477,"byte_end":1504,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ Decode using [`futures_io::AsyncRead`] types.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":13836,"byte_end":13885,"line_start":20,"line_end":20,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":14850,"byte_end":14857,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"read_u8","qualname":"::aio::read_u8","value":"pub async fn read_u8<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u8`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":14895,"byte_end":14903,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"read_u16","qualname":"::aio::read_u16","value":"pub async fn read_u16<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u16`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":14941,"byte_end":14949,"line_start":53,"line_end":53,"column_start":5,"column_end":13},"name":"read_u32","qualname":"::aio::read_u32","value":"pub async fn read_u32<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u32`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":14987,"byte_end":14995,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"read_u64","qualname":"::aio::read_u64","value":"pub async fn read_u64<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u64`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":15033,"byte_end":15042,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"read_u128","qualname":"::aio::read_u128","value":"pub async fn read_u128<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`u128`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/aio.rs","byte_start":15080,"byte_end":15090,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"read_usize","qualname":"::aio::read_usize","value":"pub async fn read_usize<R: AsyncRead + Unpin>(R) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to read and decode a \n`usize`\n from the given `AsyncRead` type.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":298},{"krate":0,"index":96},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":98},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":120}],"decl_id":null,"docs":" `Encoder`/`Decoder` implementations for tokio or asynchronous_codec.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"codec\", feature = \"asynchronous_codec\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1519,"byte_end":1581,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ `Encoder`/`Decoder` implementations for tokio or asynchronous_codec.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":16253,"byte_end":16325,"line_start":20,"line_end":20,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":16534,"byte_end":16537,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Uvi","qualname":"::codec::Uvi","value":"","parent":null,"children":[],"decl_id":null,"docs":" Encoder/Decoder of unsigned-varint values\n","sig":null,"attributes":[{"value":"/ Encoder/Decoder of unsigned-varint values","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":16458,"byte_end":16503,"line_start":26,"line_end":26,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19050,"byte_end":19058,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"UviBytes","qualname":"::codec::UviBytes","value":"UviBytes {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" Encoder/Decoder of unsigned-varint, length-prefixed bytes\n","sig":null,"attributes":[{"value":"/ Encoder/Decoder of unsigned-varint, length-prefixed bytes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":18977,"byte_end":19038,"line_start":100,"line_end":100,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19660,"byte_end":19671,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"set_max_len","qualname":"<UviBytes<T>>::set_max_len","value":"pub fn set_max_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Limit the maximum allowed length of bytes.\n","sig":null,"attributes":[{"value":"/ Limit the maximum allowed length of bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19602,"byte_end":19648,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19807,"byte_end":19814,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"max_len","qualname":"<UviBytes<T>>::max_len","value":"pub fn max_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum allowed number of bytes to encode/decode.\n","sig":null,"attributes":[{"value":"/ Return the maximum allowed number of bytes to encode/decode.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19731,"byte_end":19795,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3133,"byte_end":3138,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3492,"byte_end":3497,"line_start":47,"line_end":47,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12024,"byte_end":12033,"line_start":65,"line_end":65,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12294,"byte_end":12303,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12514,"byte_end":12523,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12625,"byte_end":12634,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19367,"byte_end":19375,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19584,"byte_end":19592,"line_start":122,"line_end":122,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":20467,"byte_end":20475,"line_start":152,"line_end":152,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":21452,"byte_end":21460,"line_start":185,"line_end":185,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":21728,"byte_end":21736,"line_start":195,"line_end":195,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1415,"byte_end":1421,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1431,"byte_end":1437,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1472,"byte_end":1474,"line_start":31,"line_end":31,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/lib.rs","byte_start":1590,"byte_end":1595,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":82}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3133,"byte_end":3138,"line_start":36,"line_end":36,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/decode.rs","byte_start":3492,"byte_end":3497,"line_start":47,"line_end":47,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":125},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12024,"byte_end":12033,"line_start":65,"line_end":65,"column_start":23,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12294,"byte_end":12303,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12514,"byte_end":12523,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/io.rs","byte_start":12625,"byte_end":12634,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19367,"byte_end":19375,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":19584,"byte_end":19592,"line_start":122,"line_end":122,"column_start":9,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":20467,"byte_end":20475,"line_start":152,"line_end":152,"column_start":14,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":21452,"byte_end":21460,"line_start":185,"line_end":185,"column_start":46,"column_end":54},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":32,"index":104}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/unsigned-varint-0.6.0/src/codec.rs","byte_start":21728,"byte_end":21736,"line_start":195,"line_end":195,"column_start":41,"column_end":49},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":32,"index":81}}]}