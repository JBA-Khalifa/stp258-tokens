{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"fs\"","--cfg","feature=\"io\"","--cfg","feature=\"mio\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"reactor\"","--cfg","feature=\"rt-full\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"timer\"","--cfg","feature=\"tokio-codec\"","--cfg","feature=\"tokio-current-thread\"","--cfg","feature=\"tokio-executor\"","--cfg","feature=\"tokio-fs\"","--cfg","feature=\"tokio-io\"","--cfg","feature=\"tokio-reactor\"","--cfg","feature=\"tokio-sync\"","--cfg","feature=\"tokio-tcp\"","--cfg","feature=\"tokio-threadpool\"","--cfg","feature=\"tokio-timer\"","--cfg","feature=\"tokio-udp\"","--cfg","feature=\"tokio-uds\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=4d9b04676c7485cd","-C","extra-filename=-4d9b04676c7485cd","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","--extern","bytes=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libbytes-0c2d842eb9692621.rmeta","--extern","futures=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libfutures-e0ccd5d58a6e4a70.rmeta","--extern","mio=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libmio-9e0ec4fd56fc2fd8.rmeta","--extern","num_cpus=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libnum_cpus-9b15bce94b18d4f2.rmeta","--extern","tokio_codec=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_codec-4105b705d53699ce.rmeta","--extern","tokio_current_thread=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_current_thread-90214cb60cec0683.rmeta","--extern","tokio_executor=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_executor-f250ffb66942efad.rmeta","--extern","tokio_fs=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_fs-d082dab9b2d19c26.rmeta","--extern","tokio_io=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_io-147f9c75dba3e392.rmeta","--extern","tokio_reactor=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_reactor-820c9921bf2be517.rmeta","--extern","tokio_sync=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_sync-cf5cd434b11c4e8b.rmeta","--extern","tokio_tcp=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_tcp-0b0ec8b884dea04e.rmeta","--extern","tokio_threadpool=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_threadpool-a61ee15f0dea8e88.rmeta","--extern","tokio_timer=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_timer-71a03278ee87043c.rmeta","--extern","tokio_udp=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_udp-d69173526aa33501.rmeta","--extern","tokio_uds=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio_uds-1233c36d7b46feca.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libtokio-4d9b04676c7485cd.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[2945001430054023389,15888067615173073197]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":18,"id":{"name":"futures","disambiguator":[2098182083268404567,641404974437566644]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":19,"id":{"name":"bytes","disambiguator":[12434232926456064616,11583950187998133014]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":20,"id":{"name":"byteorder","disambiguator":[13026914704469907224,16926152546635139588]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":21,"id":{"name":"iovec","disambiguator":[6299694013472434724,10197374939406455092]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[1505878593616001950,7496258804219435484]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":23,"id":{"name":"either","disambiguator":[14232254945973689136,11174845314383921227]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":24,"id":{"name":"mio","disambiguator":[2246567116875335818,9206378670113835633]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":25,"id":{"name":"net2","disambiguator":[7953022601261419426,6465627955937094301]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":27,"id":{"name":"slab","disambiguator":[10964154642823013274,18136006732140345220]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":28,"id":{"name":"log","disambiguator":[3538931328135950773,4125863275550801084]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":29,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":30,"id":{"name":"value_bag","disambiguator":[14147952327966877780,8670757478733231715]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":31,"id":{"name":"ctor","disambiguator":[11912146629742271207,48939772506558672]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":32,"id":{"name":"num_cpus","disambiguator":[16079825258082388537,14954861825559385044]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":33,"id":{"name":"tokio_codec","disambiguator":[12026055112917450870,6470660051562006518]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":34,"id":{"name":"tokio_io","disambiguator":[6465868088001124517,4251941124229636673]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":35,"id":{"name":"tokio_current_thread","disambiguator":[7031665865804082477,8784299559061690303]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":36,"id":{"name":"tokio_executor","disambiguator":[5679810944148653156,7626759288483174996]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":37,"id":{"name":"crossbeam_utils","disambiguator":[6912375667146935434,6982537788304375859]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":38,"id":{"name":"lazy_static","disambiguator":[4038955093903438243,10998562936998939215]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":39,"id":{"name":"tokio_fs","disambiguator":[15261964538656464737,4254730525591333483]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":40,"id":{"name":"tokio_threadpool","disambiguator":[3596019348226457951,4060297736884883561]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":41,"id":{"name":"crossbeam_deque","disambiguator":[13950885629180718233,2767624891240826161]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":42,"id":{"name":"crossbeam_epoch","disambiguator":[3990079519369456446,10142804041682732295]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":43,"id":{"name":"maybe_uninit","disambiguator":[10922732309434712432,8105429422995239737]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":44,"id":{"name":"memoffset","disambiguator":[16543320715709423016,223927104018102919]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":45,"id":{"name":"scopeguard","disambiguator":[6745301356711570827,8805850024978740077]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":46,"id":{"name":"crossbeam_queue","disambiguator":[1081472929651782813,2730032712690467996]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":47,"id":{"name":"tokio_reactor","disambiguator":[5348489930095053320,11308317538088299324]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":48,"id":{"name":"parking_lot","disambiguator":[3237320939423798760,8968024489586920391]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":49,"id":{"name":"lock_api","disambiguator":[1851465618653185922,9424210982215868311]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":50,"id":{"name":"parking_lot_core","disambiguator":[9159808250911695025,906354463293486691]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":51,"id":{"name":"smallvec","disambiguator":[2244386155222600517,7413594205429221302]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":52,"id":{"name":"tokio_sync","disambiguator":[12281063272580078758,10410597856158661334]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":53,"id":{"name":"fnv","disambiguator":[9172684908765800839,8802146823232208045]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":54,"id":{"name":"tokio_tcp","disambiguator":[12745182958777514722,6132145365635779847]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":55,"id":{"name":"tokio_timer","disambiguator":[377648741822462283,11813012962374790680]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":56,"id":{"name":"tokio_udp","disambiguator":[9976274560306733230,9165537315681796399]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":57,"id":{"name":"tokio_uds","disambiguator":[3623373776868704380,6579026173139554646]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","num":58,"id":{"name":"mio_uds","disambiguator":[771851211918136291,12102830493424055190]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":0,"byte_end":3885,"line_start":1,"line_end":138,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":55,"index":16},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4548,"byte_end":4551,"line_start":15,"line_end":15,"column_start":29,"column_end":32},"alias_span":null,"name":"now","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":33,"index":63},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5137,"byte_end":5147,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":43},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5149,"byte_end":5156,"line_start":14,"line_end":14,"column_start":17,"column_end":24},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":53},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5158,"byte_end":5165,"line_start":14,"line_end":14,"column_start":26,"column_end":33},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":283},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5167,"byte_end":5173,"line_start":14,"line_end":14,"column_start":35,"column_end":41},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":1319},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5175,"byte_end":5186,"line_start":14,"line_end":14,"column_start":43,"column_end":54},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5188,"byte_end":5198,"line_start":14,"line_end":14,"column_start":56,"column_end":66},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":34,"index":447},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5200,"byte_end":5211,"line_start":14,"line_end":14,"column_start":68,"column_end":79},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":33,"index":89},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5213,"byte_end":5223,"line_start":14,"line_end":14,"column_start":81,"column_end":91},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5288,"byte_end":5308,"line_start":19,"line_end":19,"column_start":33,"column_end":53},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":39,"index":604},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35566,"byte_end":35577,"line_start":10,"line_end":10,"column_start":19,"column_end":30},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":13},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35603,"byte_end":35613,"line_start":12,"line_end":12,"column_start":5,"column_end":15},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35615,"byte_end":35629,"line_start":12,"line_end":12,"column_start":17,"column_end":31},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":42},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35631,"byte_end":35635,"line_start":12,"line_end":12,"column_start":33,"column_end":37},"alias_span":null,"name":"file","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":202},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35637,"byte_end":35646,"line_start":12,"line_end":12,"column_start":39,"column_end":48},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":226},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35648,"byte_end":35656,"line_start":12,"line_end":12,"column_start":50,"column_end":58},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":237},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35658,"byte_end":35660,"line_start":12,"line_end":12,"column_start":60,"column_end":62},"alias_span":null,"name":"os","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":296},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35662,"byte_end":35670,"line_start":12,"line_end":12,"column_start":64,"column_end":72},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":331},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35672,"byte_end":35681,"line_start":12,"line_end":12,"column_start":74,"column_end":83},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35705,"byte_end":35709,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":494},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35711,"byte_end":35716,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":644},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35718,"byte_end":35726,"line_start":14,"line_end":14,"column_start":33,"column_end":41},"alias_span":null,"name":"ReadFile","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":732},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35728,"byte_end":35737,"line_start":14,"line_end":14,"column_start":43,"column_end":52},"alias_span":null,"name":"WriteFile","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":349},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35759,"byte_end":35769,"line_start":15,"line_end":15,"column_start":20,"column_end":30},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":367},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35771,"byte_end":35782,"line_start":15,"line_end":15,"column_start":32,"column_end":43},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":385},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35784,"byte_end":35790,"line_start":15,"line_end":15,"column_start":45,"column_end":51},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":406},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35792,"byte_end":35807,"line_start":15,"line_end":15,"column_start":53,"column_end":68},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":469},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35809,"byte_end":35825,"line_start":15,"line_end":15,"column_start":70,"column_end":86},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":39,"index":616},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35827,"byte_end":35831,"line_start":15,"line_end":15,"column_start":88,"column_end":92},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":34,"index":573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37581,"byte_end":37590,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":598},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37592,"byte_end":37602,"line_start":48,"line_end":48,"column_start":31,"column_end":41},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":424},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37685,"byte_end":37691,"line_start":52,"line_end":52,"column_start":20,"column_end":26},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":438},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37693,"byte_end":37698,"line_start":52,"line_end":52,"column_start":28,"column_end":33},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":451},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37700,"byte_end":37706,"line_start":52,"line_end":52,"column_start":35,"column_end":41},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":714},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37708,"byte_end":37714,"line_start":52,"line_end":52,"column_start":43,"column_end":49},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":718},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37716,"byte_end":37721,"line_start":52,"line_end":52,"column_start":51,"column_end":56},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":39,"index":722},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37723,"byte_end":37729,"line_start":52,"line_end":52,"column_start":58,"column_end":64},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":102},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37770,"byte_end":37774,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":119},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37776,"byte_end":37781,"line_start":56,"line_end":56,"column_start":11,"column_end":16},"alias_span":null,"name":"flush","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1073},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37783,"byte_end":37788,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"alias_span":null,"name":"lines","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":133},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37790,"byte_end":37794,"line_start":56,"line_end":56,"column_start":25,"column_end":29},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":149},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37796,"byte_end":37806,"line_start":56,"line_end":56,"column_start":31,"column_end":41},"alias_span":null,"name":"read_exact","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":166},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37808,"byte_end":37819,"line_start":56,"line_end":56,"column_start":43,"column_end":54},"alias_span":null,"name":"read_to_end","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":182},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37821,"byte_end":37831,"line_start":56,"line_end":56,"column_start":56,"column_end":66},"alias_span":null,"name":"read_until","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":196},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37833,"byte_end":37841,"line_start":56,"line_end":56,"column_start":68,"column_end":76},"alias_span":null,"name":"shutdown","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":210},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37843,"byte_end":37852,"line_start":56,"line_end":56,"column_start":78,"column_end":87},"alias_span":null,"name":"write_all","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1198},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37854,"byte_end":37858,"line_start":56,"line_end":56,"column_start":89,"column_end":93},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1212},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37864,"byte_end":37869,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1410},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37871,"byte_end":37876,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1238},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37878,"byte_end":37887,"line_start":57,"line_end":57,"column_start":19,"column_end":28},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1417},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37889,"byte_end":37897,"line_start":57,"line_end":57,"column_start":30,"column_end":38},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1259},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37899,"byte_end":37908,"line_start":57,"line_end":57,"column_start":40,"column_end":49},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1275},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37910,"byte_end":37919,"line_start":57,"line_end":57,"column_start":51,"column_end":60},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1292},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37921,"byte_end":37929,"line_start":57,"line_end":57,"column_start":62,"column_end":70},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1298},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37931,"byte_end":37939,"line_start":57,"line_end":57,"column_start":72,"column_end":80},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":34,"index":1423},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37941,"byte_end":37950,"line_start":57,"line_end":57,"column_start":82,"column_end":91},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":1,"index":2717},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":38091,"byte_end":38096,"line_start":62,"line_end":62,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":1,"index":7127},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":38098,"byte_end":38107,"line_start":62,"line_end":62,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":1,"index":3120},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":38109,"byte_end":38113,"line_start":62,"line_end":62,"column_start":37,"column_end":41},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":1,"index":2715},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":38115,"byte_end":38121,"line_start":62,"line_end":62,"column_start":43,"column_end":49},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":1,"index":3179},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":38123,"byte_end":38128,"line_start":62,"line_end":62,"column_start":51,"column_end":56},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":121}},{"kind":"Use","ref_id":{"krate":54,"index":176},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40114,"byte_end":40127,"line_start":44,"line_end":44,"column_start":25,"column_end":38},"alias_span":null,"name":"ConnectFuture","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":54,"index":172},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40129,"byte_end":40137,"line_start":44,"line_end":44,"column_start":40,"column_end":48},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":54,"index":38},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40139,"byte_end":40150,"line_start":44,"line_end":44,"column_start":50,"column_end":61},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":54,"index":86},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40152,"byte_end":40161,"line_start":44,"line_end":44,"column_start":63,"column_end":72},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":54,"index":38},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40210,"byte_end":40221,"line_start":47,"line_end":47,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":54,"index":86},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40223,"byte_end":40232,"line_start":47,"line_end":47,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":56,"index":165},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41223,"byte_end":41232,"line_start":74,"line_end":74,"column_start":25,"column_end":34},"alias_span":null,"name":"RecvDgram","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":56,"index":186},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41234,"byte_end":41243,"line_start":74,"line_end":74,"column_start":36,"column_end":45},"alias_span":null,"name":"SendDgram","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":56,"index":151},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41245,"byte_end":41254,"line_start":74,"line_end":74,"column_start":47,"column_end":56},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":56,"index":104},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41256,"byte_end":41265,"line_start":74,"line_end":74,"column_start":58,"column_end":67},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":56,"index":151},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41314,"byte_end":41323,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":56,"index":104},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41325,"byte_end":41334,"line_start":77,"line_end":77,"column_start":32,"column_end":41},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":57,"index":376},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41811,"byte_end":41824,"line_start":93,"line_end":93,"column_start":9,"column_end":22},"alias_span":null,"name":"ConnectFuture","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":335},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41826,"byte_end":41834,"line_start":93,"line_end":93,"column_start":24,"column_end":32},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":339},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41836,"byte_end":41845,"line_start":93,"line_end":93,"column_start":34,"column_end":43},"alias_span":null,"name":"RecvDgram","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":355},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41847,"byte_end":41856,"line_start":93,"line_end":93,"column_start":45,"column_end":54},"alias_span":null,"name":"SendDgram","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41858,"byte_end":41863,"line_start":93,"line_end":93,"column_start":56,"column_end":61},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":35},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41865,"byte_end":41877,"line_start":93,"line_end":93,"column_start":63,"column_end":75},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":322},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41879,"byte_end":41897,"line_start":93,"line_end":93,"column_start":77,"column_end":95},"alias_span":null,"name":"UnixDatagramFramed","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":142},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41907,"byte_end":41919,"line_start":94,"line_end":94,"column_start":9,"column_end":21},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":231},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41921,"byte_end":41931,"line_start":94,"line_end":94,"column_start":23,"column_end":33},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":183}},{"kind":"Use","ref_id":{"krate":57,"index":35},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41998,"byte_end":42010,"line_start":98,"line_end":98,"column_start":22,"column_end":34},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":57,"index":322},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":42012,"byte_end":42030,"line_start":98,"line_end":98,"column_start":36,"column_end":54},"alias_span":null,"name":"UnixDatagramFramed","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":57,"index":142},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":42032,"byte_end":42044,"line_start":98,"line_end":98,"column_start":56,"column_end":68},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":57,"index":231},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":42046,"byte_end":42056,"line_start":98,"line_end":98,"column_start":70,"column_end":80},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":34,"index":573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42489,"byte_end":42498,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":34,"index":598},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42500,"byte_end":42510,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42529,"byte_end":42538,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42540,"byte_end":42549,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":1,"index":3120},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42571,"byte_end":42575,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":1,"index":3179},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42577,"byte_end":42582,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":36},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42604,"byte_end":42610,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"alias_span":null,"name":"future","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":568},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42612,"byte_end":42618,"line_start":20,"line_end":20,"column_start":27,"column_end":33},"alias_span":null,"name":"stream","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":2321},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42620,"byte_end":42624,"line_start":20,"line_end":20,"column_start":35,"column_end":39},"alias_span":null,"name":"task","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":3009},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42626,"byte_end":42631,"line_start":20,"line_end":20,"column_start":41,"column_end":46},"alias_span":null,"name":"Async","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":3030},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42633,"byte_end":42642,"line_start":20,"line_end":20,"column_start":48,"column_end":57},"alias_span":null,"name":"AsyncSink","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":468},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42644,"byte_end":42650,"line_start":20,"line_end":20,"column_start":59,"column_end":65},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":527},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42652,"byte_end":42662,"line_start":20,"line_end":20,"column_start":67,"column_end":77},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":8},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42664,"byte_end":42668,"line_start":20,"line_end":20,"column_start":79,"column_end":83},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":1784},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42670,"byte_end":42674,"line_start":20,"line_end":20,"column_start":85,"column_end":89},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":18,"index":1430},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42676,"byte_end":42682,"line_start":20,"line_end":20,"column_start":91,"column_end":97},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":199}},{"kind":"Use","ref_id":{"krate":47,"index":388},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49211,"byte_end":49221,"line_start":139,"line_end":139,"column_start":5,"column_end":15},"alias_span":null,"name":"Background","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":47,"index":445},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49223,"byte_end":49229,"line_start":139,"line_end":139,"column_start":17,"column_end":23},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":47,"index":70},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49231,"byte_end":49242,"line_start":139,"line_end":139,"column_start":25,"column_end":36},"alias_span":null,"name":"PollEvented2","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":47,"index":298},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49260,"byte_end":49267,"line_start":139,"line_end":139,"column_start":54,"column_end":61},"alias_span":null,"name":"Reactor","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":47,"index":406},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49269,"byte_end":49281,"line_start":139,"line_end":139,"column_start":63,"column_end":75},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":47,"index":453},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49283,"byte_end":49287,"line_start":139,"line_end":139,"column_start":77,"column_end":81},"alias_span":null,"name":"Turn","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49360,"byte_end":49371,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":52,"index":7},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66621,"byte_end":66625,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"alias_span":null,"name":"lock","value":"","parent":{"krate":0,"index":307}},{"kind":"Use","ref_id":{"krate":52,"index":71},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66627,"byte_end":66631,"line_start":16,"line_end":16,"column_start":28,"column_end":32},"alias_span":null,"name":"mpsc","value":"","parent":{"krate":0,"index":307}},{"kind":"Use","ref_id":{"krate":52,"index":502},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66633,"byte_end":66640,"line_start":16,"line_end":16,"column_start":34,"column_end":41},"alias_span":null,"name":"oneshot","value":"","parent":{"krate":0,"index":307}},{"kind":"Use","ref_id":{"krate":52,"index":803},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66642,"byte_end":66647,"line_start":16,"line_end":16,"column_start":43,"column_end":48},"alias_span":null,"name":"watch","value":"","parent":{"krate":0,"index":307}},{"kind":"Use","ref_id":{"krate":55,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69214,"byte_end":69225,"line_start":85,"line_end":85,"column_start":23,"column_end":34},"alias_span":null,"name":"delay_queue","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":164},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69227,"byte_end":69234,"line_start":85,"line_end":85,"column_start":36,"column_end":43},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":846},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69236,"byte_end":69241,"line_start":85,"line_end":85,"column_start":45,"column_end":50},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":663},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69243,"byte_end":69253,"line_start":85,"line_end":85,"column_start":52,"column_end":62},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":850},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69255,"byte_end":69260,"line_start":85,"line_end":85,"column_start":64,"column_end":69},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":862},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69262,"byte_end":69270,"line_start":85,"line_end":85,"column_start":71,"column_end":79},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":55,"index":721},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69272,"byte_end":69279,"line_start":85,"line_end":85,"column_start":81,"column_end":88},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69954,"byte_end":69963,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69987,"byte_end":69996,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":35,"index":399},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898661,"byte_end":11898671,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"alias_span":null,"name":"BlockError","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":218},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898677,"byte_end":11898690,"line_start":109,"line_end":109,"column_start":5,"column_end":18},"alias_span":null,"name":"CurrentThread","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":228},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898696,"byte_end":11898703,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"alias_span":null,"name":"Entered","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":413},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898709,"byte_end":11898715,"line_start":111,"line_end":111,"column_start":5,"column_end":11},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":387},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898721,"byte_end":11898729,"line_start":112,"line_end":112,"column_start":5,"column_end":13},"alias_span":null,"name":"RunError","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898735,"byte_end":11898750,"line_start":113,"line_end":113,"column_start":5,"column_end":20},"alias_span":null,"name":"RunTimeoutError","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":377},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898756,"byte_end":11898768,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"alias_span":null,"name":"TaskExecutor","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":383},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898774,"byte_end":11898778,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"alias_span":null,"name":"Turn","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":395},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898784,"byte_end":11898793,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"alias_span":null,"name":"TurnError","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":262},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898799,"byte_end":11898811,"line_start":117,"line_end":117,"column_start":5,"column_end":17},"alias_span":null,"name":"block_on_all","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":35,"index":265},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898817,"byte_end":11898822,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":416}},{"kind":"Use","ref_id":{"krate":40,"index":99},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892311,"byte_end":11892318,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":441}},{"kind":"Use","ref_id":{"krate":40,"index":1001},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892328,"byte_end":11892334,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":441}},{"kind":"Use","ref_id":{"krate":40,"index":1005},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892344,"byte_end":11892352,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":441}},{"kind":"Use","ref_id":{"krate":40,"index":1107},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892362,"byte_end":11892372,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":441}},{"kind":"Use","ref_id":{"krate":36,"index":67},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892409,"byte_end":11892417,"line_start":63,"line_end":63,"column_start":26,"column_end":34},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":36,"index":166},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892419,"byte_end":11892432,"line_start":63,"line_end":63,"column_start":36,"column_end":49},"alias_span":null,"name":"TypedExecutor","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":36,"index":197},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892434,"byte_end":11892449,"line_start":63,"line_end":63,"column_start":51,"column_end":66},"alias_span":null,"name":"DefaultExecutor","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":36,"index":193},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892451,"byte_end":11892461,"line_start":63,"line_end":63,"column_start":68,"column_end":78},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906332,"byte_end":11906339,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":466}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906365,"byte_end":11906372,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":466}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906374,"byte_end":11906380,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":466}},{"kind":"Use","ref_id":{"krate":35,"index":265},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906413,"byte_end":11906418,"line_start":77,"line_end":77,"column_start":31,"column_end":36},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":466}},{"kind":"Use","ref_id":{"krate":35,"index":377},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906450,"byte_end":11906462,"line_start":78,"line_end":78,"column_start":31,"column_end":43},"alias_span":null,"name":"TaskExecutor","value":"","parent":{"krate":0,"index":466}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11904010,"byte_end":11904017,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11904023,"byte_end":11904030,"line_start":120,"line_end":120,"column_start":5,"column_end":12},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11904036,"byte_end":11904044,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11904050,"byte_end":11904062,"line_start":122,"line_end":122,"column_start":5,"column_end":17},"alias_span":null,"name":"TaskExecutor","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11904068,"byte_end":11904071,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"alias_span":null,"name":"run","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3851,"byte_end":3856,"line_start":136,"line_end":136,"column_start":23,"column_end":28},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3879,"byte_end":3882,"line_start":137,"line_end":137,"column_start":22,"column_end":25},"alias_span":null,"name":"run","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":0,"byte_end":3885,"line_start":1,"line_end":138,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":98},{"krate":0,"index":121},{"krate":0,"index":158},{"krate":0,"index":199},{"krate":0,"index":220},{"krate":0,"index":307},{"krate":0,"index":313},{"krate":0,"index":326},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":465},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"deny(missing_docs, warnings, missing_debug_implementations)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":56,"byte_end":119,"line_start":2,"line_end":2,"column_start":1,"column_end":64}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":121,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":194,"byte_end":197,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":198,"byte_end":278,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":279,"byte_end":351,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":352,"byte_end":388,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":389,"byte_end":392,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * A multi threaded, work-stealing based task [scheduler][runtime].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":393,"byte_end":463,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ * A [reactor] backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":464,"byte_end":542,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   IOCP, etc...).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":543,"byte_end":563,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ * Asynchronous [TCP and UDP][net] sockets.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":564,"byte_end":610,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ * Asynchronous [filesystem][fs] operations.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":611,"byte_end":658,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/ * [Timer][timer] API for scheduling work in the future.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":659,"byte_end":718,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":719,"byte_end":722,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tokio is built using [futures] as the abstraction for managing the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":723,"byte_end":793,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ complexity of asynchronous programming.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":794,"byte_end":837,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":838,"byte_end":841,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":842,"byte_end":898,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":899,"byte_end":902,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [website]: https://tokio.rs/docs/getting-started/hello-world/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":903,"byte_end":968,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ [futures]: http://docs.rs/futures/0.1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":969,"byte_end":1010,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1015,"byte_end":1029,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1030,"byte_end":1033,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1034,"byte_end":1063,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1064,"byte_end":1067,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1068,"byte_end":1081,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1082,"byte_end":1105,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1106,"byte_end":1109,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1110,"byte_end":1136,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use tokio::io::copy;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1137,"byte_end":1161,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1162,"byte_end":1194,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1199,"byte_end":1214,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     // Bind the server's socket.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1215,"byte_end":1251,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/     let addr = \"127.0.0.1:12345\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1252,"byte_end":1306,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/     let listener = TcpListener::bind(&addr)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1307,"byte_end":1354,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/         .expect(\"unable to bind TCP listener\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1355,"byte_end":1406,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1407,"byte_end":1410,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Pull out a stream of sockets for incoming connections","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1411,"byte_end":1475,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/     let server = listener.incoming()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1476,"byte_end":1516,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/         .map_err(|e| eprintln!(\"accept failed = {:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1517,"byte_end":1579,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/         .for_each(|sock| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1580,"byte_end":1610,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/             // Split up the reading and writing parts of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1611,"byte_end":1675,"line_start":46,"line_end":46,"column_start":1,"column_end":65}},{"value":"/             // socket.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1676,"byte_end":1702,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/             let (reader, writer) = sock.split();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1703,"byte_end":1755,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1756,"byte_end":1759,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/             // A future that echos the data and returns how","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1760,"byte_end":1823,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/             // many bytes were copied...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1824,"byte_end":1868,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/             let bytes_copied = copy(reader, writer);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1869,"byte_end":1925,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1926,"byte_end":1929,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/             // ... after which we'll print what happened.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1930,"byte_end":1991,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/             let handle_conn = bytes_copied.map(|amt| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":1992,"byte_end":2050,"line_start":55,"line_end":55,"column_start":1,"column_end":59}},{"value":"/                 println!(\"wrote {:?} bytes\", amt)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2051,"byte_end":2104,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/             }).map_err(|err| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2105,"byte_end":2139,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/                 eprintln!(\"IO error {:?}\", err)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2140,"byte_end":2191,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/             });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2192,"byte_end":2211,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2212,"byte_end":2215,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/             // Spawn the future as a concurrent task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2216,"byte_end":2273,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/             tokio::spawn(handle_conn)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2274,"byte_end":2315,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2316,"byte_end":2331,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2332,"byte_end":2335,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     // Start the Tokio runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2336,"byte_end":2370,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/     tokio::run(server);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2371,"byte_end":2398,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2399,"byte_end":2404,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2405,"byte_end":2412,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" A configurable source of time.","sig":null,"attributes":[{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3353,"byte_end":3378,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/ A configurable source of time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":3887,"byte_end":3921,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":3922,"byte_end":3925,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`now`][n] function, which returns an `Instant`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":3926,"byte_end":4002,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ representing \"now\". The source of time used by this function is configurable","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4003,"byte_end":4083,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ (via the [`tokio-timer`] crate) and allows mocking out the source of time in","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4084,"byte_end":4164,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ tests or performing caching operations to reduce the number of syscalls.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4165,"byte_end":4241,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4242,"byte_end":4245,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that, because the source of time is configurable, it is possible to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4246,"byte_end":4322,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ observe non-monotonic behavior when calling [`now`][n] from different","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4323,"byte_end":4396,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ executors.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4397,"byte_end":4411,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4412,"byte_end":4415,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [n]: fn.now.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4416,"byte_end":4436,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/ [`tokio-timer`]: https://docs.rs/tokio-timer/0.2/tokio_timer/clock/index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/clock.rs","byte_start":4437,"byte_end":4518,"line_start":13,"line_end":13,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":97}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3394,"byte_end":3419,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4554,"byte_end":4601,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4602,"byte_end":4605,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4606,"byte_end":4674,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4675,"byte_end":4750,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as [transports].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4751,"byte_end":4801,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4802,"byte_end":4805,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: ../io/trait.AsyncRead.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4806,"byte_end":4851,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../io/trait.AsyncWrite.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4852,"byte_end":4899,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.1/futures/sink/trait.Sink.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4900,"byte_end":4970,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":4971,"byte_end":5047,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [transports]: https://tokio.rs/docs/going-deeper/frames/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5048,"byte_end":5108,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":379},{"krate":0,"index":389},{"krate":0,"index":387},{"krate":0,"index":386},{"krate":0,"index":55},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":405},{"krate":0,"index":403},{"krate":0,"index":402},{"krate":0,"index":57},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5311,"byte_end":5363,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5364,"byte_end":5367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5368,"byte_end":5438,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5439,"byte_end":5497,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5498,"byte_end":5570,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5571,"byte_end":5641,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5642,"byte_end":5709,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5710,"byte_end":5713,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5714,"byte_end":5735,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5736,"byte_end":5739,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5740,"byte_end":5815,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5816,"byte_end":5887,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5888,"byte_end":5959,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":5960,"byte_end":6030,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6031,"byte_end":6071,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6072,"byte_end":6075,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6076,"byte_end":6083,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6084,"byte_end":6109,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6110,"byte_end":6153,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/ use tokio::codec::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6154,"byte_end":6178,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6179,"byte_end":6182,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6183,"byte_end":6238,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6239,"byte_end":6281,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6282,"byte_end":6287,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6288,"byte_end":6340,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6341,"byte_end":6346,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6347,"byte_end":6369,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6370,"byte_end":6377,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6378,"byte_end":6381,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6382,"byte_end":6454,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6455,"byte_end":6526,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6527,"byte_end":6546,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6547,"byte_end":6550,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6551,"byte_end":6562,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6563,"byte_end":6612,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6613,"byte_end":6662,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6663,"byte_end":6712,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6713,"byte_end":6720,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6721,"byte_end":6724,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6725,"byte_end":6763,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6764,"byte_end":6767,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6768,"byte_end":6775,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6776,"byte_end":6801,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6802,"byte_end":6827,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6828,"byte_end":6855,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6856,"byte_end":6861,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6862,"byte_end":6905,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ use tokio::codec::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6906,"byte_end":6930,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6931,"byte_end":6952,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ use futures::{Sink, Future};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6953,"byte_end":6985,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6986,"byte_end":6989,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ fn write_frame<T: AsyncRead + AsyncWrite>(io: T) -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":6990,"byte_end":7082,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7083,"byte_end":7156,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7157,"byte_end":7204,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7205,"byte_end":7208,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).wait()?;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7209,"byte_end":7247,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/     Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7248,"byte_end":7262,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7263,"byte_end":7268,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7269,"byte_end":7274,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7275,"byte_end":7297,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7298,"byte_end":7305,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7306,"byte_end":7309,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7310,"byte_end":7352,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7353,"byte_end":7356,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7357,"byte_end":7368,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7369,"byte_end":7408,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7409,"byte_end":7448,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7449,"byte_end":7488,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7489,"byte_end":7496,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7497,"byte_end":7500,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7501,"byte_end":7515,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7516,"byte_end":7519,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7520,"byte_end":7595,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7596,"byte_end":7669,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7670,"byte_end":7736,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7737,"byte_end":7806,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7807,"byte_end":7872,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7873,"byte_end":7876,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7877,"byte_end":7893,"line_start":79,"line_end":79,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7894,"byte_end":7897,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7898,"byte_end":7974,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":7975,"byte_end":8016,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8017,"byte_end":8020,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8021,"byte_end":8028,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8029,"byte_end":8054,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8055,"byte_end":8086,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8087,"byte_end":8128,"line_start":87,"line_end":87,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8129,"byte_end":8170,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8171,"byte_end":8207,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8208,"byte_end":8256,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8257,"byte_end":8288,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8289,"byte_end":8337,"line_start":92,"line_end":92,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8338,"byte_end":8387,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8388,"byte_end":8410,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8411,"byte_end":8418,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8419,"byte_end":8441,"line_start":96,"line_end":96,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8442,"byte_end":8449,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8450,"byte_end":8453,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8454,"byte_end":8502,"line_start":99,"line_end":99,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8503,"byte_end":8506,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8507,"byte_end":8518,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8519,"byte_end":8571,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8572,"byte_end":8637,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8638,"byte_end":8703,"line_start":104,"line_end":104,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8704,"byte_end":8769,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8770,"byte_end":8777,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8778,"byte_end":8781,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8782,"byte_end":8858,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8859,"byte_end":8933,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":8934,"byte_end":9006,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9007,"byte_end":9083,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9084,"byte_end":9126,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9127,"byte_end":9130,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9131,"byte_end":9147,"line_start":114,"line_end":114,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9148,"byte_end":9151,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9152,"byte_end":9227,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9228,"byte_end":9269,"line_start":117,"line_end":117,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9270,"byte_end":9273,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9274,"byte_end":9281,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9282,"byte_end":9307,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9308,"byte_end":9339,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9340,"byte_end":9381,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9382,"byte_end":9423,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9424,"byte_end":9460,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9461,"byte_end":9509,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9510,"byte_end":9541,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9542,"byte_end":9590,"line_start":127,"line_end":127,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9591,"byte_end":9650,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9651,"byte_end":9673,"line_start":129,"line_end":129,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9674,"byte_end":9681,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9682,"byte_end":9704,"line_start":131,"line_end":131,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9705,"byte_end":9712,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9713,"byte_end":9716,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9717,"byte_end":9765,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9766,"byte_end":9769,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9770,"byte_end":9781,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9782,"byte_end":9831,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9832,"byte_end":9886,"line_start":138,"line_end":138,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9887,"byte_end":9941,"line_start":139,"line_end":139,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9942,"byte_end":9996,"line_start":140,"line_end":140,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":9997,"byte_end":10004,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10005,"byte_end":10008,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10009,"byte_end":10082,"line_start":143,"line_end":143,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10083,"byte_end":10150,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10151,"byte_end":10154,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10155,"byte_end":10171,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10172,"byte_end":10175,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10176,"byte_end":10252,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10253,"byte_end":10325,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10326,"byte_end":10365,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10366,"byte_end":10369,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10370,"byte_end":10377,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10378,"byte_end":10403,"line_start":153,"line_end":153,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10404,"byte_end":10435,"line_start":154,"line_end":154,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10436,"byte_end":10477,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10478,"byte_end":10519,"line_start":156,"line_end":156,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10520,"byte_end":10556,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10557,"byte_end":10605,"line_start":158,"line_end":158,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10606,"byte_end":10637,"line_start":159,"line_end":159,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10638,"byte_end":10685,"line_start":160,"line_end":160,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10686,"byte_end":10706,"line_start":161,"line_end":161,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10707,"byte_end":10729,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10730,"byte_end":10737,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10738,"byte_end":10760,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10761,"byte_end":10768,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10769,"byte_end":10772,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10773,"byte_end":10821,"line_start":167,"line_end":167,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10822,"byte_end":10825,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10826,"byte_end":10837,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10838,"byte_end":10890,"line_start":170,"line_end":170,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10891,"byte_end":10956,"line_start":171,"line_end":171,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":10957,"byte_end":11022,"line_start":172,"line_end":172,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11023,"byte_end":11088,"line_start":173,"line_end":173,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11089,"byte_end":11096,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11097,"byte_end":11100,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11101,"byte_end":11173,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11174,"byte_end":11249,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11250,"byte_end":11322,"line_start":178,"line_end":178,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11323,"byte_end":11399,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11400,"byte_end":11473,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11474,"byte_end":11477,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11478,"byte_end":11494,"line_start":182,"line_end":182,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11495,"byte_end":11498,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11499,"byte_end":11573,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11574,"byte_end":11641,"line_start":185,"line_end":185,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11642,"byte_end":11645,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11646,"byte_end":11653,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11654,"byte_end":11679,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11680,"byte_end":11711,"line_start":189,"line_end":189,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11712,"byte_end":11753,"line_start":190,"line_end":190,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11754,"byte_end":11795,"line_start":191,"line_end":191,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11796,"byte_end":11832,"line_start":192,"line_end":192,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11833,"byte_end":11881,"line_start":193,"line_end":193,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11882,"byte_end":11913,"line_start":194,"line_end":194,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11914,"byte_end":11962,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11963,"byte_end":11983,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":11984,"byte_end":12006,"line_start":197,"line_end":197,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12007,"byte_end":12014,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12015,"byte_end":12037,"line_start":199,"line_end":199,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12038,"byte_end":12045,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12046,"byte_end":12049,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12050,"byte_end":12098,"line_start":202,"line_end":202,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12099,"byte_end":12102,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12103,"byte_end":12114,"line_start":204,"line_end":204,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12115,"byte_end":12141,"line_start":205,"line_end":205,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12142,"byte_end":12187,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12188,"byte_end":12233,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12234,"byte_end":12279,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12280,"byte_end":12283,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12284,"byte_end":12312,"line_start":210,"line_end":210,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12313,"byte_end":12358,"line_start":211,"line_end":211,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12359,"byte_end":12404,"line_start":212,"line_end":212,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12405,"byte_end":12450,"line_start":213,"line_end":213,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12451,"byte_end":12458,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12459,"byte_end":12462,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12463,"byte_end":12535,"line_start":216,"line_end":216,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12536,"byte_end":12612,"line_start":217,"line_end":217,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12613,"byte_end":12683,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12684,"byte_end":12753,"line_start":219,"line_end":219,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12754,"byte_end":12791,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12792,"byte_end":12795,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12796,"byte_end":12870,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12871,"byte_end":12925,"line_start":223,"line_end":223,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12926,"byte_end":12929,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12930,"byte_end":12946,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12947,"byte_end":12950,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":12951,"byte_end":13024,"line_start":227,"line_end":227,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13025,"byte_end":13101,"line_start":228,"line_end":228,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13102,"byte_end":13176,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13177,"byte_end":13190,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13191,"byte_end":13194,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13195,"byte_end":13202,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13203,"byte_end":13228,"line_start":233,"line_end":233,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13229,"byte_end":13260,"line_start":234,"line_end":234,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13261,"byte_end":13302,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13303,"byte_end":13344,"line_start":236,"line_end":236,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13345,"byte_end":13381,"line_start":237,"line_end":237,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13382,"byte_end":13431,"line_start":238,"line_end":238,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13432,"byte_end":13463,"line_start":239,"line_end":239,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13464,"byte_end":13512,"line_start":240,"line_end":240,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13513,"byte_end":13557,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13558,"byte_end":13580,"line_start":242,"line_end":242,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13581,"byte_end":13588,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13589,"byte_end":13611,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13612,"byte_end":13619,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13620,"byte_end":13623,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13624,"byte_end":13672,"line_start":247,"line_end":247,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13673,"byte_end":13676,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13677,"byte_end":13688,"line_start":249,"line_end":249,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13689,"byte_end":13715,"line_start":250,"line_end":250,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13716,"byte_end":13766,"line_start":251,"line_end":251,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13767,"byte_end":13817,"line_start":252,"line_end":252,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13818,"byte_end":13868,"line_start":253,"line_end":253,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13869,"byte_end":13872,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13873,"byte_end":13893,"line_start":255,"line_end":255,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13894,"byte_end":13924,"line_start":256,"line_end":256,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13925,"byte_end":13955,"line_start":257,"line_end":257,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13956,"byte_end":13986,"line_start":258,"line_end":258,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13987,"byte_end":13994,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13995,"byte_end":13998,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":13999,"byte_end":14072,"line_start":261,"line_end":261,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14073,"byte_end":14148,"line_start":262,"line_end":262,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14149,"byte_end":14221,"line_start":263,"line_end":263,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14222,"byte_end":14260,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14261,"byte_end":14264,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14265,"byte_end":14339,"line_start":266,"line_end":266,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14340,"byte_end":14416,"line_start":267,"line_end":267,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14417,"byte_end":14490,"line_start":268,"line_end":268,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14491,"byte_end":14519,"line_start":269,"line_end":269,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14520,"byte_end":14523,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14524,"byte_end":14540,"line_start":271,"line_end":271,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14541,"byte_end":14544,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14545,"byte_end":14618,"line_start":273,"line_end":273,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14619,"byte_end":14695,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14696,"byte_end":14770,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14771,"byte_end":14843,"line_start":276,"line_end":276,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14844,"byte_end":14855,"line_start":277,"line_end":277,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14856,"byte_end":14859,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14860,"byte_end":14867,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14868,"byte_end":14893,"line_start":280,"line_end":280,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14894,"byte_end":14925,"line_start":281,"line_end":281,"column_start":1,"column_end":32}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14926,"byte_end":14967,"line_start":282,"line_end":282,"column_start":1,"column_end":42}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":14968,"byte_end":15009,"line_start":283,"line_end":283,"column_start":1,"column_end":42}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15010,"byte_end":15046,"line_start":284,"line_end":284,"column_start":1,"column_end":37}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15047,"byte_end":15096,"line_start":285,"line_end":285,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15097,"byte_end":15128,"line_start":286,"line_end":286,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15129,"byte_end":15194,"line_start":287,"line_end":287,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15195,"byte_end":15215,"line_start":288,"line_end":288,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15216,"byte_end":15238,"line_start":289,"line_end":289,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15239,"byte_end":15246,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15247,"byte_end":15269,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15270,"byte_end":15277,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15278,"byte_end":15281,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15282,"byte_end":15330,"line_start":294,"line_end":294,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15331,"byte_end":15334,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15335,"byte_end":15346,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15347,"byte_end":15373,"line_start":297,"line_end":297,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15374,"byte_end":15424,"line_start":298,"line_end":298,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15425,"byte_end":15475,"line_start":299,"line_end":299,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15476,"byte_end":15526,"line_start":300,"line_end":300,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15527,"byte_end":15530,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15531,"byte_end":15551,"line_start":302,"line_end":302,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15552,"byte_end":15582,"line_start":303,"line_end":303,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15583,"byte_end":15613,"line_start":304,"line_end":304,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15614,"byte_end":15644,"line_start":305,"line_end":305,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15645,"byte_end":15652,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15653,"byte_end":15656,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15657,"byte_end":15730,"line_start":308,"line_end":308,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15731,"byte_end":15805,"line_start":309,"line_end":309,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15806,"byte_end":15880,"line_start":310,"line_end":310,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15881,"byte_end":15954,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":15955,"byte_end":16031,"line_start":312,"line_end":312,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16032,"byte_end":16065,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16066,"byte_end":16069,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16070,"byte_end":16084,"line_start":315,"line_end":315,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16085,"byte_end":16088,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16089,"byte_end":16164,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16165,"byte_end":16237,"line_start":318,"line_end":318,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16238,"byte_end":16306,"line_start":319,"line_end":319,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16307,"byte_end":16383,"line_start":320,"line_end":320,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16384,"byte_end":16425,"line_start":321,"line_end":321,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16426,"byte_end":16429,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16430,"byte_end":16500,"line_start":323,"line_end":323,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16501,"byte_end":16519,"line_start":324,"line_end":324,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16520,"byte_end":16523,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16524,"byte_end":16531,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16532,"byte_end":16557,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16558,"byte_end":16583,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16584,"byte_end":16616,"line_start":329,"line_end":329,"column_start":1,"column_end":33}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16617,"byte_end":16658,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16659,"byte_end":16685,"line_start":331,"line_end":331,"column_start":1,"column_end":27}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16686,"byte_end":16730,"line_start":332,"line_end":332,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16731,"byte_end":16744,"line_start":333,"line_end":333,"column_start":1,"column_end":14}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16745,"byte_end":16781,"line_start":334,"line_end":334,"column_start":1,"column_end":37}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16782,"byte_end":16813,"line_start":335,"line_end":335,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16814,"byte_end":16837,"line_start":336,"line_end":336,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16838,"byte_end":16845,"line_start":337,"line_end":337,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16846,"byte_end":16868,"line_start":338,"line_end":338,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16869,"byte_end":16876,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16877,"byte_end":16880,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16881,"byte_end":16931,"line_start":341,"line_end":341,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16932,"byte_end":16935,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16936,"byte_end":16947,"line_start":343,"line_end":343,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16948,"byte_end":16981,"line_start":344,"line_end":344,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":16982,"byte_end":17015,"line_start":345,"line_end":345,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17016,"byte_end":17049,"line_start":346,"line_end":346,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17050,"byte_end":17057,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17058,"byte_end":17061,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17062,"byte_end":17142,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17143,"byte_end":17185,"line_start":350,"line_end":350,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17186,"byte_end":17230,"line_start":351,"line_end":351,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17231,"byte_end":17276,"line_start":352,"line_end":352,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17277,"byte_end":17324,"line_start":353,"line_end":353,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17325,"byte_end":17363,"line_start":354,"line_end":354,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17364,"byte_end":17434,"line_start":355,"line_end":355,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18000,"byte_end":18007,"line_start":374,"line_end":374,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17682,"byte_end":17737,"line_start":368,"line_end":368,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17738,"byte_end":17741,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17742,"byte_end":17817,"line_start":370,"line_end":370,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17818,"byte_end":17898,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":17899,"byte_end":17958,"line_start":372,"line_end":372,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18678,"byte_end":18689,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FrameTooBig","qualname":"::codec::length_delimited::FrameTooBig","value":"FrameTooBig {  }","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18593,"byte_end":18666,"line_start":395,"line_end":395,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19034,"byte_end":19054,"line_start":409,"line_end":409,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18710,"byte_end":18784,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18785,"byte_end":18788,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18789,"byte_end":18868,"line_start":402,"line_end":402,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18869,"byte_end":18912,"line_start":403,"line_end":403,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18913,"byte_end":18916,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18917,"byte_end":18970,"line_start":405,"line_end":405,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18971,"byte_end":18974,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":18975,"byte_end":19005,"line_start":407,"line_end":407,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19398,"byte_end":19401,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19307,"byte_end":19386,"line_start":426,"line_end":426,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19697,"byte_end":19713,"line_start":438,"line_end":438,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19525,"byte_end":19566,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19571,"byte_end":19574,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19579,"byte_end":19652,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19657,"byte_end":19685,"line_start":437,"line_end":437,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":20134,"byte_end":20154,"line_start":448,"line_end":448,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19778,"byte_end":19812,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19817,"byte_end":19820,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19825,"byte_end":19895,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19900,"byte_end":19975,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19980,"byte_end":20052,"line_start":446,"line_end":446,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":20057,"byte_end":20122,"line_start":447,"line_end":447,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25378,"byte_end":25381,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24823,"byte_end":24898,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24903,"byte_end":24914,"line_start":607,"line_end":607,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24919,"byte_end":24922,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24927,"byte_end":24941,"line_start":609,"line_end":609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24946,"byte_end":24949,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24954,"byte_end":24961,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24966,"byte_end":24991,"line_start":612,"line_end":612,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24996,"byte_end":25027,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25032,"byte_end":25080,"line_start":614,"line_end":614,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25085,"byte_end":25088,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25093,"byte_end":25134,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25139,"byte_end":25157,"line_start":617,"line_end":617,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25162,"byte_end":25193,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25198,"byte_end":25229,"line_start":619,"line_end":619,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25234,"byte_end":25263,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25268,"byte_end":25288,"line_start":621,"line_end":621,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25293,"byte_end":25315,"line_start":622,"line_end":622,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25320,"byte_end":25327,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25332,"byte_end":25354,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":25359,"byte_end":25366,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26579,"byte_end":26589,"line_start":668,"line_end":668,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26045,"byte_end":26094,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26099,"byte_end":26102,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26107,"byte_end":26139,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26144,"byte_end":26147,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26152,"byte_end":26220,"line_start":652,"line_end":652,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26225,"byte_end":26228,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26233,"byte_end":26247,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26252,"byte_end":26255,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26260,"byte_end":26267,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26272,"byte_end":26297,"line_start":657,"line_end":657,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26302,"byte_end":26333,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26338,"byte_end":26386,"line_start":659,"line_end":659,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26391,"byte_end":26394,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26399,"byte_end":26440,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26445,"byte_end":26463,"line_start":662,"line_end":662,"column_start":5,"column_end":23}},{"value":"/     .big_endian()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26468,"byte_end":26489,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26494,"byte_end":26516,"line_start":664,"line_end":664,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26521,"byte_end":26528,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26533,"byte_end":26555,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26560,"byte_end":26567,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27234,"byte_end":27247,"line_start":693,"line_end":693,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26688,"byte_end":26740,"line_start":673,"line_end":673,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26745,"byte_end":26748,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26753,"byte_end":26791,"line_start":675,"line_end":675,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26796,"byte_end":26799,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26804,"byte_end":26872,"line_start":677,"line_end":677,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26877,"byte_end":26880,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26885,"byte_end":26899,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26904,"byte_end":26907,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26912,"byte_end":26919,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26924,"byte_end":26949,"line_start":682,"line_end":682,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26954,"byte_end":26985,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":26990,"byte_end":27038,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27043,"byte_end":27046,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27051,"byte_end":27092,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27097,"byte_end":27115,"line_start":687,"line_end":687,"column_start":5,"column_end":23}},{"value":"/     .little_endian()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27120,"byte_end":27144,"line_start":688,"line_end":688,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27149,"byte_end":27171,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27176,"byte_end":27183,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27188,"byte_end":27210,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27215,"byte_end":27222,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27893,"byte_end":27906,"line_start":718,"line_end":718,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27347,"byte_end":27399,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27404,"byte_end":27407,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27412,"byte_end":27450,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27455,"byte_end":27458,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27463,"byte_end":27531,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27536,"byte_end":27539,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27544,"byte_end":27558,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27563,"byte_end":27566,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27571,"byte_end":27578,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27583,"byte_end":27608,"line_start":707,"line_end":707,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27613,"byte_end":27644,"line_start":708,"line_end":708,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27649,"byte_end":27697,"line_start":709,"line_end":709,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27702,"byte_end":27705,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27710,"byte_end":27751,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27756,"byte_end":27774,"line_start":712,"line_end":712,"column_start":5,"column_end":23}},{"value":"/     .native_endian()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27779,"byte_end":27803,"line_start":713,"line_end":713,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27808,"byte_end":27830,"line_start":714,"line_end":714,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27835,"byte_end":27842,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27847,"byte_end":27869,"line_start":716,"line_end":716,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":27874,"byte_end":27881,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28986,"byte_end":29002,"line_start":753,"line_end":753,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28075,"byte_end":28104,"line_start":726,"line_end":726,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28109,"byte_end":28112,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28117,"byte_end":28189,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28194,"byte_end":28219,"line_start":729,"line_end":729,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28224,"byte_end":28227,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28232,"byte_end":28304,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28309,"byte_end":28378,"line_start":732,"line_end":732,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28383,"byte_end":28456,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28461,"byte_end":28473,"line_start":734,"line_end":734,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28478,"byte_end":28481,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28486,"byte_end":28561,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ of the `FrameTooBig` type will be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28566,"byte_end":28613,"line_start":737,"line_end":737,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28618,"byte_end":28621,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28626,"byte_end":28640,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28645,"byte_end":28648,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28653,"byte_end":28660,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28665,"byte_end":28690,"line_start":742,"line_end":742,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28695,"byte_end":28726,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28731,"byte_end":28779,"line_start":744,"line_end":744,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28784,"byte_end":28787,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28792,"byte_end":28833,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28838,"byte_end":28856,"line_start":747,"line_end":747,"column_start":5,"column_end":23}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28861,"byte_end":28896,"line_start":748,"line_end":748,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28901,"byte_end":28923,"line_start":749,"line_end":749,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28928,"byte_end":28935,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28940,"byte_end":28962,"line_start":751,"line_end":751,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":28967,"byte_end":28974,"line_start":752,"line_end":752,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29676,"byte_end":29695,"line_start":778,"line_end":778,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29099,"byte_end":29162,"line_start":758,"line_end":758,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29167,"byte_end":29170,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29175,"byte_end":29226,"line_start":760,"line_end":760,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29231,"byte_end":29234,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29239,"byte_end":29307,"line_start":762,"line_end":762,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29312,"byte_end":29315,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29320,"byte_end":29334,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29339,"byte_end":29342,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29347,"byte_end":29354,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29359,"byte_end":29384,"line_start":767,"line_end":767,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29389,"byte_end":29420,"line_start":768,"line_end":768,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29425,"byte_end":29473,"line_start":769,"line_end":769,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29478,"byte_end":29481,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29486,"byte_end":29527,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29532,"byte_end":29550,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29555,"byte_end":29586,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29591,"byte_end":29613,"line_start":774,"line_end":774,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29618,"byte_end":29625,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29630,"byte_end":29652,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29657,"byte_end":29664,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30367,"byte_end":30386,"line_start":802,"line_end":802,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29864,"byte_end":29930,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29935,"byte_end":29938,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":29943,"byte_end":29998,"line_start":786,"line_end":786,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30003,"byte_end":30006,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30011,"byte_end":30025,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30030,"byte_end":30033,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30038,"byte_end":30045,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30050,"byte_end":30075,"line_start":791,"line_end":791,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30080,"byte_end":30111,"line_start":792,"line_end":792,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30116,"byte_end":30164,"line_start":793,"line_end":793,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30169,"byte_end":30172,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30177,"byte_end":30218,"line_start":795,"line_end":795,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30223,"byte_end":30241,"line_start":796,"line_end":796,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30246,"byte_end":30277,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30282,"byte_end":30304,"line_start":798,"line_end":798,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30309,"byte_end":30316,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30321,"byte_end":30343,"line_start":800,"line_end":800,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30348,"byte_end":30355,"line_start":801,"line_end":801,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30953,"byte_end":30970,"line_start":824,"line_end":824,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30489,"byte_end":30562,"line_start":807,"line_end":807,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30567,"byte_end":30585,"line_start":808,"line_end":808,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30590,"byte_end":30593,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30598,"byte_end":30612,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30617,"byte_end":30620,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30625,"byte_end":30632,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30637,"byte_end":30662,"line_start":813,"line_end":813,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30667,"byte_end":30698,"line_start":814,"line_end":814,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30703,"byte_end":30751,"line_start":815,"line_end":815,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30756,"byte_end":30759,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30764,"byte_end":30805,"line_start":817,"line_end":817,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30810,"byte_end":30828,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30833,"byte_end":30863,"line_start":819,"line_end":819,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30868,"byte_end":30890,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30895,"byte_end":30902,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30907,"byte_end":30929,"line_start":822,"line_end":822,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":30934,"byte_end":30941,"line_start":823,"line_end":823,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31633,"byte_end":31641,"line_start":849,"line_end":849,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31071,"byte_end":31134,"line_start":829,"line_end":829,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31139,"byte_end":31142,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31147,"byte_end":31208,"line_start":831,"line_end":831,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31213,"byte_end":31216,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31221,"byte_end":31275,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31280,"byte_end":31283,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31288,"byte_end":31302,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31307,"byte_end":31310,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31315,"byte_end":31322,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31327,"byte_end":31352,"line_start":838,"line_end":838,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31357,"byte_end":31388,"line_start":839,"line_end":839,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31393,"byte_end":31441,"line_start":840,"line_end":840,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31446,"byte_end":31449,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31454,"byte_end":31495,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31500,"byte_end":31518,"line_start":843,"line_end":843,"column_start":5,"column_end":23}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31523,"byte_end":31543,"line_start":844,"line_end":844,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31548,"byte_end":31570,"line_start":845,"line_end":845,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31575,"byte_end":31582,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31587,"byte_end":31609,"line_start":847,"line_end":847,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31614,"byte_end":31621,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32210,"byte_end":32219,"line_start":871,"line_end":871,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31739,"byte_end":31802,"line_start":854,"line_end":854,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31807,"byte_end":31810,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31815,"byte_end":31829,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31834,"byte_end":31837,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31842,"byte_end":31849,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31854,"byte_end":31879,"line_start":859,"line_end":859,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31884,"byte_end":31915,"line_start":860,"line_end":860,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31920,"byte_end":31968,"line_start":861,"line_end":861,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31973,"byte_end":31994,"line_start":862,"line_end":862,"column_start":5,"column_end":26}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":31999,"byte_end":32017,"line_start":863,"line_end":863,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32022,"byte_end":32053,"line_start":864,"line_end":864,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32058,"byte_end":32089,"line_start":865,"line_end":865,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32094,"byte_end":32123,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32128,"byte_end":32148,"line_start":867,"line_end":867,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32153,"byte_end":32174,"line_start":868,"line_end":868,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32179,"byte_end":32186,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32191,"byte_end":32198,"line_start":870,"line_end":870,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32888,"byte_end":32896,"line_start":897,"line_end":897,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32371,"byte_end":32424,"line_start":878,"line_end":878,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32429,"byte_end":32432,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32437,"byte_end":32451,"line_start":880,"line_end":880,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32456,"byte_end":32459,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32464,"byte_end":32471,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32476,"byte_end":32501,"line_start":883,"line_end":883,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32506,"byte_end":32537,"line_start":884,"line_end":884,"column_start":5,"column_end":36}},{"value":"/ use tokio::codec::length_delimited::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32542,"byte_end":32590,"line_start":885,"line_end":885,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32595,"byte_end":32598,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32603,"byte_end":32644,"line_start":887,"line_end":887,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32649,"byte_end":32667,"line_start":888,"line_end":888,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32672,"byte_end":32703,"line_start":889,"line_end":889,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32708,"byte_end":32739,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32744,"byte_end":32773,"line_start":891,"line_end":891,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32778,"byte_end":32798,"line_start":892,"line_end":892,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32803,"byte_end":32825,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32830,"byte_end":32837,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32842,"byte_end":32864,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":32869,"byte_end":32876,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33552,"byte_end":33561,"line_start":921,"line_end":921,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33060,"byte_end":33114,"line_start":904,"line_end":904,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33119,"byte_end":33122,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33127,"byte_end":33141,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33146,"byte_end":33149,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33154,"byte_end":33161,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33166,"byte_end":33191,"line_start":909,"line_end":909,"column_start":5,"column_end":30}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33196,"byte_end":33221,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33226,"byte_end":33258,"line_start":911,"line_end":911,"column_start":5,"column_end":37}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33263,"byte_end":33304,"line_start":912,"line_end":912,"column_start":5,"column_end":46}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33309,"byte_end":33335,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33340,"byte_end":33384,"line_start":914,"line_end":914,"column_start":5,"column_end":49}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33389,"byte_end":33425,"line_start":915,"line_end":915,"column_start":5,"column_end":41}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33430,"byte_end":33461,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33466,"byte_end":33489,"line_start":917,"line_end":917,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33494,"byte_end":33501,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33506,"byte_end":33528,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33533,"byte_end":33540,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34253,"byte_end":34263,"line_start":946,"line_end":946,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33722,"byte_end":33771,"line_start":928,"line_end":928,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33776,"byte_end":33779,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33784,"byte_end":33798,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33803,"byte_end":33806,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33811,"byte_end":33818,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33823,"byte_end":33848,"line_start":933,"line_end":933,"column_start":5,"column_end":30}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33853,"byte_end":33878,"line_start":934,"line_end":934,"column_start":5,"column_end":30}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33883,"byte_end":33928,"line_start":935,"line_end":935,"column_start":5,"column_end":50}},{"value":"/ # use tokio::codec::length_delimited;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33933,"byte_end":33974,"line_start":936,"line_end":936,"column_start":5,"column_end":46}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":33979,"byte_end":34005,"line_start":937,"line_end":937,"column_start":5,"column_end":31}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34010,"byte_end":34066,"line_start":938,"line_end":938,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34071,"byte_end":34084,"line_start":939,"line_end":939,"column_start":5,"column_end":18}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34089,"byte_end":34125,"line_start":940,"line_end":940,"column_start":5,"column_end":41}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34130,"byte_end":34161,"line_start":941,"line_end":941,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34166,"byte_end":34190,"line_start":942,"line_end":942,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34195,"byte_end":34202,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34207,"byte_end":34229,"line_start":944,"line_end":944,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34234,"byte_end":34241,"line_start":945,"line_end":945,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" Asynchronous filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3435,"byte_end":3457,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/ Asynchronous filesystem manipulation operations.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35161,"byte_end":35213,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35214,"byte_end":35217,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains basic methods and types for manipulating the contents","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35218,"byte_end":35296,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ of the local filesystem from within the context of the Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35297,"byte_end":35370,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35371,"byte_end":35374,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Unlike *most* other Tokio APIs, the filesystem APIs **must** be used from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35375,"byte_end":35452,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ the context of the Tokio runtime as they require Tokio specific features to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35453,"byte_end":35532,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/fs.rs","byte_start":35533,"byte_end":35546,"line_start":8,"line_end":8,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":121},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3470,"byte_end":3492,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":35835,"byte_end":35856,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":35857,"byte_end":35860,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":35861,"byte_end":35932,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which extend the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":35933,"byte_end":36007,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ `Read` and `Write` traits of the standard library.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36008,"byte_end":36062,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36063,"byte_end":36066,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36067,"byte_end":36097,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36098,"byte_end":36101,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`] and [`AsyncWrite`] must only be implemented for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36102,"byte_end":36167,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36168,"byte_end":36242,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36243,"byte_end":36316,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36317,"byte_end":36377,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36378,"byte_end":36381,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36382,"byte_end":36413,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36414,"byte_end":36417,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36418,"byte_end":36498,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36499,"byte_end":36575,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36576,"byte_end":36623,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36624,"byte_end":36627,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Unlike *most* other Tokio APIs, the standard input / output APIs","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36628,"byte_end":36696,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ **must** be used from the context of the Tokio runtime as they require","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36697,"byte_end":36771,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ Tokio specific features to function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36772,"byte_end":36812,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36813,"byte_end":36816,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [input]: fn.stdin.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36817,"byte_end":36843,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ [output]: fn.stdout.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36844,"byte_end":36872,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [error]: fn.stderr.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36873,"byte_end":36900,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36901,"byte_end":36904,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Utility functions","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36905,"byte_end":36928,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36929,"byte_end":36932,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Utilities functions are provided for working with [`AsyncRead`] /","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":36933,"byte_end":37002,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ [`AsyncWrite`] types. For example, [`copy`] asynchronously copies all","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37003,"byte_end":37076,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ data from a source to a destination.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37077,"byte_end":37117,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37118,"byte_end":37121,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37122,"byte_end":37144,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37145,"byte_end":37148,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Read`], [`Write`], [`Error`], [`ErrorKind`], and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37149,"byte_end":37217,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ [`Result`] are re-exported from `std::io` for ease of use.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37218,"byte_end":37280,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37281,"byte_end":37284,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37285,"byte_end":37324,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37325,"byte_end":37366,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ [`copy`]: fn.copy.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37367,"byte_end":37393,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37394,"byte_end":37423,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37424,"byte_end":37455,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37456,"byte_end":37488,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37489,"byte_end":37527,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/ [`Result`]: type.Result.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/io.rs","byte_start":37528,"byte_end":37560,"line_start":46,"line_end":46,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(any(feature = \"tcp\", feature = \"udp\", feature = \"uds\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3505,"byte_end":3567,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38132,"byte_end":38170,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38171,"byte_end":38174,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38175,"byte_end":38258,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38259,"byte_end":38324,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38325,"byte_end":38328,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38329,"byte_end":38347,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38348,"byte_end":38351,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38352,"byte_end":38440,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] and [`UdpFramed`] provide functionality for communication over UDP","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38441,"byte_end":38527,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38528,"byte_end":38616,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38617,"byte_end":38675,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] and [`UnixDatagramFramed`] provide functionality for communication","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38676,"byte_end":38765,"line_start":12,"line_end":12,"column_start":1,"column_end":90}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38766,"byte_end":38831,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38833,"byte_end":38836,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38837,"byte_end":38881,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38882,"byte_end":38922,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38923,"byte_end":38963,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ [`UdpFramed`]: struct.UdpFramed.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":38964,"byte_end":39004,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39005,"byte_end":39051,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ [`UnixStream`]: struct.UnixStream.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39052,"byte_end":39094,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ [`UnixDatagram`]: struct.UnixDatagram.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39095,"byte_end":39141,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ [`UnixDatagramFramed`]: struct.UnixDatagramFramed.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39142,"byte_end":39200,"line_start":23,"line_end":23,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39234,"byte_end":39237,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"tcp","qualname":"::net::tcp","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" TCP bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39202,"byte_end":39225,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/ TCP bindings for `tokio`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39244,"byte_end":39273,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39278,"byte_end":39281,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Connecting to an address, via TCP, can be done using [`TcpStream`]'s","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39286,"byte_end":39358,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ [`connect`] method, which returns [`ConnectFuture`]. `ConnectFuture`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39363,"byte_end":39435,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ implements a future which returns a `TcpStream`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39440,"byte_end":39492,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39497,"byte_end":39500,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ To listen on an address [`TcpListener`] can be used. `TcpListener`'s","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39505,"byte_end":39577,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ [`incoming`][incoming_method] method can be used to accept new connections.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39582,"byte_end":39661,"line_start":34,"line_end":34,"column_start":5,"column_end":84}},{"value":"/ It return the [`Incoming`] struct, which implements a stream which returns","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39666,"byte_end":39744,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/ `TcpStream`s.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39749,"byte_end":39766,"line_start":36,"line_end":36,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39771,"byte_end":39774,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39779,"byte_end":39819,"line_start":38,"line_end":38,"column_start":5,"column_end":45}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39824,"byte_end":39877,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/ [`ConnectFuture`]: struct.ConnectFuture.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39882,"byte_end":39930,"line_start":40,"line_end":40,"column_start":5,"column_end":53}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39935,"byte_end":39979,"line_start":41,"line_end":41,"column_start":5,"column_end":49}},{"value":"/ [incoming_method]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":39984,"byte_end":40046,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ [`Incoming`]: struct.Incoming.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40051,"byte_end":40089,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":168},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40353,"byte_end":40366,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"ConnectFuture","qualname":"::net::ConnectFuture","value":"self::tcp::ConnectFuture","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40236,"byte_end":40259,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"deprecated(note = \"use `tokio::net::tcp::ConnectFuture` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40260,"byte_end":40328,"line_start":50,"line_end":50,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40507,"byte_end":40515,"line_start":56,"line_end":56,"column_start":10,"column_end":18},"name":"Incoming","qualname":"::net::Incoming","value":"self::tcp::Incoming","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40395,"byte_end":40418,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"deprecated(note = \"use `tokio::net::tcp::Incoming` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40419,"byte_end":40482,"line_start":54,"line_end":54,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40572,"byte_end":40575,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"name":"udp","qualname":"::net::udp","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" UDP bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40540,"byte_end":40563,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ UDP bindings for `tokio`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40582,"byte_end":40611,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40616,"byte_end":40619,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The main struct for UDP is the [`UdpSocket`], which represents a UDP socket.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40624,"byte_end":40704,"line_start":62,"line_end":62,"column_start":5,"column_end":85}},{"value":"/ Reading and writing to it can be done using futures, which return the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40709,"byte_end":40782,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ [`RecvDgram`] and [`SendDgram`] structs respectively.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40787,"byte_end":40844,"line_start":64,"line_end":64,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40849,"byte_end":40852,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For convenience it's also possible to convert raw datagrams into higher-level","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40857,"byte_end":40938,"line_start":66,"line_end":66,"column_start":5,"column_end":86}},{"value":"/ frames.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40943,"byte_end":40954,"line_start":67,"line_end":67,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40959,"byte_end":40962,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":40967,"byte_end":41007,"line_start":69,"line_end":69,"column_start":5,"column_end":45}},{"value":"/ [`RecvDgram`]: struct.RecvDgram.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41012,"byte_end":41052,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/ [`SendDgram`]: struct.SendDgram.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41057,"byte_end":41097,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/ [`UdpFramed`]: struct.UdpFramed.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41102,"byte_end":41142,"line_start":72,"line_end":72,"column_start":5,"column_end":45}},{"value":"/ [`framed`]: struct.UdpSocket.html#method.framed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41147,"byte_end":41198,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41451,"byte_end":41460,"line_start":82,"line_end":82,"column_start":10,"column_end":19},"name":"RecvDgram","qualname":"::net::RecvDgram","value":"self::udp::RecvDgram<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41338,"byte_end":41361,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"deprecated(note = \"use `tokio::net::udp::RecvDgram` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41362,"byte_end":41426,"line_start":80,"line_end":80,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41604,"byte_end":41613,"line_start":86,"line_end":86,"column_start":10,"column_end":19},"name":"SendDgram","qualname":"::net::SendDgram","value":"self::udp::SendDgram<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41491,"byte_end":41514,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"deprecated(note = \"use `tokio::net::udp::SendDgram` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41515,"byte_end":41579,"line_start":84,"line_end":84,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":183},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41688,"byte_end":41692,"line_start":89,"line_end":89,"column_start":9,"column_end":13},"name":"unix","qualname":"::net::unix","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" Unix domain socket bindings for `tokio` (only available on unix systems).\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41645,"byte_end":41679,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ Unix domain socket bindings for `tokio` (only available on unix systems).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/net.rs","byte_start":41699,"byte_end":41776,"line_start":90,"line_end":90,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":199},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42060,"byte_end":42107,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42108,"byte_end":42111,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42112,"byte_end":42188,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42189,"byte_end":42266,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42267,"byte_end":42319,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42320,"byte_end":42323,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42324,"byte_end":42331,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42332,"byte_end":42358,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42359,"byte_end":42366,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42367,"byte_end":42370,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/prelude.rs","byte_start":42371,"byte_end":42445,"line_start":11,"line_end":11,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":220},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reactor","qualname":"::reactor","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":306}],"decl_id":null,"docs":" Event loop that drives Tokio I/O resources.","sig":null,"attributes":[{"value":"cfg(feature = \"reactor\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3598,"byte_end":3625,"line_start":123,"line_end":123,"column_start":1,"column_end":28}},{"value":"/ Event loop that drives Tokio I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":42869,"byte_end":42916,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":42917,"byte_end":42920,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains [`Reactor`], which is the event loop that drives all","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":42921,"byte_end":42998,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ Tokio I/O resources. It is the reactor's job to receive events from the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":42999,"byte_end":43074,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ operating system ([epoll], [kqueue], [IOCP], etc...) and forward them to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43075,"byte_end":43151,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ waiting tasks. It is the bridge between operating system and the futures","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43152,"byte_end":43228,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ model.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43229,"byte_end":43239,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43240,"byte_end":43243,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43244,"byte_end":43258,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43259,"byte_end":43262,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When using Tokio, all operations are asynchronous and represented by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43263,"byte_end":43335,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ futures. These futures, representing the application logic, are scheduled by","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43336,"byte_end":43416,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ an executor (see [runtime model] for more details). Executors wait for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43417,"byte_end":43491,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ notifications before scheduling the future for execution time, i.e., nothing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43492,"byte_end":43572,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ happens until an event is received indicating that the task can make","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43573,"byte_end":43645,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ progress.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43646,"byte_end":43659,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43660,"byte_end":43663,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The reactor receives events from the operating system and notifies the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43664,"byte_end":43738,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43739,"byte_end":43752,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43753,"byte_end":43756,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Let's start with a basic example, establishing a TCP connection.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43757,"byte_end":43825,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43826,"byte_end":43829,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43830,"byte_end":43841,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43842,"byte_end":43867,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43868,"byte_end":43884,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43885,"byte_end":43911,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43912,"byte_end":43942,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43943,"byte_end":43946,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let addr = \"93.184.216.34:9243\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":43947,"byte_end":44000,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44001,"byte_end":44004,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let connect_future = TcpStream::connect(&addr);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44005,"byte_end":44056,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44057,"byte_end":44060,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let task = connect_future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44061,"byte_end":44090,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/     .and_then(|socket| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44091,"byte_end":44119,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/         println!(\"successfully connected\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44120,"byte_end":44167,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/         Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44168,"byte_end":44186,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/     })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44187,"byte_end":44197,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/     .map_err(|e| println!(\"failed to connect; err={:?}\", e));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44198,"byte_end":44263,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44264,"byte_end":44267,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ tokio::run(task);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44268,"byte_end":44289,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44290,"byte_end":44297,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44298,"byte_end":44316,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44317,"byte_end":44324,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44325,"byte_end":44328,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Establishing a TCP connection usually cannot be completed immediately.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44329,"byte_end":44403,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ [`TcpStream::connect`] does not block the current thread. Instead, it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44404,"byte_end":44477,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ returns a [future][connect-future] that resolves once the TCP connection has","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44478,"byte_end":44558,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ been established. The connect future itself has no way of knowing when the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44559,"byte_end":44637,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ TCP connection has been established.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44638,"byte_end":44678,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44679,"byte_end":44682,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Before returning the future, [`TcpStream::connect`] registers the socket","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44683,"byte_end":44759,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ with a reactor. This registration process, handled by [`Registration`], is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44760,"byte_end":44838,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ what links the [`TcpStream`] with the [`Reactor`] instance. At this point,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44839,"byte_end":44917,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ the reactor starts listening for connection events from the operating system","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44918,"byte_end":44998,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ for that socket.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":44999,"byte_end":45019,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45020,"byte_end":45023,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Once the connect future is passed to [`tokio::run`], it is spawned onto a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45024,"byte_end":45101,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ thread pool. The thread pool waits until it is notified that the connection","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45102,"byte_end":45181,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ has completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45182,"byte_end":45200,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45201,"byte_end":45204,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ When the TCP connection is established, the reactor receives an event from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45205,"byte_end":45283,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ the operating system. It then notifies the thread pool, telling it that the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45284,"byte_end":45363,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ connect future can complete. At this point, the thread pool will schedule","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45364,"byte_end":45441,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ the task to run on one of its worker threads. This results in the `and_then`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45442,"byte_end":45522,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ closure to get executed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45523,"byte_end":45551,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45552,"byte_end":45555,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Lazy registration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45556,"byte_end":45580,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45581,"byte_end":45584,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Notice how the snippet above does not explicitly reference a reactor. When","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45585,"byte_end":45663,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ [`TcpStream::connect`] is called, it registers the socket with a reactor,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45664,"byte_end":45741,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ but no reactor is specified. This works because the registration process","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45742,"byte_end":45818,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ mentioned above is actually lazy. It doesn't *actually* happen in the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45819,"byte_end":45892,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ [`connect`] function. Instead, the registration is established the first","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45893,"byte_end":45969,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ time that the task is polled (again, see [runtime model]).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":45970,"byte_end":46032,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46033,"byte_end":46036,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A reactor instance is automatically made available when using the Tokio","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46037,"byte_end":46112,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ [runtime], which is done using [`tokio::run`]. The Tokio runtime's executor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46113,"byte_end":46192,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ sets a thread-local variable referencing the associated [`Reactor`] instance","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46193,"byte_end":46273,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ and [`Handle::current`] (used by [`Registration`]) returns the reference.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46274,"byte_end":46351,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46352,"byte_end":46355,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46356,"byte_end":46377,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46378,"byte_end":46381,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The reactor implementation uses [`mio`] to interface with the operating","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46382,"byte_end":46457,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ system's event queue. A call to [`Reactor::poll`] results in a single","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46458,"byte_end":46531,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"/ call to [`Poll::poll`] which in turn results in a single call to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46532,"byte_end":46604,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/ operating system's selector.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46605,"byte_end":46637,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46638,"byte_end":46641,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The reactor maintains state for each registered I/O resource. This tracks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46642,"byte_end":46719,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the executor task to notify when events are provided by the operating","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46720,"byte_end":46793,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ system's selector. This state is stored in a `Sync` data structure and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46794,"byte_end":46868,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/ referenced by [`Registration`]. When the [`Registration`] instance is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46869,"byte_end":46942,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ dropped, this state is cleaned up. Because the state is stored in a `Sync`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":46943,"byte_end":47021,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ data structure, the [`Registration`] instance is able to be moved to other","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47022,"byte_end":47100,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ threads.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47101,"byte_end":47113,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47114,"byte_end":47117,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ By default, a runtime's default reactor runs on a background thread. This","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47118,"byte_end":47195,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ ensures that application code cannot significantly impact the reactor's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47196,"byte_end":47271,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ responsiveness.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47272,"byte_end":47291,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47292,"byte_end":47295,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Integrating with the reactor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47296,"byte_end":47331,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47332,"byte_end":47335,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Tokio comes with a number of I/O resources, like TCP and UDP sockets, that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47336,"byte_end":47414,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ automatically integrate with the reactor. However, library authors or","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47415,"byte_end":47488,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ applications may wish to implement their own resources that are also backed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47489,"byte_end":47568,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ by the reactor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47569,"byte_end":47588,"line_start":105,"line_end":105,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47589,"byte_end":47592,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ There are a couple of ways to do this.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47593,"byte_end":47635,"line_start":107,"line_end":107,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47636,"byte_end":47639,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ If the custom I/O resource implements [`mio::Evented`] and implements","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47640,"byte_end":47713,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/ [`std::io::Read`] and / or [`std::io::Write`], then [`PollEvented`] is the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47714,"byte_end":47792,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ most suited.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47793,"byte_end":47809,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47810,"byte_end":47813,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Otherwise, [`Registration`] can be used directly. This provides the lowest","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47814,"byte_end":47892,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ level primitive needed for integrating with the reactor: a stream of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47893,"byte_end":47965,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/ readiness events.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47966,"byte_end":47987,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47988,"byte_end":47991,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Reactor`]: struct.Reactor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":47992,"byte_end":48028,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ [`Registration`]: struct.Registration.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48029,"byte_end":48075,"line_start":118,"line_end":118,"column_start":1,"column_end":47}},{"value":"/ [runtime model]: https://tokio.rs/docs/getting-started/runtime-model/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48076,"byte_end":48149,"line_start":119,"line_end":119,"column_start":1,"column_end":74}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48150,"byte_end":48212,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48213,"byte_end":48285,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48286,"byte_end":48377,"line_start":122,"line_end":122,"column_start":1,"column_end":92}},{"value":"/ [`TcpStream::connect`]: ../net/struct.TcpStream.html#method.connect","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48378,"byte_end":48449,"line_start":123,"line_end":123,"column_start":1,"column_end":72}},{"value":"/ [`connect`]: ../net/struct.TcpStream.html#method.connect","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48450,"byte_end":48510,"line_start":124,"line_end":124,"column_start":1,"column_end":61}},{"value":"/ [connect-future]: ../net/struct.ConnectFuture.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48511,"byte_end":48565,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/ [`tokio::run`]: ../runtime/fn.run.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48566,"byte_end":48608,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48609,"byte_end":48656,"line_start":127,"line_end":127,"column_start":1,"column_end":48}},{"value":"/ [runtime]: ../runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48657,"byte_end":48682,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/ [`Handle::current`]: struct.Handle.html#method.current","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48683,"byte_end":48741,"line_start":129,"line_end":129,"column_start":1,"column_end":59}},{"value":"/ [`mio`]: https://github.com/carllerche/mio","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48742,"byte_end":48788,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ [`Reactor::poll`]: struct.Reactor.html#method.poll","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48789,"byte_end":48843,"line_start":131,"line_end":131,"column_start":1,"column_end":55}},{"value":"/ [`Poll::poll`]: https://docs.rs/mio/0.6/mio/struct.Poll.html#method.poll","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48844,"byte_end":48920,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ [`mio::Evented`]: https://docs.rs/mio/0.6/mio/trait.Evented.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48921,"byte_end":48989,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/ [`PollEvented`]: struct.PollEvented.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":48990,"byte_end":49034,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/ [`std::io::Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49035,"byte_end":49106,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ [`std::io::Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/mod.rs","byte_start":49107,"byte_end":49180,"line_start":136,"line_end":136,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50180,"byte_end":50191,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"PollEvented","qualname":"::reactor::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"PollEvented2 instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50092,"byte_end":50153,"line_start":24,"line_end":24,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50801,"byte_end":50804,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E, &Handle) -> io::Result<PollEvented<E>> where E: Evented","parent":null,"children":[],"decl_id":null,"docs":" Creates a new readiness stream associated with the provided\n `loop_handle` and for the given `source`.\n","sig":null,"attributes":[{"value":"/ Creates a new readiness stream associated with the provided","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50676,"byte_end":50739,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ `loop_handle` and for the given `source`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50744,"byte_end":50789,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51935,"byte_end":51944,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<PollEvented<E>>::poll_read","value":"pub fn poll_read(&mut Self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Tests to see if this source is ready to be read from or not.","sig":null,"attributes":[{"value":"/ Tests to see if this source is ready to be read from or not.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51289,"byte_end":51353,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51358,"byte_end":51361,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If this stream is not ready for a read then `Async::NotReady` will be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51366,"byte_end":51439,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ returned and the current task will be scheduled to receive a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51444,"byte_end":51508,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/ notification when the stream is readable again. In other words, this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51513,"byte_end":51585,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ method is only safe to call from within the context of a future's task,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51590,"byte_end":51665,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ typically done in a `Future::poll` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51670,"byte_end":51716,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51721,"byte_end":51724,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ This is mostly equivalent to `self.poll_ready(Ready::readable())`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51729,"byte_end":51799,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51804,"byte_end":51807,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51812,"byte_end":51824,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51829,"byte_end":51832,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51837,"byte_end":51909,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":51914,"byte_end":51923,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53566,"byte_end":53576,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<PollEvented<E>>::poll_write","value":"pub fn poll_write(&mut Self) -> Async<()>","parent":null,"children":[],"decl_id":null,"docs":" Tests to see if this source is ready to be written to or not.","sig":null,"attributes":[{"value":"/ Tests to see if this source is ready to be written to or not.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":52918,"byte_end":52983,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":52988,"byte_end":52991,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If this stream is not ready for a write then `Async::NotReady` will be returned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":52996,"byte_end":53079,"line_start":121,"line_end":121,"column_start":5,"column_end":88}},{"value":"/ and the current task will be scheduled to receive a notification when","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53084,"byte_end":53157,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ the stream is writable again. In other words, this method is only safe","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53162,"byte_end":53236,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ to call from within the context of a future's task, typically done in a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53241,"byte_end":53316,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ `Future::poll` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53321,"byte_end":53347,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53352,"byte_end":53355,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is mostly equivalent to `self.poll_ready(Ready::writable())`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53360,"byte_end":53430,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53435,"byte_end":53438,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53443,"byte_end":53455,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53460,"byte_end":53463,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53468,"byte_end":53540,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":53545,"byte_end":53554,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55552,"byte_end":55562,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<PollEvented<E>>::poll_ready","value":"pub fn poll_ready(&mut Self, Ready) -> Async<Ready>","parent":null,"children":[],"decl_id":null,"docs":" Test to see whether this source fulfills any condition listed in `mask`\n provided.","sig":null,"attributes":[{"value":"/ Test to see whether this source fulfills any condition listed in `mask`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54372,"byte_end":54447,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ provided.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54452,"byte_end":54465,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54470,"byte_end":54473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The `mask` given here is a mio `Ready` set of possible events. This can","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54478,"byte_end":54553,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ contain any events like read/write but also platform-specific events","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54558,"byte_end":54630,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ such as hup and error. The `mask` indicates events that are interested","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54635,"byte_end":54709,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ in being ready.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54714,"byte_end":54733,"line_start":168,"line_end":168,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54738,"byte_end":54741,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If any event in `mask` is ready then it is returned through","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54746,"byte_end":54809,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ `Async::Ready`. The `Ready` set returned is guaranteed to not be empty","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54814,"byte_end":54888,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ and contains all events that are currently ready in the `mask` provided.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54893,"byte_end":54969,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54974,"byte_end":54977,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If no events are ready in the `mask` provided then the current task is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":54982,"byte_end":55056,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ scheduled to receive a notification when any of them become ready. If","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55061,"byte_end":55134,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ the `writable` event is contained within `mask` then this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55139,"byte_end":55200,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ `PollEvented`'s `write` task will be blocked and otherwise the `read`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55205,"byte_end":55278,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ task will be blocked. This is generally only relevant if you're working","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55283,"byte_end":55358,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ with this `PollEvented` object on multiple tasks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55363,"byte_end":55416,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55421,"byte_end":55424,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55429,"byte_end":55441,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55446,"byte_end":55449,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55454,"byte_end":55526,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":55531,"byte_end":55540,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57964,"byte_end":57973,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"need_read","qualname":"<PollEvented<E>>::need_read","value":"pub fn need_read(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Indicates to this source of events that the corresponding I/O object is\n no longer readable, but it needs to be.","sig":null,"attributes":[{"value":"/ Indicates to this source of events that the corresponding I/O object is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56354,"byte_end":56429,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ no longer readable, but it needs to be.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56434,"byte_end":56477,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56482,"byte_end":56485,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_read`, is only safe to call from the context","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56490,"byte_end":56564,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ of a future's task (typically in a `Future::poll` implementation). It","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56569,"byte_end":56642,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ informs this readiness stream that the underlying object is no longer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56647,"byte_end":56720,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ readable, typically because a \"would block\" error was seen.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56725,"byte_end":56788,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56793,"byte_end":56796,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ *All* readiness bits associated with this stream except the writable bit","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56801,"byte_end":56877,"line_start":229,"line_end":229,"column_start":5,"column_end":81}},{"value":"/ will be reset when this method is called. The current task is then","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56882,"byte_end":56952,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ scheduled to receive a notification whenever anything changes other than","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":56957,"byte_end":57033,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ the writable bit. Note that this typically just means the readable bit","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57038,"byte_end":57112,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is used here, but if you're using a custom I/O object for events like","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57117,"byte_end":57190,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ hup/error this may also be relevant.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57195,"byte_end":57235,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57240,"byte_end":57243,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that it is also only valid to call this method if `poll_read`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57248,"byte_end":57318,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ previously indicated that the object is readable. That is, this function","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57323,"byte_end":57399,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ must always be paired with calls to `poll_read` previously.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57404,"byte_end":57467,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57472,"byte_end":57475,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57480,"byte_end":57492,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57497,"byte_end":57500,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the `Reactor` that this `PollEvented`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57505,"byte_end":57584,"line_start":242,"line_end":242,"column_start":5,"column_end":84}},{"value":"/ is associated with has gone away (been destroyed). The error means that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57589,"byte_end":57664,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ the ambient futures task could not be scheduled to receive a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57669,"byte_end":57733,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ notification and typically means that the error should be propagated","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57738,"byte_end":57810,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ outwards.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57815,"byte_end":57828,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57833,"byte_end":57836,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57841,"byte_end":57853,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57858,"byte_end":57861,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57866,"byte_end":57938,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":57943,"byte_end":57952,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59570,"byte_end":59580,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"need_write","qualname":"<PollEvented<E>>::need_write","value":"pub fn need_write(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Indicates to this source of events that the corresponding I/O object is\n no longer writable, but it needs to be.","sig":null,"attributes":[{"value":"/ Indicates to this source of events that the corresponding I/O object is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58214,"byte_end":58289,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ no longer writable, but it needs to be.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58294,"byte_end":58337,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58342,"byte_end":58345,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_write`, is only safe to call from the context","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58350,"byte_end":58425,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ of a future's task (typically in a `Future::poll` implementation). It","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58430,"byte_end":58503,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ informs this readiness stream that the underlying object is no longer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58508,"byte_end":58581,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ writable, typically because a \"would block\" error was seen.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58586,"byte_end":58649,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58654,"byte_end":58657,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The flag indicating that this stream is writable is unset and the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58662,"byte_end":58731,"line_start":271,"line_end":271,"column_start":5,"column_end":74}},{"value":"/ current task is scheduled to receive a notification when the stream is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58736,"byte_end":58810,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ then again writable.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58815,"byte_end":58839,"line_start":273,"line_end":273,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58844,"byte_end":58847,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that it is also only valid to call this method if `poll_write`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58852,"byte_end":58923,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/ previously indicated that the object is writable. That is, this function","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":58928,"byte_end":59004,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ must always be paired with calls to `poll_write` previously.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59009,"byte_end":59073,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59078,"byte_end":59081,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59086,"byte_end":59098,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59103,"byte_end":59106,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the `Reactor` that this `PollEvented`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59111,"byte_end":59190,"line_start":281,"line_end":281,"column_start":5,"column_end":84}},{"value":"/ is associated with has gone away (been destroyed). The error means that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59195,"byte_end":59270,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ the ambient futures task could not be scheduled to receive a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59275,"byte_end":59339,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ notification and typically means that the error should be propagated","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59344,"byte_end":59416,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ outwards.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59421,"byte_end":59434,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59439,"byte_end":59442,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59447,"byte_end":59459,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59464,"byte_end":59467,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59472,"byte_end":59544,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59549,"byte_end":59558,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59938,"byte_end":59944,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"handle","qualname":"<PollEvented<E>>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the event loop handle that this readiness stream\n is associated with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the event loop handle that this readiness stream","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59823,"byte_end":59898,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ is associated with.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59903,"byte_end":59926,"line_start":303,"line_end":303,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60111,"byte_end":60118,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":59997,"byte_end":60071,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60076,"byte_end":60099,"line_start":309,"line_end":309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60277,"byte_end":60284,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60162,"byte_end":60237,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60242,"byte_end":60265,"line_start":315,"line_end":315,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60420,"byte_end":60430,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> E","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PollEvented` and returns the underlying I/O object\n","sig":null,"attributes":[{"value":"/ Consumes the `PollEvented` and returns the underlying I/O object","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60340,"byte_end":60408,"line_start":320,"line_end":320,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61213,"byte_end":61223,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"deregister","qualname":"<PollEvented<E>>::deregister","value":"pub fn deregister(&Self) -> io::Result<()> where E: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this source of events from the reactor core specified.","sig":null,"attributes":[{"value":"/ Deregisters this source of events from the reactor core specified.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60471,"byte_end":60541,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60546,"byte_end":60549,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This method can optionally be called to unregister the underlying I/O","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60554,"byte_end":60627,"line_start":327,"line_end":327,"column_start":5,"column_end":78}},{"value":"/ object with the event loop that the `handle` provided points to.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60632,"byte_end":60700,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ Typically this method is not required as this automatically happens when","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60705,"byte_end":60781,"line_start":329,"line_end":329,"column_start":5,"column_end":81}},{"value":"/ `E` is dropped, but for some use cases the `E` object doesn't represent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60786,"byte_end":60861,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ an owned reference, so dropping it won't automatically unregister with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60866,"byte_end":60940,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ the event loop.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60945,"byte_end":60964,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60969,"byte_end":60972,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This consumes `self` as it will no longer provide events after the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":60977,"byte_end":61047,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ method is called, and will likely return an error if this `PollEvented`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61052,"byte_end":61127,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ was created on a separate event loop from the `handle` specified.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61132,"byte_end":61201,"line_start":336,"line_end":336,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" Future-aware synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3643,"byte_end":3667,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/ Future-aware synchronization","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":65962,"byte_end":65994,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":65995,"byte_end":65998,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is enabled with the **`sync`** feature flag.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":65999,"byte_end":66059,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66060,"byte_end":66063,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tasks sometimes need to communicate with each other. This module contains","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66064,"byte_end":66141,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ two basic abstractions for doing so:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66142,"byte_end":66182,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66183,"byte_end":66186,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - [oneshot](oneshot/index.html), a way of sending a single value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66187,"byte_end":66255,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/   from one task to another.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66256,"byte_end":66287,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/ - [mpsc](mpsc/index.html), a multi-producer, single-consumer channel for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66288,"byte_end":66364,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/   sending values between tasks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66365,"byte_end":66400,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/ - [lock](lock/index.html), an asynchronous `Mutex`-like type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66401,"byte_end":66466,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ - [watch](watch/index.html), a single-producer, multi-consumer channel that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66467,"byte_end":66546,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   only stores the **most recently** sent value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/sync.rs","byte_start":66547,"byte_end":66598,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3682,"byte_end":3707,"line_start":127,"line_end":127,"column_start":1,"column_end":26}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66651,"byte_end":66683,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66684,"byte_end":66687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66688,"byte_end":66768,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66769,"byte_end":66781,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66782,"byte_end":66785,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * [`Delay`][Delay] is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66786,"byte_end":66876,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/   in time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66877,"byte_end":66891,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66892,"byte_end":66895,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`Interval`][Interval] is a stream yielding a value at a fixed period. It","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66896,"byte_end":66975,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/   is initialized with a `Duration` and repeatedly yields each time the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":66976,"byte_end":67050,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/   duration elapses.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67051,"byte_end":67074,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67075,"byte_end":67078,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Timeout`][Timeout]: Wraps a future or stream, setting an upper bound to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67079,"byte_end":67162,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/   amount of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67163,"byte_end":67242,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67243,"byte_end":67312,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67313,"byte_end":67316,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * [`DelayQueue`]: A queue where items are returned once the requested delay","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67317,"byte_end":67396,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/   has expired.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67397,"byte_end":67415,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67416,"byte_end":67419,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67420,"byte_end":67491,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67492,"byte_end":67511,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67512,"byte_end":67515,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67516,"byte_end":67575,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ [`Runtime`][runtime] or a timer context must be setup explicitly. See the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67576,"byte_end":67653,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ [`tokio-timer`][tokio-timer] crate for more details on how to setup a timer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67654,"byte_end":67733,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67734,"byte_end":67746,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67747,"byte_end":67750,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67751,"byte_end":67765,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67766,"byte_end":67769,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"Hello World!\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67770,"byte_end":67809,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67810,"byte_end":67813,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67814,"byte_end":67821,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67822,"byte_end":67848,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ use tokio::timer::Delay;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67849,"byte_end":67877,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67878,"byte_end":67881,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67882,"byte_end":67921,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67922,"byte_end":67925,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let when = Instant::now() + Duration::from_millis(100);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67926,"byte_end":67985,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67986,"byte_end":67989,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ tokio::run({","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":67990,"byte_end":68006,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/     Delay::new(when)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68007,"byte_end":68031,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/         .map_err(|e| panic!(\"timer failed; err={:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68032,"byte_end":68093,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/         .and_then(|_| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68094,"byte_end":68121,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/             println!(\"Hello world!\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68122,"byte_end":68163,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/             Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68164,"byte_end":68186,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68187,"byte_end":68201,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68202,"byte_end":68208,"line_start":47,"line_end":47,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68209,"byte_end":68216,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68217,"byte_end":68220,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68221,"byte_end":68300,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ [`timeout`][ext] function on the [`FutureExt`][ext] trait. This trait is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68301,"byte_end":68377,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ included in the prelude.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68378,"byte_end":68406,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68407,"byte_end":68410,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68411,"byte_end":68418,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68419,"byte_end":68446,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68447,"byte_end":68472,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68473,"byte_end":68499,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68500,"byte_end":68503,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68504,"byte_end":68543,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68544,"byte_end":68547,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ fn long_op() -> Box<Future<Item = (), Error = ()> + Send> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68548,"byte_end":68611,"line_start":61,"line_end":61,"column_start":1,"column_end":64}},{"value":"/     // ...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68612,"byte_end":68626,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/ # Box::new(futures::future::ok(()))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68627,"byte_end":68666,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68667,"byte_end":68672,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68673,"byte_end":68676,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68677,"byte_end":68694,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ tokio::run({","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68695,"byte_end":68711,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     long_op()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68712,"byte_end":68729,"line_start":68,"line_end":68,"column_start":1,"column_end":18}},{"value":"/         .timeout(Duration::from_millis(300))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68730,"byte_end":68778,"line_start":69,"line_end":69,"column_start":1,"column_end":49}},{"value":"/         .map_err(|e| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68779,"byte_end":68805,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/             println!(\"operation timed out\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68806,"byte_end":68854,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/         })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68855,"byte_end":68869,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68870,"byte_end":68876,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68877,"byte_end":68884,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68885,"byte_end":68892,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68893,"byte_end":68896,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [runtime]: ../runtime/struct.Runtime.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68897,"byte_end":68942,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ [tokio-timer]: https://docs.rs/tokio-timer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68943,"byte_end":68989,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/ [ext]: ../util/trait.FutureExt.html#method.timeout","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":68990,"byte_end":69044,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ [Timeout]: struct.Timeout.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69045,"byte_end":69079,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ [Delay]: struct.Delay.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69080,"byte_end":69110,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ [Interval]: struct.Interval.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69111,"byte_end":69147,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69148,"byte_end":69190,"line_start":83,"line_end":83,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":322},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69389,"byte_end":69397,"line_start":90,"line_end":90,"column_start":10,"column_end":18},"name":"Deadline","qualname":"::timer::Deadline","value":"::tokio_timer::Deadline<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"use Timeout instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69283,"byte_end":69343,"line_start":87,"line_end":87,"column_start":1,"column_end":61}},{"value":"allow(deprecated)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69344,"byte_end":69364,"line_start":88,"line_end":88,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":324},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69537,"byte_end":69550,"line_start":94,"line_end":94,"column_start":10,"column_end":23},"name":"DeadlineError","qualname":"::timer::DeadlineError","value":"::tokio_timer::DeadlineError<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"use Timeout instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69431,"byte_end":69491,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"allow(deprecated)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/timer.rs","byte_start":69492,"byte_end":69512,"line_start":92,"line_end":92,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":352},{"krate":0,"index":364},{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69590,"byte_end":69627,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69628,"byte_end":69631,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains utilities that are useful for working with Tokio.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69632,"byte_end":69706,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ Currently, this only includes [`FutureExt`] and [`StreamExt`], but this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69707,"byte_end":69782,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ may grow over time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69783,"byte_end":69806,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69807,"byte_end":69810,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FutureExt`]: trait.FutureExt.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69811,"byte_end":69850,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`StreamExt`]: trait.StreamExt.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/mod.rs","byte_start":69851,"byte_end":69890,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70297,"byte_end":70306,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::util::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" A stream combinator which combines the yields the current item\n plus its count starting from 0.","sig":null,"attributes":[{"value":"/ A stream combinator which combines the yields the current item","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70053,"byte_end":70119,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ plus its count starting from 0.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70120,"byte_end":70155,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70156,"byte_end":70159,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::enumerate` method.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70160,"byte_end":70225,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"must_use = \"Does nothing unless polled\"","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70243,"byte_end":70285,"line_start":8,"line_end":8,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70605,"byte_end":70612,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70498,"byte_end":70571,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70576,"byte_end":70593,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70920,"byte_end":70927,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70659,"byte_end":70726,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70731,"byte_end":70762,"line_start":29,"line_end":29,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70767,"byte_end":70770,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70775,"byte_end":70848,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70853,"byte_end":70908,"line_start":32,"line_end":32,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71221,"byte_end":71231,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70986,"byte_end":71048,"line_start":37,"line_end":37,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71053,"byte_end":71056,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71061,"byte_end":71133,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71138,"byte_end":71209,"line_start":40,"line_end":40,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72909,"byte_end":72918,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::util::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361}],"decl_id":null,"docs":" An extension trait for `Future` that provides a variety of convenient\n combinator functions.","sig":null,"attributes":[{"value":"/ An extension trait for `Future` that provides a variety of convenient","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72443,"byte_end":72516,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ combinator functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72517,"byte_end":72542,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72543,"byte_end":72546,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Currently, there only is a [`timeout`] function, but this will increase","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72547,"byte_end":72622,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ over time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72623,"byte_end":72637,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72638,"byte_end":72641,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users are not expected to implement this trait. All types that implement","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72642,"byte_end":72718,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `Future` already implement `FutureExt`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72719,"byte_end":72762,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72763,"byte_end":72766,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This trait can be imported directly or via the Tokio prelude: `use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72767,"byte_end":72837,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ tokio::prelude::*`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72838,"byte_end":72861,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72862,"byte_end":72865,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`timeout`]: #method.timeout","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72866,"byte_end":72898,"line_start":24,"line_end":24,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74083,"byte_end":74090,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"timeout","qualname":"::util::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Creates a new future which allows `self` until `timeout`.","sig":null,"attributes":[{"value":"/ Creates a new future which allows `self` until `timeout`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72933,"byte_end":72994,"line_start":26,"line_end":26,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72999,"byte_end":73002,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This combinator creates a new future which wraps the receiving future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73007,"byte_end":73080,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ with a timeout. The returned future is allowed to execute until it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73085,"byte_end":73155,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ completes or `timeout` has elapsed, whichever happens first.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73160,"byte_end":73224,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73229,"byte_end":73232,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ If the future completes before `timeout` then the future will resolve","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73237,"byte_end":73310,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ with that item. Otherwise the future will resolve to an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73315,"byte_end":73381,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73386,"byte_end":73389,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The future is guaranteed to be polled at least once, even if `timeout`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73394,"byte_end":73468,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ is set to zero.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73473,"byte_end":73492,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73497,"byte_end":73500,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73505,"byte_end":73519,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73524,"byte_end":73527,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73532,"byte_end":73539,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73544,"byte_end":73569,"line_start":41,"line_end":41,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73574,"byte_end":73601,"line_start":42,"line_end":42,"column_start":5,"column_end":32}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73606,"byte_end":73632,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73637,"byte_end":73665,"line_start":44,"line_end":44,"column_start":5,"column_end":33}},{"value":"/ # use futures::future::{self, FutureResult};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73670,"byte_end":73718,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73723,"byte_end":73726,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # fn long_future() -> FutureResult<(), ()> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73731,"byte_end":73779,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ #   future::ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73784,"byte_end":73806,"line_start":48,"line_end":48,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73811,"byte_end":73818,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73823,"byte_end":73828,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73833,"byte_end":73850,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"/ let future = long_future()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73855,"byte_end":73885,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/     .timeout(Duration::from_secs(1))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73890,"byte_end":73930,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73935,"byte_end":73985,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73990,"byte_end":73993,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ tokio::run(future);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":73998,"byte_end":74021,"line_start":56,"line_end":56,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74026,"byte_end":74033,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74038,"byte_end":74045,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74050,"byte_end":74075,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74361,"byte_end":74369,"line_start":71,"line_end":71,"column_start":8,"column_end":16},"name":"deadline","qualname":"::util::future::FutureExt::deadline","value":"pub fn deadline(Self, Instant) -> Deadline<Self> where Self: Sized","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74217,"byte_end":74242,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"deprecated(since = \"0.1.8\", note = \"use `timeout` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74247,"byte_end":74309,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74314,"byte_end":74334,"line_start":69,"line_end":69,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":371},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75558,"byte_end":75567,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::util::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" An extension trait for `Stream` that provides a variety of convenient\n combinator functions.","sig":null,"attributes":[{"value":"/ An extension trait for `Stream` that provides a variety of convenient","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75075,"byte_end":75148,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ combinator functions.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75149,"byte_end":75174,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75175,"byte_end":75178,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently, there are only [`timeout`] and [`throttle`] functions, but","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75179,"byte_end":75252,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ this will increase over time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75253,"byte_end":75286,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75287,"byte_end":75290,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Users are not expected to implement this trait. All types that implement","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75291,"byte_end":75367,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ `Stream` already implement `StreamExt`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75368,"byte_end":75411,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75412,"byte_end":75415,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This trait can be imported directly or via the Tokio prelude: `use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75416,"byte_end":75486,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ tokio::prelude::*`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75487,"byte_end":75510,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75511,"byte_end":75514,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`timeout`]: #method.timeout","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75515,"byte_end":75547,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75731,"byte_end":75739,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"throttle","qualname":"::util::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Throttle down the stream by enforcing a fixed delay between items.","sig":null,"attributes":[{"value":"/ Throttle down the stream by enforcing a fixed delay between items.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75582,"byte_end":75652,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75657,"byte_end":75660,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Errors are also delayed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75665,"byte_end":75693,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75698,"byte_end":75723,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76386,"byte_end":76395,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::util::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Creates a new stream which gives the current iteration count as well\n as the next value.","sig":null,"attributes":[{"value":"/ Creates a new stream which gives the current iteration count as well","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75870,"byte_end":75942,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ as the next value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75947,"byte_end":75969,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75974,"byte_end":75977,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75982,"byte_end":76047,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76052,"byte_end":76121,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/ iterator.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76126,"byte_end":76139,"line_start":40,"line_end":40,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76144,"byte_end":76147,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76152,"byte_end":76175,"line_start":42,"line_end":42,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76180,"byte_end":76183,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76188,"byte_end":76262,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ an iterator with more than [`std::usize::MAX`] elements either produces the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76267,"byte_end":76346,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ wrong result or panics.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76351,"byte_end":76378,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77638,"byte_end":77645,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"timeout","qualname":"::util::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Creates a new stream which allows `self` until `timeout`.","sig":null,"attributes":[{"value":"/ Creates a new stream which allows `self` until `timeout`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76498,"byte_end":76559,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76564,"byte_end":76567,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This combinator creates a new stream which wraps the receiving stream","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76572,"byte_end":76645,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ with a timeout. For each item, the returned stream is allowed to execute","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76650,"byte_end":76726,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ until it completes or `timeout` has elapsed, whichever happens first.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76731,"byte_end":76804,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76809,"byte_end":76812,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If an item completes before `timeout` then the stream will yield","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76817,"byte_end":76885,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ with that item. Otherwise the stream will yield to an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76890,"byte_end":76954,"line_start":61,"line_end":61,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76959,"byte_end":76962,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76967,"byte_end":76981,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76986,"byte_end":76989,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":76994,"byte_end":77001,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77006,"byte_end":77031,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77036,"byte_end":77063,"line_start":67,"line_end":67,"column_start":5,"column_end":32}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77068,"byte_end":77094,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77099,"byte_end":77127,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ # use futures::future::{self, FutureResult};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77132,"byte_end":77180,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77185,"byte_end":77188,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # fn long_future() -> FutureResult<(), ()> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77193,"byte_end":77241,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/ #   future::ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77246,"byte_end":77268,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77273,"byte_end":77280,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77285,"byte_end":77290,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77295,"byte_end":77312,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/ let stream = long_future()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77317,"byte_end":77347,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     .into_stream()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77352,"byte_end":77374,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .timeout(Duration::from_secs(1))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77379,"byte_end":77419,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/     .for_each(|i| future::ok(println!(\"item = {:?}\", i)))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77424,"byte_end":77485,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77490,"byte_end":77540,"line_start":81,"line_end":81,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77545,"byte_end":77548,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ tokio::run(stream);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77553,"byte_end":77576,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77581,"byte_end":77588,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77593,"byte_end":77600,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"timer\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77605,"byte_end":77630,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":441},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":458},{"krate":0,"index":460}],"decl_id":null,"docs":" Task execution utilities.","sig":null,"attributes":[{"value":"cfg(any(feature = \"rt-full\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2473,"byte_end":2505,"line_start":72,"line_end":72,"column_start":9,"column_end":41}},{"value":"/ Task execution utilities.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11889808,"byte_end":11889837,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11889838,"byte_end":11889841,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ In the Tokio execution model, futures are lazy. When a future is created, no","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11889842,"byte_end":11889922,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ work is performed. In order for the work defined by the future to happen,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11889923,"byte_end":11890000,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ the future must be submitted to an executor. A future that is submitted to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890001,"byte_end":11890079,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ an executor is called a \"task\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890080,"byte_end":11890115,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890116,"byte_end":11890119,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The executor is responsible for ensuring that [`Future::poll`] is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890120,"byte_end":11890189,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ called whenever the task is [notified]. Notification happens when the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890190,"byte_end":11890263,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ internal state of a task transitions from \"not ready\" to ready. For","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890264,"byte_end":11890335,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ example, a socket might have received data and a call to `read` will now be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890336,"byte_end":11890415,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ able to succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890416,"byte_end":11890436,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890437,"byte_end":11890440,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The specific strategy used to manage the tasks is left up to the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890441,"byte_end":11890509,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ executor. There are two main flavors of executors: single-threaded and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890510,"byte_end":11890584,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ multi-threaded. Tokio provides implementation for both of these in the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890585,"byte_end":11890659,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ [`runtime`] module.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890660,"byte_end":11890683,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890684,"byte_end":11890687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # `Executor` trait.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890688,"byte_end":11890711,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890712,"byte_end":11890715,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`Executor`] trait (re-exported from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890716,"byte_end":11890781,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ [`tokio-executor`]), which describes the API that all executors must","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890782,"byte_end":11890854,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ implement.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890855,"byte_end":11890869,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890870,"byte_end":11890873,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A free [`spawn`] function is provided that allows spawning futures onto the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890874,"byte_end":11890953,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ default executor (tracked via a thread-local variable) without referencing a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11890954,"byte_end":11891034,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ handle. It is expected that all executors will set a value for the default","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891035,"byte_end":11891113,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ executor. This value will often be set to the executor itself, but it is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891114,"byte_end":11891190,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ possible that the default executor might be set to a different executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891191,"byte_end":11891267,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891268,"byte_end":11891271,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ For example, a single threaded executor might set the default executor to a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891272,"byte_end":11891351,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ thread pool instead of itself, allowing futures to spawn new tasks onto the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891352,"byte_end":11891431,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ thread pool when those tasks are `Send`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891432,"byte_end":11891476,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891477,"byte_end":11891480,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Future::poll`]: https://docs.rs/futures/0.1/futures/future/trait.Future.html#tymethod.poll","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891481,"byte_end":11891577,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ [notified]: https://docs.rs/futures/0.1/futures/executor/trait.Notify.html#tymethod.notify","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891578,"byte_end":11891672,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/ [`runtime`]: ../runtime/index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891673,"byte_end":11891711,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ [`tokio-executor`]: https://docs.rs/tokio-executor/0.1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891712,"byte_end":11891770,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ [`Executor`]: trait.Executor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891771,"byte_end":11891808,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891809,"byte_end":11891837,"line_start":40,"line_end":40,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"current_thread","qualname":"::executor::current_thread","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":1094},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":670},{"krate":0,"index":674},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":440}],"decl_id":null,"docs":" Execute many tasks concurrently on the current thread.","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note =\n             \"use tokio-current-thread crate or functions in tokio::runtime::current_thread instead\",)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11891839,"byte_end":11891976,"line_start":42,"line_end":45,"column_start":1,"column_end":3}},{"value":"allow(deprecated)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894749,"byte_end":11894770,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/ Execute many tasks concurrently on the current thread.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894772,"byte_end":11894830,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894831,"byte_end":11894834,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`CurrentThread`] is an executor that keeps tasks on the same thread that","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894835,"byte_end":11894912,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ they were spawned from. This allows it to execute futures that are not","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894913,"byte_end":11894987,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ `Send`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11894988,"byte_end":11894999,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895000,"byte_end":11895003,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A single [`CurrentThread`] instance is able to efficiently manage a large","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895004,"byte_end":11895081,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ number of tasks and will attempt to schedule all tasks fairly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895082,"byte_end":11895148,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895149,"byte_end":11895152,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ All tasks that are being managed by a [`CurrentThread`] executor are able to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895153,"byte_end":11895233,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ spawn additional tasks by calling [`spawn`]. This function only works from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895234,"byte_end":11895312,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ within the context of a running [`CurrentThread`] instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895313,"byte_end":11895376,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895377,"byte_end":11895380,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The easiest way to start a new [`CurrentThread`] executor is to call","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895381,"byte_end":11895453,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ [`block_on_all`] with an initial task to seed the executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895454,"byte_end":11895517,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895518,"byte_end":11895521,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895522,"byte_end":11895538,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895539,"byte_end":11895542,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895543,"byte_end":11895550,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895551,"byte_end":11895576,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895577,"byte_end":11895604,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ # use tokio::executor::current_thread;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895605,"byte_end":11895647,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895648,"byte_end":11895678,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895679,"byte_end":11895682,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Calling execute here results in a panic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895683,"byte_end":11895729,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ // current_thread::spawn(my_future);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895730,"byte_end":11895770,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895771,"byte_end":11895774,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895775,"byte_end":11895796,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/ current_thread::block_on_all(lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895797,"byte_end":11895839,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/     // The execution context is setup, futures may be executed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895840,"byte_end":11895907,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/     current_thread::spawn(lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895908,"byte_end":11895947,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/         println!(\"called from the current thread executor\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11895948,"byte_end":11896012,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/         Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896013,"byte_end":11896031,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896032,"byte_end":11896044,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896045,"byte_end":11896048,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     Ok::<_, ()>(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896049,"byte_end":11896072,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896073,"byte_end":11896081,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896082,"byte_end":11896089,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896090,"byte_end":11896097,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896098,"byte_end":11896101,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The `block_on_all` function will block the current thread until **all**","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896102,"byte_end":11896177,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ tasks that have been spawned onto the [`CurrentThread`] instance have","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896178,"byte_end":11896251,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896252,"byte_end":11896266,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896267,"byte_end":11896270,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ More fine-grain control can be achieved by using [`CurrentThread`] directly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896271,"byte_end":11896351,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896352,"byte_end":11896355,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896356,"byte_end":11896363,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896364,"byte_end":11896389,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896390,"byte_end":11896417,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/ # use tokio::executor::current_thread::CurrentThread;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896418,"byte_end":11896475,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ use futures::future::{lazy, empty};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896476,"byte_end":11896515,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896516,"byte_end":11896544,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896545,"byte_end":11896548,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Calling execute here results in a panic","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896549,"byte_end":11896595,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/ // current_thread::spawn(my_future);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896596,"byte_end":11896636,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896637,"byte_end":11896640,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896641,"byte_end":11896662,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ let mut current_thread = CurrentThread::new();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896663,"byte_end":11896713,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896714,"byte_end":11896717,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Spawn a task, the task is not executed yet.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896718,"byte_end":11896768,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/ current_thread.spawn(lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896769,"byte_end":11896803,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/     println!(\"Spawning a task\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896804,"byte_end":11896840,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/     Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896841,"byte_end":11896855,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/ }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896856,"byte_end":11896864,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896865,"byte_end":11896868,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Spawn a task that never completes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896869,"byte_end":11896909,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ current_thread.spawn(empty());","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896910,"byte_end":11896944,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896945,"byte_end":11896948,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Run the executor, but only until the provided future completes. This","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11896949,"byte_end":11897024,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ // provides the opportunity to start executing previously spawned tasks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897025,"byte_end":11897101,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ let res = current_thread.block_on(lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897102,"byte_end":11897149,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/     Ok::<_, ()>(\"Hello\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897150,"byte_end":11897178,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/ })).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897179,"byte_end":11897196,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897197,"byte_end":11897200,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // Now, run the executor for *at most* 1 second. Since a task was spawned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897201,"byte_end":11897278,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ // that never completes, this function will return with an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897279,"byte_end":11897348,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/ current_thread.run_timeout(Duration::from_secs(1)).unwrap_err();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897349,"byte_end":11897417,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897418,"byte_end":11897425,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897426,"byte_end":11897433,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897434,"byte_end":11897437,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Execution model","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897438,"byte_end":11897459,"line_start":83,"line_end":83,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897460,"byte_end":11897463,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Internally, [`CurrentThread`] maintains a queue. When one of its tasks is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897464,"byte_end":11897541,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ notified, the task gets added to the queue. The executor will pop tasks from","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897542,"byte_end":11897622,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/ the queue and call [`Future::poll`]. If the task gets notified while it is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897623,"byte_end":11897701,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ being executed, it won't get re-executed until all other tasks currently in","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897702,"byte_end":11897781,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ the queue get polled.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897782,"byte_end":11897807,"line_start":89,"line_end":89,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897808,"byte_end":11897811,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Before the task is polled, a thread-local variable referencing the current","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897812,"byte_end":11897890,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ [`CurrentThread`] instance is set. This enables [`spawn`] to spawn new tasks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897891,"byte_end":11897971,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ onto the same executor without having to thread through a handle value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11897972,"byte_end":11898047,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898048,"byte_end":11898051,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ If the [`CurrentThread`] instance still has uncompleted tasks, but none of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898052,"byte_end":11898130,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ these tasks are ready to be polled, the current thread is put to sleep. When","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898131,"byte_end":11898211,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ a task is notified, the thread is woken up and processing resumes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898212,"byte_end":11898282,"line_start":97,"line_end":97,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898283,"byte_end":11898286,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ All tasks managed by [`CurrentThread`] remain on the current thread. When a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898287,"byte_end":11898366,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ task completes, it is dropped.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898367,"byte_end":11898401,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898402,"byte_end":11898405,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898406,"byte_end":11898434,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/ [`block_on_all`]: fn.block_on_all.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898435,"byte_end":11898477,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/ [`CurrentThread`]: struct.CurrentThread.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898478,"byte_end":11898526,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/ [`Future::poll`]: https://docs.rs/futures/0.1/futures/future/trait.Future.html#tymethod.poll","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898527,"byte_end":11898623,"line_start":105,"line_end":105,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899019,"byte_end":11899026,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"Context","qualname":"::executor::current_thread::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use block_on_all instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11898910,"byte_end":11898975,"line_start":126,"line_end":126,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899164,"byte_end":11899182,"line_start":136,"line_end":136,"column_start":12,"column_end":30},"name":"cancel_all_spawned","qualname":"<Context>::cancel_all_spawned","value":"pub fn cancel_all_spawned(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancels *all* executing futures.\n","sig":null,"attributes":[{"value":"/ Cancels *all* executing futures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899116,"byte_end":11899152,"line_start":135,"line_end":135,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899320,"byte_end":11899323,"line_start":143,"line_end":143,"column_start":8,"column_end":11},"name":"run","qualname":"::executor::current_thread::run","value":"pub fn run<F, R>(F) -> R where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use block_on_all instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899232,"byte_end":11899297,"line_start":141,"line_end":141,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899847,"byte_end":11899860,"line_start":167,"line_end":167,"column_start":8,"column_end":21},"name":"task_executor","qualname":"::executor::current_thread::task_executor","value":"pub fn task_executor() -> TaskExecutor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use TaskExecutor::current instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899750,"byte_end":11899824,"line_start":165,"line_end":165,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":441},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892257,"byte_end":11892268,"line_start":54,"line_end":54,"column_start":9,"column_end":20},"name":"thread_pool","qualname":"::executor::thread_pool","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" Re-exports of [`tokio-threadpool`], deprecated in favor of the crate.","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"use tokio-threadpool crate instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892017,"byte_end":11892092,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ Re-exports of [`tokio-threadpool`], deprecated in favor of the crate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892108,"byte_end":11892181,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892182,"byte_end":11892185,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`tokio-threadpool`]: https://docs.rs/tokio-threadpool/0.1","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892186,"byte_end":11892248,"line_start":53,"line_end":53,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892977,"byte_end":11892982,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Spawn","qualname":"::executor::Spawn","value":"","parent":null,"children":[],"decl_id":null,"docs":" Return value from the `spawn` function.","sig":null,"attributes":[{"value":"/ Return value from the `spawn` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892544,"byte_end":11892587,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892588,"byte_end":11892591,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Currently this value doesn't actually provide any functionality. However, it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892592,"byte_end":11892672,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ provides a way to add functionality later without breaking backwards","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892673,"byte_end":11892745,"line_start":71,"line_end":71,"column_start":1,"column_end":73}},{"value":"/ compatibility.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892746,"byte_end":11892764,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892765,"byte_end":11892768,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This also implements `IntoFuture` so that it can be used as the return value","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892769,"byte_end":11892849,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ in a `for_each` loop.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892850,"byte_end":11892875,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892876,"byte_end":11892879,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ See [`spawn`] for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892880,"byte_end":11892915,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892916,"byte_end":11892919,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892920,"byte_end":11892948,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894433,"byte_end":11894438,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"spawn","qualname":"::executor::spawn","value":"pub fn spawn<F>(F) -> Spawn where F: Future<Item = (), Error = ()> + 'static +\nSend","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the default executor.","sig":null,"attributes":[{"value":"/ Spawns a future on the default executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892989,"byte_end":11893033,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893034,"byte_end":11893037,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ In order for a future to do work, it must be spawned on an executor. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893038,"byte_end":11893114,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ `spawn` function is the easiest way to do this. It spawns a future on the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893115,"byte_end":11893192,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ [default executor] for the current execution context (tracked using a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893193,"byte_end":11893266,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ thread-local variable).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893267,"byte_end":11893294,"line_start":88,"line_end":88,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893295,"byte_end":11893298,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The default executor is **usually** a thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893299,"byte_end":11893353,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893354,"byte_end":11893357,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893358,"byte_end":11893372,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893373,"byte_end":11893376,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ In this example, a server is started and `spawn` is used to start a new task","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893377,"byte_end":11893457,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ that processes each received connection.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893458,"byte_end":11893502,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893503,"byte_end":11893506,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893507,"byte_end":11893518,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893519,"byte_end":11893544,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893545,"byte_end":11893572,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893573,"byte_end":11893609,"line_start":100,"line_end":100,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893610,"byte_end":11893642,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893643,"byte_end":11893646,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # fn process<T>(_: T) -> Box<Future<Item = (), Error = ()> + Send> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893647,"byte_end":11893719,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ # unimplemented!();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893720,"byte_end":11893743,"line_start":104,"line_end":104,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893744,"byte_end":11893751,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893752,"byte_end":11893768,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/ # let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893769,"byte_end":11893820,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ let listener = TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893821,"byte_end":11893874,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893875,"byte_end":11893878,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let server = listener.incoming()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893879,"byte_end":11893915,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893916,"byte_end":11893965,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/     .for_each(|socket| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893966,"byte_end":11893994,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/         tokio::spawn(process(socket))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11893995,"byte_end":11894036,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894037,"byte_end":11894048,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894049,"byte_end":11894052,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ tokio::run(server);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894053,"byte_end":11894076,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894077,"byte_end":11894084,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894085,"byte_end":11894107,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894108,"byte_end":11894115,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894116,"byte_end":11894119,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [default executor]: struct.DefaultExecutor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894120,"byte_end":11894171,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894172,"byte_end":11894175,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894176,"byte_end":11894188,"line_start":123,"line_end":123,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894189,"byte_end":11894192,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the default executor is not set or if spawning","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894193,"byte_end":11894271,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ onto the default executor returns an error. To avoid the panic, use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894272,"byte_end":11894343,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ [`DefaultExecutor`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894344,"byte_end":11894368,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894369,"byte_end":11894372,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`DefaultExecutor`]: struct.DefaultExecutor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894373,"byte_end":11894425,"line_start":129,"line_end":129,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":465},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":546},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" A batteries included runtime for applications using Tokio.","sig":null,"attributes":[{"value":"cfg(any(feature = \"rt-full\"))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":2473,"byte_end":2505,"line_start":72,"line_end":72,"column_start":9,"column_end":41}},{"value":"/ A batteries included runtime for applications using Tokio.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11899913,"byte_end":11899975,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11899976,"byte_end":11899979,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Applications using Tokio require some runtime support in order to work:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11899980,"byte_end":11900055,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900056,"byte_end":11900059,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * A [reactor] to drive I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900060,"byte_end":11900101,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/ * An [executor] to execute tasks that use these I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900102,"byte_end":11900168,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ * A [timer] for scheduling work to run after a set period of time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900169,"byte_end":11900239,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900240,"byte_end":11900243,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ While it is possible to setup each component manually, this involves a bunch","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900244,"byte_end":11900324,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ of boilerplate.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900325,"byte_end":11900344,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900345,"byte_end":11900348,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Runtime`] bundles all of these various runtime components into a single","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900349,"byte_end":11900426,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ handle that can be started and shutdown together, eliminating the necessary","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900427,"byte_end":11900506,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ boilerplate to run a Tokio application.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900507,"byte_end":11900550,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900551,"byte_end":11900554,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Most applications wont need to use [`Runtime`] directly. Instead, they will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900555,"byte_end":11900634,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ use the [`run`] function, which uses [`Runtime`] under the hood.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900635,"byte_end":11900703,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900704,"byte_end":11900707,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Creating a [`Runtime`] does the following:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900708,"byte_end":11900754,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900755,"byte_end":11900758,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * Spawn a background thread running a [`Reactor`] instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900759,"byte_end":11900822,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/ * Start a [`ThreadPool`] for executing futures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900823,"byte_end":11900874,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ * Run an instance of [`Timer`] **per** thread pool worker thread.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900875,"byte_end":11900944,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900945,"byte_end":11900948,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The thread pool uses a work-stealing strategy and is configured to start a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11900949,"byte_end":11901027,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ worker thread for each CPU core available on the system. This tends to be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901028,"byte_end":11901105,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ the ideal setup for Tokio applications.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901106,"byte_end":11901149,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901150,"byte_end":11901153,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A timer per thread pool worker thread is used to minimize the amount of","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901154,"byte_end":11901229,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ synchronization that is required for working with the timer.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901230,"byte_end":11901294,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901295,"byte_end":11901298,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901299,"byte_end":11901310,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901311,"byte_end":11901314,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`run`] function. This takes a future to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901315,"byte_end":11901390,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ \"seed\" the application, blocking the thread until the runtime becomes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901391,"byte_end":11901464,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ [idle].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901465,"byte_end":11901476,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901477,"byte_end":11901480,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901481,"byte_end":11901492,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901493,"byte_end":11901518,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901519,"byte_end":11901546,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901547,"byte_end":11901583,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901584,"byte_end":11901616,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901617,"byte_end":11901620,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # fn process<T>(_: T) -> Box<Future<Item = (), Error = ()> + Send> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901621,"byte_end":11901693,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ # unimplemented!();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901694,"byte_end":11901717,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901718,"byte_end":11901725,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901726,"byte_end":11901742,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/ # let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901743,"byte_end":11901794,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let listener = TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901795,"byte_end":11901848,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901849,"byte_end":11901852,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let server = listener.incoming()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901853,"byte_end":11901889,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901890,"byte_end":11901939,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/     .for_each(|socket| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901940,"byte_end":11901968,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/         tokio::spawn(process(socket))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11901969,"byte_end":11902010,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902011,"byte_end":11902022,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902023,"byte_end":11902026,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ tokio::run(server);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902027,"byte_end":11902050,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902051,"byte_end":11902058,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902059,"byte_end":11902081,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902082,"byte_end":11902089,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902090,"byte_end":11902093,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ In this function, the `run` function blocks until the runtime becomes idle.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902094,"byte_end":11902173,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ See [`shutdown_on_idle`][idle] for more shutdown details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902174,"byte_end":11902235,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902236,"byte_end":11902239,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902240,"byte_end":11902318,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902319,"byte_end":11902397,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902398,"byte_end":11902459,"line_start":67,"line_end":67,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902460,"byte_end":11902463,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902464,"byte_end":11902517,"line_start":69,"line_end":69,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902518,"byte_end":11902521,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902522,"byte_end":11902533,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902534,"byte_end":11902559,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902560,"byte_end":11902587,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902588,"byte_end":11902624,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902625,"byte_end":11902657,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902658,"byte_end":11902690,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902691,"byte_end":11902694,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # fn process<T>(_: T) -> Box<Future<Item = (), Error = ()> + Send> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902695,"byte_end":11902767,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/ # unimplemented!();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902768,"byte_end":11902791,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902792,"byte_end":11902799,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902800,"byte_end":11902816,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/ # let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902817,"byte_end":11902868,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ let listener = TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902869,"byte_end":11902922,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902923,"byte_end":11902926,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let server = listener.incoming()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902927,"byte_end":11902963,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11902964,"byte_end":11903013,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/     .for_each(|socket| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903014,"byte_end":11903042,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/         tokio::spawn(process(socket))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903043,"byte_end":11903084,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903085,"byte_end":11903096,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903097,"byte_end":11903100,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ // Create the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903101,"byte_end":11903126,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903127,"byte_end":11903168,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903169,"byte_end":11903172,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Spawn the server task","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903173,"byte_end":11903201,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/ rt.spawn(server);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903202,"byte_end":11903223,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903224,"byte_end":11903227,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // Wait until the runtime becomes idle and shut it down.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903228,"byte_end":11903288,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"/ rt.shutdown_on_idle()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903289,"byte_end":11903314,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/     .wait().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903315,"byte_end":11903340,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903341,"byte_end":11903348,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903349,"byte_end":11903371,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903372,"byte_end":11903379,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903380,"byte_end":11903383,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [reactor]: ../reactor/struct.Reactor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903384,"byte_end":11903429,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [executor]: https://tokio.rs/docs/getting-started/runtime-model/#executors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903430,"byte_end":11903508,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ [timer]: ../timer/index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903509,"byte_end":11903541,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/ [`Runtime`]: struct.Runtime.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903542,"byte_end":11903578,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ [`Reactor`]: ../reactor/struct.Reactor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903579,"byte_end":11903626,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/ [`ThreadPool`]: https://docs.rs/tokio-threadpool/0.1/tokio_threadpool/struct.ThreadPool.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903627,"byte_end":11903723,"line_start":109,"line_end":109,"column_start":1,"column_end":97}},{"value":"/ [`run`]: fn.run.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903724,"byte_end":11903748,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ [idle]: struct.Runtime.html#method.shutdown_on_idle","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903749,"byte_end":11903804,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/ [`tokio::spawn`]: ../executor/fn.spawn.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903805,"byte_end":11903852,"line_start":112,"line_end":112,"column_start":1,"column_end":48}},{"value":"/ [`Timer`]: https://docs.rs/tokio-timer/0.2/tokio_timer/timer/struct.Timer.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903853,"byte_end":11903935,"line_start":113,"line_end":113,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":466},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"current_thread","qualname":"::runtime::current_thread","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":478},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":544}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.","sig":null,"attributes":[{"value":"/ A runtime implementation that runs everything on the current thread.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904078,"byte_end":11904150,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904151,"byte_end":11904154,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`current_thread::Runtime`][rt] is similar to the primary","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904155,"byte_end":11904216,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/ [`Runtime`][concurrent-rt] except that it runs all components on the current","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904217,"byte_end":11904297,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ thread instead of using a thread pool. This means that it is able to spawn","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904298,"byte_end":11904376,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ futures that do not implement `Send`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904377,"byte_end":11904418,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904419,"byte_end":11904422,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Same as the default [`Runtime`][concurrent-rt], the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904423,"byte_end":11904478,"line_start":8,"line_end":8,"column_start":1,"column_end":56}},{"value":"/ [`current_thread::Runtime`][rt] includes:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904479,"byte_end":11904524,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904525,"byte_end":11904528,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * A [reactor] to drive I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904529,"byte_end":11904570,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/ * An [executor] to execute tasks that use these I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904571,"byte_end":11904637,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/ * A [timer] for scheduling work to run after a set period of time.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904638,"byte_end":11904708,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904709,"byte_end":11904712,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that [`current_thread::Runtime`][rt] does not implement `Send` itself","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904713,"byte_end":11904791,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ and cannot be safely moved to other threads.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904792,"byte_end":11904840,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904841,"byte_end":11904844,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Spawning from other threads","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904845,"byte_end":11904878,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904879,"byte_end":11904882,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ While [`current_thread::Runtime`][rt] does not implement `Send` and cannot","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904883,"byte_end":11904961,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ safely be moved to other threads, it provides a `Handle` that can be sent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11904962,"byte_end":11905039,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ to other threads and allows to spawn new tasks from there.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905040,"byte_end":11905102,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905103,"byte_end":11905106,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905107,"byte_end":11905123,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905124,"byte_end":11905127,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905128,"byte_end":11905135,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905136,"byte_end":11905161,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905162,"byte_end":11905189,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ use tokio::runtime::current_thread::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905190,"byte_end":11905238,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905239,"byte_end":11905265,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ use std::thread;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905266,"byte_end":11905286,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905287,"byte_end":11905290,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905291,"byte_end":11905308,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905309,"byte_end":11905355,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ let handle = runtime.handle();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905356,"byte_end":11905390,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905391,"byte_end":11905394,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905395,"byte_end":11905422,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/     handle.spawn(future::ok(()));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905423,"byte_end":11905460,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905461,"byte_end":11905484,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905485,"byte_end":11905488,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # /*","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905489,"byte_end":11905497,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ runtime.run().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905498,"byte_end":11905525,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ # */","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905526,"byte_end":11905534,"line_start":43,"line_end":43,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905535,"byte_end":11905542,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905543,"byte_end":11905550,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905551,"byte_end":11905554,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905555,"byte_end":11905569,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905570,"byte_end":11905573,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Creating a new `Runtime` and running a future `f` until its completion and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905574,"byte_end":11905652,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ returning its result.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905653,"byte_end":11905678,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905679,"byte_end":11905682,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905683,"byte_end":11905690,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::current_thread::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905691,"byte_end":11905739,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905740,"byte_end":11905766,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905767,"byte_end":11905770,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905771,"byte_end":11905817,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905818,"byte_end":11905821,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905822,"byte_end":11905847,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ // runtime.block_on(f); // where f is a future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905848,"byte_end":11905898,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905899,"byte_end":11905906,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905907,"byte_end":11905910,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [rt]: struct.Runtime.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905911,"byte_end":11905940,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ [concurrent-rt]: ../struct.Runtime.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905941,"byte_end":11905984,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/ [chan]: https://docs.rs/futures/0.1/futures/sync/mpsc/fn.channel.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11905985,"byte_end":11906058,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ [reactor]: ../../reactor/struct.Reactor.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906059,"byte_end":11906107,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ [executor]: https://tokio.rs/docs/getting-started/runtime-model/#executors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906108,"byte_end":11906186,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ [timer]: ../../timer/index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906187,"byte_end":11906222,"line_start":67,"line_end":67,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908555,"byte_end":11908562,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::current_thread::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":683}],"decl_id":null,"docs":" Builds a Single-threaded runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds a Single-threaded runtime with custom configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907725,"byte_end":11907795,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907796,"byte_end":11907799,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907800,"byte_end":11907872,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907873,"byte_end":11907921,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907922,"byte_end":11907925,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907926,"byte_end":11907991,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907992,"byte_end":11907995,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11907996,"byte_end":11908073,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908074,"byte_end":11908087,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908088,"byte_end":11908091,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908092,"byte_end":11908120,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908121,"byte_end":11908154,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908155,"byte_end":11908158,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908159,"byte_end":11908173,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908174,"byte_end":11908177,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908178,"byte_end":11908185,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908186,"byte_end":11908209,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ extern crate tokio_timer;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908210,"byte_end":11908239,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908240,"byte_end":11908243,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use tokio::runtime::current_thread::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908244,"byte_end":11908292,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ use tokio_timer::clock::Clock;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908293,"byte_end":11908327,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908328,"byte_end":11908331,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908332,"byte_end":11908353,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ // build Runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908354,"byte_end":11908374,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/ let runtime = Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908375,"byte_end":11908407,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/     .clock(Clock::new())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908408,"byte_end":11908436,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908437,"byte_end":11908454,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ // ... call runtime.run(...)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908455,"byte_end":11908487,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ # let _ = runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908488,"byte_end":11908510,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908511,"byte_end":11908518,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908519,"byte_end":11908526,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908804,"byte_end":11908807,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908630,"byte_end":11908702,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908707,"byte_end":11908718,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908723,"byte_end":11908726,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908731,"byte_end":11908792,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908969,"byte_end":11908974,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"clock","qualname":"<Builder>::clock","value":"pub fn clock(&mut Self, Clock) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `Clock` instance that will be used by the runtime.\n","sig":null,"attributes":[{"value":"/ Set the `Clock` instance that will be used by the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908895,"byte_end":11908957,"line_start":58,"line_end":58,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11909115,"byte_end":11909120,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create the configured `Runtime`.\n","sig":null,"attributes":[{"value":"/ Create the configured `Runtime`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11909067,"byte_end":11909103,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910669,"byte_end":11910676,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::current_thread::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and executor on the current thread.","sig":null,"attributes":[{"value":"/ Single-threaded runtime provides a way to start reactor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910451,"byte_end":11910510,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ and executor on the current thread.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910511,"byte_end":11910550,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910551,"byte_end":11910554,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910555,"byte_end":11910614,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910615,"byte_end":11910618,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910619,"byte_end":11910640,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910939,"byte_end":11910945,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::current_thread::runtime::Handle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to spawn a future on the corresponding `CurrentThread` runtime instance\n","sig":null,"attributes":[{"value":"/ Handle to spawn a future on the corresponding `CurrentThread` runtime instance","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910821,"byte_end":11910903,"line_start":30,"line_end":30,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911260,"byte_end":11911265,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> Result<(), tokio_executor::SpawnError> where\nF: Future<Item = (), Error = ()> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the `CurrentThread` runtime instance corresponding to this handle","sig":null,"attributes":[{"value":"/ Spawn a future onto the `CurrentThread` runtime instance corresponding to this handle","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910982,"byte_end":11911071,"line_start":35,"line_end":35,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911076,"byte_end":11911079,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911084,"byte_end":11911096,"line_start":37,"line_end":37,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911101,"byte_end":11911104,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the `CurrentThread`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911109,"byte_end":11911191,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ instance of the `Handle` does not exist anymore.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911196,"byte_end":11911248,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911930,"byte_end":11911936,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"status","qualname":"<Handle>::status","value":"pub fn status(&Self) -> Result<(), tokio_executor::SpawnError>","parent":null,"children":[],"decl_id":null,"docs":" Provides a best effort **hint** to whether or not `spawn` will succeed.","sig":null,"attributes":[{"value":"/ Provides a best effort **hint** to whether or not `spawn` will succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911431,"byte_end":11911506,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911511,"byte_end":11911514,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function may return both false positives **and** false negatives.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911519,"byte_end":11911593,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ If `status` returns `Ok`, then a call to `spawn` will *probably*","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911598,"byte_end":11911666,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ succeed, but may fail. If `status` returns `Err`, a call to `spawn` will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911671,"byte_end":11911747,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ *probably* fail, but may succeed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911752,"byte_end":11911789,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911794,"byte_end":11911797,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This allows a caller to avoid creating the task if the call to `spawn`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911802,"byte_end":11911876,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ has a high likelihood of failing.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11911881,"byte_end":11911918,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912858,"byte_end":11912866,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"RunError","qualname":"::runtime::current_thread::runtime::RunError","value":"RunError {  }","parent":null,"children":[{"krate":0,"index":701}],"decl_id":null,"docs":" Error returned by the `run` function.\n","sig":null,"attributes":[{"value":"/ Error returned by the `run` function.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912788,"byte_end":11912829,"line_start":88,"line_end":88,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913480,"byte_end":11913483,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"/ Returns a new runtime initialized with default configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913396,"byte_end":11913468,"line_start":114,"line_end":114,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914067,"byte_end":11914073,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Get a new handle to spawn futures on the single-threaded Tokio runtime","sig":null,"attributes":[{"value":"/ Get a new handle to spawn futures on the single-threaded Tokio runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913879,"byte_end":11913953,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913958,"byte_end":11913961,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Different to the runtime itself, the handle can be sent to different","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913966,"byte_end":11914038,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ threads.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914043,"byte_end":11914055,"line_start":136,"line_end":136,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915047,"byte_end":11915052,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> &mut Self where F: Future<Item = (), Error =\n()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the single-threaded Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914151,"byte_end":11914209,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914214,"byte_end":11914217,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914222,"byte_end":11914281,"line_start":143,"line_end":143,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914286,"byte_end":11914289,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914294,"byte_end":11914315,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914320,"byte_end":11914323,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914328,"byte_end":11914342,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914347,"byte_end":11914350,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914355,"byte_end":11914366,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914371,"byte_end":11914396,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914401,"byte_end":11914428,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ # use futures::{future, Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914433,"byte_end":11914477,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/ use tokio::runtime::current_thread::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914482,"byte_end":11914530,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914535,"byte_end":11914538,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914543,"byte_end":11914559,"line_start":155,"line_end":155,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914564,"byte_end":11914589,"line_start":156,"line_end":156,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914594,"byte_end":11914635,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914640,"byte_end":11914643,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914648,"byte_end":11914686,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(future::lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914691,"byte_end":11914721,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/     println!(\"running on the runtime\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914726,"byte_end":11914769,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914774,"byte_end":11914788,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/ }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914793,"byte_end":11914801,"line_start":163,"line_end":163,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914806,"byte_end":11914813,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914818,"byte_end":11914840,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914845,"byte_end":11914852,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914857,"byte_end":11914860,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914865,"byte_end":11914877,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914882,"byte_end":11914885,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914890,"byte_end":11914965,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11914970,"byte_end":11915035,"line_start":171,"line_end":171,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11916085,"byte_end":11916093,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F>(&mut Self, F) -> Result<F::Item, F::Error> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[{"value":"/ Runs the provided future, blocking the current thread until the future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915212,"byte_end":11915286,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915291,"byte_end":11915305,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915310,"byte_end":11915313,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function can be used to synchronously block the current thread","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915318,"byte_end":11915389,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ until the provided `future` has resolved either successfully or with an","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915394,"byte_end":11915469,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ error. The result of the future is then returned from this function","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915474,"byte_end":11915545,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ call.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915550,"byte_end":11915559,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915564,"byte_end":11915567,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this function will **also** execute any spawned futures on the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915572,"byte_end":11915648,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ current thread, but will **not** block until these other spawned futures","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915653,"byte_end":11915729,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ have completed. Once the function returns, any uncompleted futures","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915734,"byte_end":11915804,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ remain pending in the `Runtime` instance. These futures will not run","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915809,"byte_end":11915881,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ until `block_on` or `run` is called again.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915886,"byte_end":11915932,"line_start":191,"line_end":191,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915937,"byte_end":11915940,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that other spawned futures","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11915945,"byte_end":11916014,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ complete execution by calling `block_on` or `run`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11916019,"byte_end":11916073,"line_start":194,"line_end":194,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11916512,"byte_end":11916515,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"run","qualname":"<Runtime>::run","value":"pub fn run(&mut Self) -> Result<(), RunError>","parent":null,"children":[],"decl_id":null,"docs":" Run the executor to completion, blocking the thread until **all**\n spawned futures have completed.\n","sig":null,"attributes":[{"value":"/ Run the executor to completion, blocking the thread until **all**","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11916391,"byte_end":11916460,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ spawned futures have completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11916465,"byte_end":11916500,"line_start":206,"line_end":206,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906845,"byte_end":11906857,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"block_on_all","qualname":"::runtime::current_thread::block_on_all","value":"pub fn block_on_all<F>(F) -> Result<F::Item, F::Error> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run the provided future to completion using a runtime running on the current thread.","sig":null,"attributes":[{"value":"/ Run the provided future to completion using a runtime running on the current thread.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906487,"byte_end":11906575,"line_start":82,"line_end":82,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906576,"byte_end":11906579,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This first creates a new [`Runtime`], and calls [`Runtime::block_on`] with the provided future,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906580,"byte_end":11906679,"line_start":84,"line_end":84,"column_start":1,"column_end":100}},{"value":"/ which blocks the current thread until the provided future completes. It then calls","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906680,"byte_end":11906766,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/ [`Runtime::run`] to wait for any other spawned futures to resolve.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11906767,"byte_end":11906837,"line_start":86,"line_end":86,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907294,"byte_end":11907297,"line_start":102,"line_end":102,"column_start":8,"column_end":11},"name":"run","qualname":"::runtime::current_thread::run","value":"pub fn run<F>(F) where F: Future<Item = (), Error = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start a current-thread runtime using the supplied future to bootstrap execution.","sig":null,"attributes":[{"value":"/ Start a current-thread runtime using the supplied future to bootstrap execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907113,"byte_end":11907197,"line_start":97,"line_end":97,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907198,"byte_end":11907201,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907202,"byte_end":11907214,"line_start":99,"line_end":99,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907215,"byte_end":11907218,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This function panics if called from the context of an executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/mod.rs","byte_start":11907219,"byte_end":11907286,"line_start":101,"line_end":101,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931530,"byte_end":11931537,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::threadpool::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930481,"byte_end":11930539,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930540,"byte_end":11930543,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930544,"byte_end":11930616,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930617,"byte_end":11930665,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930666,"byte_end":11930669,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930670,"byte_end":11930735,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930736,"byte_end":11930739,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930740,"byte_end":11930817,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930818,"byte_end":11930831,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930832,"byte_end":11930835,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930836,"byte_end":11930864,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930865,"byte_end":11930898,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930899,"byte_end":11930902,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930903,"byte_end":11930917,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930918,"byte_end":11930921,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930922,"byte_end":11930929,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930930,"byte_end":11930953,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ extern crate tokio_timer;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930954,"byte_end":11930983,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930984,"byte_end":11930987,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11930988,"byte_end":11931016,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931017,"byte_end":11931020,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931021,"byte_end":11931053,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ use tokio_timer::clock::Clock;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931054,"byte_end":11931088,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931089,"byte_end":11931092,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931093,"byte_end":11931108,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/     // build Runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931109,"byte_end":11931133,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/     let mut runtime = Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931134,"byte_end":11931174,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/         .blocking_threads(4)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931175,"byte_end":11931207,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/         .clock(Clock::system())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931208,"byte_end":11931243,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931244,"byte_end":11931272,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/         .keep_alive(Some(Duration::from_secs(60)))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931273,"byte_end":11931327,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/         .name_prefix(\"my-custom-name-\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931328,"byte_end":11931371,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/         .stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931372,"byte_end":11931412,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/         .build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931413,"byte_end":11931433,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931434,"byte_end":11931456,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931457,"byte_end":11931460,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931461,"byte_end":11931487,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931488,"byte_end":11931493,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931494,"byte_end":11931501,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931923,"byte_end":11931926,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931749,"byte_end":11931821,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931826,"byte_end":11931837,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931842,"byte_end":11931845,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931850,"byte_end":11931911,"line_start":74,"line_end":74,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932379,"byte_end":11932384,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"clock","qualname":"<Builder>::clock","value":"pub fn clock(&mut Self, Clock) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `Clock` instance that will be used by the runtime.\n","sig":null,"attributes":[{"value":"/ Set the `Clock` instance that will be used by the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932305,"byte_end":11932367,"line_start":89,"line_end":89,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932788,"byte_end":11932806,"line_start":102,"line_end":102,"column_start":12,"column_end":30},"name":"threadpool_builder","qualname":"<Builder>::threadpool_builder","value":"pub fn threadpool_builder(&mut Self, ThreadPoolBuilder) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set builder to set up the thread pool instance.\n","sig":null,"attributes":[{"value":"/ Set builder to set up the thread pool instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932477,"byte_end":11932528,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.1.9\", note =\n             \"use the `core_threads`, `blocking_threads`, `name_prefix`, \\\n                `keep_alive`, and `stack_size` functions on `runtime::Builder`, \\\n                instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932533,"byte_end":11932757,"line_start":96,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933725,"byte_end":11933738,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"panic_handler","qualname":"<Builder>::panic_handler","value":"pub fn panic_handler<F>(&mut Self, F) -> &mut Self where\nF: Fn(Box<Any + Send>) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to handle panics in futures.","sig":null,"attributes":[{"value":"/ Sets a callback to handle panics in futures.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932920,"byte_end":11932968,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932973,"byte_end":11932976,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The callback is triggered when a panic during a future bubbles up to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11932981,"byte_end":11933053,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ Tokio. By default Tokio catches these panics, and they will be ignored.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933058,"byte_end":11933133,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ The parameter passed to this callback is the same error value returned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933138,"byte_end":11933212,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ from `std::panic::catch_unwind()`. To abort the process on panics, use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933217,"byte_end":11933291,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ `std::panic::resume_unwind()` in this callback as shown below.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933296,"byte_end":11933362,"line_start":113,"line_end":113,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933367,"byte_end":11933370,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933375,"byte_end":11933389,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933394,"byte_end":11933397,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933402,"byte_end":11933409,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933414,"byte_end":11933439,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933444,"byte_end":11933471,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933476,"byte_end":11933501,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933506,"byte_end":11933509,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933514,"byte_end":11933535,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933540,"byte_end":11933580,"line_start":123,"line_end":123,"column_start":5,"column_end":45}},{"value":"/     .panic_handler(|err| std::panic::resume_unwind(err))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933585,"byte_end":11933645,"line_start":124,"line_end":124,"column_start":5,"column_end":65}},{"value":"/     .build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933650,"byte_end":11933666,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933671,"byte_end":11933689,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933694,"byte_end":11933701,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933706,"byte_end":11933713,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934533,"byte_end":11934545,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Set the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11933919,"byte_end":11933996,"line_start":138,"line_end":138,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934001,"byte_end":11934004,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934009,"byte_end":11934084,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934089,"byte_end":11934124,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934129,"byte_end":11934132,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934137,"byte_end":11934206,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934211,"byte_end":11934214,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934219,"byte_end":11934233,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934238,"byte_end":11934241,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934246,"byte_end":11934253,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934258,"byte_end":11934283,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934288,"byte_end":11934315,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934320,"byte_end":11934345,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934350,"byte_end":11934353,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934358,"byte_end":11934379,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934384,"byte_end":11934424,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934429,"byte_end":11934453,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934458,"byte_end":11934474,"line_start":155,"line_end":155,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934479,"byte_end":11934497,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934502,"byte_end":11934509,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934514,"byte_end":11934521,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935491,"byte_end":11935507,"line_start":190,"line_end":190,"column_start":12,"column_end":28},"name":"blocking_threads","qualname":"<Builder>::blocking_threads","value":"pub fn blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of concurrent blocking sections in the `Runtime`'s\n thread pool.","sig":null,"attributes":[{"value":"/ Set the maximum number of concurrent blocking sections in the `Runtime`'s","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934689,"byte_end":11934766,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934771,"byte_end":11934787,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934792,"byte_end":11934795,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ When the maximum concurrent `blocking` calls is reached, any further","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934800,"byte_end":11934872,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ calls to `blocking` will return `NotReady` and the task is notified once","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934877,"byte_end":11934953,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ previously in-flight calls to `blocking` return.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11934958,"byte_end":11935010,"line_start":170,"line_end":170,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935015,"byte_end":11935018,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935023,"byte_end":11935098,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935103,"byte_end":11935138,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935143,"byte_end":11935146,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The default value is 100.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935151,"byte_end":11935180,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935185,"byte_end":11935188,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935193,"byte_end":11935207,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935212,"byte_end":11935215,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935220,"byte_end":11935227,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935232,"byte_end":11935257,"line_start":180,"line_end":180,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935262,"byte_end":11935289,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935294,"byte_end":11935319,"line_start":182,"line_end":182,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935324,"byte_end":11935327,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935332,"byte_end":11935353,"line_start":184,"line_end":184,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935358,"byte_end":11935398,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/     .blocking_threads(200)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935403,"byte_end":11935433,"line_start":186,"line_end":186,"column_start":5,"column_end":35}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935438,"byte_end":11935455,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935460,"byte_end":11935467,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935472,"byte_end":11935479,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936470,"byte_end":11936480,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<Builder>::keep_alive","value":"pub fn keep_alive(&mut Self, Option<Duration>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the worker thread keep alive duration for threads in the `Runtime`'s\n thread pool.","sig":null,"attributes":[{"value":"/ Set the worker thread keep alive duration for threads in the `Runtime`'s","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935621,"byte_end":11935697,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935702,"byte_end":11935718,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935723,"byte_end":11935726,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ If set, a worker thread will wait for up to the specified duration for","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935731,"byte_end":11935805,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ work, at which point the thread will shutdown. When work becomes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935810,"byte_end":11935878,"line_start":199,"line_end":199,"column_start":5,"column_end":73}},{"value":"/ available, a new thread will eventually be spawned to replace the one","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935883,"byte_end":11935956,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ that shut down.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935961,"byte_end":11935980,"line_start":201,"line_end":201,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935985,"byte_end":11935988,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ When the value is `None`, the thread will wait for work forever.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11935993,"byte_end":11936061,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936066,"byte_end":11936069,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The default value is `None`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936074,"byte_end":11936106,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936111,"byte_end":11936114,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936119,"byte_end":11936133,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936138,"byte_end":11936141,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936146,"byte_end":11936153,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936158,"byte_end":11936183,"line_start":210,"line_end":210,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936188,"byte_end":11936215,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936220,"byte_end":11936245,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936250,"byte_end":11936278,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936283,"byte_end":11936286,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936291,"byte_end":11936312,"line_start":215,"line_end":215,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936317,"byte_end":11936357,"line_start":216,"line_end":216,"column_start":5,"column_end":45}},{"value":"/     .keep_alive(Some(Duration::from_secs(30)))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936362,"byte_end":11936412,"line_start":217,"line_end":217,"column_start":5,"column_end":55}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936417,"byte_end":11936434,"line_start":218,"line_end":218,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936439,"byte_end":11936446,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936451,"byte_end":11936458,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937237,"byte_end":11937248,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"name_prefix","qualname":"<Builder>::name_prefix","value":"pub fn name_prefix<S: Into<String>>(&mut Self, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set name prefix of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Set name prefix of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936603,"byte_end":11936673,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936678,"byte_end":11936681,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Thread name prefix is used for generating thread names. For example, if","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936686,"byte_end":11936761,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ prefix is `my-pool-`, then threads in the pool will get names like","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936766,"byte_end":11936836,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ `my-pool-1` etc.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936841,"byte_end":11936861,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936866,"byte_end":11936869,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The default prefix is \"tokio-runtime-worker-\".","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936874,"byte_end":11936924,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936929,"byte_end":11936932,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936937,"byte_end":11936951,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936956,"byte_end":11936959,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936964,"byte_end":11936971,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11936976,"byte_end":11937001,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937006,"byte_end":11937033,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937038,"byte_end":11937063,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937068,"byte_end":11937071,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937076,"byte_end":11937097,"line_start":241,"line_end":241,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937102,"byte_end":11937142,"line_start":242,"line_end":242,"column_start":5,"column_end":45}},{"value":"/     .name_prefix(\"my-pool-\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937147,"byte_end":11937179,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937184,"byte_end":11937201,"line_start":244,"line_end":244,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937206,"byte_end":11937213,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937218,"byte_end":11937225,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938008,"byte_end":11938018,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<Builder>::stack_size","value":"pub fn stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Set the stack size (in bytes) for worker threads.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937374,"byte_end":11937427,"line_start":252,"line_end":252,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937432,"byte_end":11937435,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937440,"byte_end":11937512,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937517,"byte_end":11937550,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937555,"byte_end":11937558,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937563,"byte_end":11937631,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937636,"byte_end":11937697,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937702,"byte_end":11937705,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937710,"byte_end":11937724,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937729,"byte_end":11937732,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937737,"byte_end":11937744,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937749,"byte_end":11937774,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937779,"byte_end":11937806,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937811,"byte_end":11937836,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937841,"byte_end":11937844,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937849,"byte_end":11937870,"line_start":267,"line_end":267,"column_start":5,"column_end":26}},{"value":"/ let mut rt = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937875,"byte_end":11937915,"line_start":268,"line_end":268,"column_start":5,"column_end":45}},{"value":"/     .stack_size(32 * 1024)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937920,"byte_end":11937950,"line_start":269,"line_end":269,"column_start":5,"column_end":35}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937955,"byte_end":11937972,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937977,"byte_end":11937984,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11937989,"byte_end":11937996,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938669,"byte_end":11938680,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"after_start","qualname":"<Builder>::after_start","value":"pub fn after_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Execute function `f` after each thread is started but before it starts","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938130,"byte_end":11938204,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ doing work.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938209,"byte_end":11938224,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938229,"byte_end":11938232,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938237,"byte_end":11938299,"line_start":281,"line_end":281,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938304,"byte_end":11938307,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938312,"byte_end":11938326,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938331,"byte_end":11938334,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938339,"byte_end":11938346,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938351,"byte_end":11938376,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938381,"byte_end":11938408,"line_start":287,"line_end":287,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938413,"byte_end":11938438,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938443,"byte_end":11938446,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938451,"byte_end":11938472,"line_start":290,"line_end":290,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938477,"byte_end":11938522,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/     .after_start(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938527,"byte_end":11938552,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938557,"byte_end":11938596,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938601,"byte_end":11938611,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938616,"byte_end":11938633,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938638,"byte_end":11938645,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938650,"byte_end":11938657,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939334,"byte_end":11939345,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"before_stop","qualname":"<Builder>::before_stop","value":"pub fn before_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Execute function `f` before each thread stops.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938838,"byte_end":11938888,"line_start":305,"line_end":305,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938893,"byte_end":11938896,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938901,"byte_end":11938963,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938968,"byte_end":11938971,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938976,"byte_end":11938990,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11938995,"byte_end":11938998,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939003,"byte_end":11939010,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939015,"byte_end":11939040,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939045,"byte_end":11939072,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939077,"byte_end":11939102,"line_start":314,"line_end":314,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939107,"byte_end":11939110,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939115,"byte_end":11939136,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/ let thread_pool = runtime::Builder::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939141,"byte_end":11939186,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/     .before_stop(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939191,"byte_end":11939216,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939221,"byte_end":11939261,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939266,"byte_end":11939276,"line_start":320,"line_end":320,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939281,"byte_end":11939298,"line_start":321,"line_end":321,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939303,"byte_end":11939310,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939315,"byte_end":11939322,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939912,"byte_end":11939917,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Create the configured `Runtime`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939503,"byte_end":11939539,"line_start":331,"line_end":331,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939544,"byte_end":11939547,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939552,"byte_end":11939615,"line_start":333,"line_end":333,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939620,"byte_end":11939623,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939628,"byte_end":11939642,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939647,"byte_end":11939650,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939655,"byte_end":11939662,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939667,"byte_end":11939692,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ # use tokio::runtime::Builder;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939697,"byte_end":11939731,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939736,"byte_end":11939757,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/ let runtime = Builder::new().build().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939762,"byte_end":11939812,"line_start":341,"line_end":341,"column_start":5,"column_end":55}},{"value":"/ // ... call runtime.run(...)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939817,"byte_end":11939849,"line_start":342,"line_end":342,"column_start":5,"column_end":37}},{"value":"/ # let _ = runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939854,"byte_end":11939876,"line_start":343,"line_end":343,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939881,"byte_end":11939888,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11939893,"byte_end":11939900,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942673,"byte_end":11942681,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"Shutdown","qualname":"::runtime::threadpool::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":595}],"decl_id":null,"docs":" A future that resolves when the Tokio `Runtime` is shut down.\n","sig":null,"attributes":[{"value":"/ A future that resolves when the Tokio `Runtime` is shut down.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942596,"byte_end":11942661,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943657,"byte_end":11943669,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TaskExecutor","qualname":"::runtime::threadpool::task_executor::TaskExecutor","value":"TaskExecutor {  }","parent":null,"children":[{"krate":0,"index":711}],"decl_id":null,"docs":" Executes futures on the runtime","sig":null,"attributes":[{"value":"/ Executes futures on the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943362,"byte_end":11943397,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943398,"byte_end":11943401,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All futures spawned using this executor will be submitted to the associated","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943402,"byte_end":11943481,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ Runtime's executor. This executor is usually a thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943482,"byte_end":11943545,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943546,"byte_end":11943549,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For more details, see the [module level](index.html) documentation.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943550,"byte_end":11943621,"line_start":11,"line_end":11,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944837,"byte_end":11944842,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"spawn","qualname":"<TaskExecutor>::spawn","value":"pub fn spawn<F>(&Self, F) where F: Future<Item = (), Error = ()> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943729,"byte_end":11943771,"line_start":18,"line_end":18,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943776,"byte_end":11943779,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943784,"byte_end":11943855,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943860,"byte_end":11943935,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943940,"byte_end":11943963,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943968,"byte_end":11943971,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943976,"byte_end":11944035,"line_start":24,"line_end":24,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944040,"byte_end":11944043,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944048,"byte_end":11944069,"line_start":26,"line_end":26,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944074,"byte_end":11944077,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944082,"byte_end":11944096,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944101,"byte_end":11944104,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944109,"byte_end":11944120,"line_start":30,"line_end":30,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944125,"byte_end":11944150,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944155,"byte_end":11944182,"line_start":32,"line_end":32,"column_start":5,"column_end":32}},{"value":"/ # use futures::{future, Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944187,"byte_end":11944231,"line_start":33,"line_end":33,"column_start":5,"column_end":49}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944236,"byte_end":11944268,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944273,"byte_end":11944276,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944281,"byte_end":11944297,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944302,"byte_end":11944327,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944332,"byte_end":11944373,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/ let executor = rt.executor();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944378,"byte_end":11944411,"line_start":39,"line_end":39,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944416,"byte_end":11944419,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944424,"byte_end":11944462,"line_start":41,"line_end":41,"column_start":5,"column_end":43}},{"value":"/ executor.spawn(future::lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944467,"byte_end":11944503,"line_start":42,"line_end":42,"column_start":5,"column_end":41}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944508,"byte_end":11944559,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/     Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944564,"byte_end":11944578,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944583,"byte_end":11944591,"line_start":45,"line_end":45,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944596,"byte_end":11944603,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944608,"byte_end":11944630,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944635,"byte_end":11944642,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944647,"byte_end":11944650,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944655,"byte_end":11944667,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944672,"byte_end":11944675,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944680,"byte_end":11944755,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11944760,"byte_end":11944825,"line_start":53,"line_end":53,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919067,"byte_end":11919074,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::threadpool::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" Handle to the Tokio runtime.","sig":null,"attributes":[{"value":"/ Handle to the Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918571,"byte_end":11918603,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918604,"byte_end":11918607,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The Tokio runtime includes a reactor as well as an executor for running","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918608,"byte_end":11918683,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ tasks.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918684,"byte_end":11918694,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918695,"byte_end":11918698,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918699,"byte_end":11918779,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ most users will use [`tokio::run`], which uses a `Runtime` internally.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918780,"byte_end":11918854,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918855,"byte_end":11918858,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918859,"byte_end":11918918,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918919,"byte_end":11918922,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918923,"byte_end":11918944,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918945,"byte_end":11918969,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11918970,"byte_end":11919006,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/ [`tokio::run`]: fn.run.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919007,"byte_end":11919038,"line_start":36,"line_end":36,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920734,"byte_end":11920737,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"run","qualname":"::runtime::threadpool::run","value":"pub fn run<F>(F) where F: Future<Item = (), Error = ()> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start the Tokio runtime using the supplied future to bootstrap execution.","sig":null,"attributes":[{"value":"/ Start the Tokio runtime using the supplied future to bootstrap execution.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919398,"byte_end":11919475,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919476,"byte_end":11919479,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This function is used to bootstrap the execution of a Tokio application. It","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919480,"byte_end":11919559,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ does the following:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919560,"byte_end":11919583,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919584,"byte_end":11919587,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ * Start the Tokio runtime using a default configuration.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919588,"byte_end":11919648,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/ * Spawn the given future onto the thread pool.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919649,"byte_end":11919699,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/ * Block the current thread until the runtime shuts down.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919700,"byte_end":11919760,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919761,"byte_end":11919764,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Note that the function will not return immediately once `future` has","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919765,"byte_end":11919837,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ completed. Instead it waits for the entire runtime to become idle.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919838,"byte_end":11919908,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919909,"byte_end":11919912,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ See the [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919913,"byte_end":11919976,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919977,"byte_end":11919980,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919981,"byte_end":11919995,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11919996,"byte_end":11919999,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920000,"byte_end":11920011,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920012,"byte_end":11920037,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920038,"byte_end":11920065,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ # use futures::{Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920066,"byte_end":11920102,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920103,"byte_end":11920135,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920136,"byte_end":11920139,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # fn process<T>(_: T) -> Box<Future<Item = (), Error = ()> + Send> {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920140,"byte_end":11920212,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/ # unimplemented!();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920213,"byte_end":11920236,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920237,"byte_end":11920244,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920245,"byte_end":11920261,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/ # let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920262,"byte_end":11920313,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ let listener = TcpListener::bind(&addr).unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920314,"byte_end":11920367,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920368,"byte_end":11920371,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let server = listener.incoming()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920372,"byte_end":11920408,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     .map_err(|e| println!(\"error = {:?}\", e))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920409,"byte_end":11920458,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/     .for_each(|socket| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920459,"byte_end":11920487,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/         tokio::spawn(process(socket))","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920488,"byte_end":11920529,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920530,"byte_end":11920541,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920542,"byte_end":11920545,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ tokio::run(server);","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920546,"byte_end":11920569,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920570,"byte_end":11920577,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920578,"byte_end":11920600,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920601,"byte_end":11920608,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920609,"byte_end":11920612,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920613,"byte_end":11920625,"line_start":96,"line_end":96,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920626,"byte_end":11920629,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This function panics if called from the context of an executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920630,"byte_end":11920697,"line_start":98,"line_end":98,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920698,"byte_end":11920701,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11920702,"byte_end":11920726,"line_start":100,"line_end":100,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922067,"byte_end":11922070,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921146,"byte_end":11921214,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921219,"byte_end":11921222,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This results in a reactor, thread pool, and timer being initialized. The","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921227,"byte_end":11921303,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ thread pool will not spawn any worker threads until it needs to, i.e.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921308,"byte_end":11921381,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ tasks are scheduled to run.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921386,"byte_end":11921417,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921422,"byte_end":11921425,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Most users will not need to call this function directly, instead they","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921430,"byte_end":11921503,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ will use [`tokio::run`](fn.run.html).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921508,"byte_end":11921549,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921554,"byte_end":11921557,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921562,"byte_end":11921621,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921626,"byte_end":11921629,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921634,"byte_end":11921648,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921653,"byte_end":11921656,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921661,"byte_end":11921724,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921729,"byte_end":11921732,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921737,"byte_end":11921744,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921749,"byte_end":11921781,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921786,"byte_end":11921812,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921817,"byte_end":11921820,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921825,"byte_end":11921852,"line_start":133,"line_end":133,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921857,"byte_end":11921875,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921880,"byte_end":11921883,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921888,"byte_end":11921913,"line_start":136,"line_end":136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921918,"byte_end":11921921,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Shutdown the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921926,"byte_end":11921953,"line_start":138,"line_end":138,"column_start":5,"column_end":32}},{"value":"/ rt.shutdown_now()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921958,"byte_end":11921979,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     .wait().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921984,"byte_end":11922009,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922014,"byte_end":11922021,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922026,"byte_end":11922029,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922034,"byte_end":11922055,"line_start":143,"line_end":143,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922230,"byte_end":11922236,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.5\", note = \"use `reactor` instead\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922137,"byte_end":11922199,"line_start":148,"line_end":148,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922986,"byte_end":11922993,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"reactor","qualname":"<Runtime>::reactor","value":"pub fn reactor(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the reactor handle for this runtime instance.","sig":null,"attributes":[{"value":"/ Return a reference to the reactor handle for this runtime instance.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922320,"byte_end":11922391,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922396,"byte_end":11922399,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The returned handle reference can be cloned in order to get an owned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922404,"byte_end":11922476,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ value of the handle. This handle can be used to initialize I/O resources","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922481,"byte_end":11922557,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ (like TCP or UDP sockets) that will not be used on the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922562,"byte_end":11922629,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922634,"byte_end":11922637,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922642,"byte_end":11922656,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922661,"byte_end":11922664,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922669,"byte_end":11922676,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922681,"byte_end":11922713,"line_start":164,"line_end":164,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922718,"byte_end":11922721,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922726,"byte_end":11922753,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922758,"byte_end":11922776,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922781,"byte_end":11922784,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let reactor_handle = rt.reactor().clone();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922789,"byte_end":11922835,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922840,"byte_end":11922843,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // use `reactor_handle`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922848,"byte_end":11922875,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922880,"byte_end":11922887,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.1.11\", note =\n             \"there is now a reactor per worker thread\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11922892,"byte_end":11922974,"line_start":173,"line_end":173,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923695,"byte_end":11923703,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"executor","qualname":"<Runtime>::executor","value":"pub fn executor(&Self) -> TaskExecutor","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's executor.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's executor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923295,"byte_end":11923341,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923346,"byte_end":11923349,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923354,"byte_end":11923430,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923435,"byte_end":11923438,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923443,"byte_end":11923457,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923462,"byte_end":11923465,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923470,"byte_end":11923477,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923482,"byte_end":11923514,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923519,"byte_end":11923522,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923527,"byte_end":11923554,"line_start":194,"line_end":194,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923559,"byte_end":11923577,"line_start":195,"line_end":195,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923582,"byte_end":11923585,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let executor_handle = rt.executor();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923590,"byte_end":11923630,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923635,"byte_end":11923638,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // use `executor_handle`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923643,"byte_end":11923671,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923676,"byte_end":11923683,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924891,"byte_end":11924896,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> &mut Self where F: Future<Item = (), Error =\n()> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923827,"byte_end":11923869,"line_start":206,"line_end":206,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923874,"byte_end":11923877,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923882,"byte_end":11923953,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11923958,"byte_end":11924033,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924038,"byte_end":11924061,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924066,"byte_end":11924069,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924074,"byte_end":11924133,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924138,"byte_end":11924141,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924146,"byte_end":11924167,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924172,"byte_end":11924175,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924180,"byte_end":11924194,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924199,"byte_end":11924202,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924207,"byte_end":11924218,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/ # extern crate tokio;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924223,"byte_end":11924248,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924253,"byte_end":11924280,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/ # use futures::{future, Future, Stream};","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924285,"byte_end":11924329,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924334,"byte_end":11924366,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924371,"byte_end":11924374,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924379,"byte_end":11924395,"line_start":224,"line_end":224,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924400,"byte_end":11924425,"line_start":225,"line_end":225,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924430,"byte_end":11924471,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924476,"byte_end":11924479,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924484,"byte_end":11924522,"line_start":228,"line_end":228,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(future::lazy(|| {","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924527,"byte_end":11924557,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924562,"byte_end":11924613,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/     Ok(())","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924618,"byte_end":11924632,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/ }));","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924637,"byte_end":11924645,"line_start":232,"line_end":232,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924650,"byte_end":11924657,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924662,"byte_end":11924684,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924689,"byte_end":11924696,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924701,"byte_end":11924704,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924709,"byte_end":11924721,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924726,"byte_end":11924729,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924734,"byte_end":11924809,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11924814,"byte_end":11924879,"line_start":240,"line_end":240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925648,"byte_end":11925656,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F, R, E>(&mut Self, F) -> Result<R, E> where F: Send +\n'static + Future<Item = R, Error = R>, R: Send + 'static, E: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925089,"byte_end":11925141,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925146,"byte_end":11925149,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925154,"byte_end":11925221,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925226,"byte_end":11925299,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925304,"byte_end":11925369,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925374,"byte_end":11925377,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925382,"byte_end":11925448,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925453,"byte_end":11925456,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925461,"byte_end":11925473,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925478,"byte_end":11925481,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925486,"byte_end":11925558,"line_start":258,"line_end":258,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11925563,"byte_end":11925636,"line_start":259,"line_end":259,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926780,"byte_end":11926792,"line_start":286,"line_end":286,"column_start":12,"column_end":24},"name":"block_on_all","qualname":"<Runtime>::block_on_all","value":"pub fn block_on_all<F, R, E>(Self, F) -> Result<R, E> where F: Send +\n'static + Future<Item = R, Error = R>, R: Send + 'static, E: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime, then wait for all\n background futures to complete too.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime, then wait for all","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926081,"byte_end":11926151,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/ background futures to complete too.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926156,"byte_end":11926195,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926200,"byte_end":11926203,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926208,"byte_end":11926275,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/ complete, waiting for background futures to complete, and yielding","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926280,"byte_end":11926350,"line_start":276,"line_end":276,"column_start":5,"column_end":75}},{"value":"/ its resolved result. Any tasks or timers which the future spawns","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926355,"byte_end":11926423,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ internally will be executed on the runtime and waited for completion.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926428,"byte_end":11926501,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926506,"byte_end":11926509,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926514,"byte_end":11926580,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926585,"byte_end":11926588,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926593,"byte_end":11926605,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926610,"byte_end":11926613,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926618,"byte_end":11926690,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11926695,"byte_end":11926768,"line_start":285,"line_end":285,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928367,"byte_end":11928383,"line_start":336,"line_end":336,"column_start":12,"column_end":28},"name":"shutdown_on_idle","qualname":"<Runtime>::shutdown_on_idle","value":"pub fn shutdown_on_idle(Self) -> Shutdown","parent":null,"children":[],"decl_id":null,"docs":" Signals the runtime to shutdown once it becomes idle.","sig":null,"attributes":[{"value":"/ Signals the runtime to shutdown once it becomes idle.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927414,"byte_end":11927471,"line_start":304,"line_end":304,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927476,"byte_end":11927479,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Returns a future that completes once the shutdown operation has","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927484,"byte_end":11927551,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927556,"byte_end":11927570,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927575,"byte_end":11927578,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This function can be used to perform a graceful shutdown of the runtime.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927583,"byte_end":11927659,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927664,"byte_end":11927667,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The runtime enters an idle state once **all** of the following occur.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927672,"byte_end":11927745,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927750,"byte_end":11927753,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ * The thread pool has no tasks to execute, i.e., all tasks that were","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927758,"byte_end":11927830,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/   spawned have completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927835,"byte_end":11927864,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/ * The reactor is not managing any I/O resources.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927869,"byte_end":11927921,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927926,"byte_end":11927929,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927934,"byte_end":11927993,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11927998,"byte_end":11928001,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928006,"byte_end":11928020,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928025,"byte_end":11928028,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928033,"byte_end":11928040,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928045,"byte_end":11928077,"line_start":322,"line_end":322,"column_start":5,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928082,"byte_end":11928108,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928113,"byte_end":11928116,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928121,"byte_end":11928148,"line_start":325,"line_end":325,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928153,"byte_end":11928171,"line_start":326,"line_end":326,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928176,"byte_end":11928179,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928184,"byte_end":11928209,"line_start":328,"line_end":328,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928214,"byte_end":11928217,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Shutdown the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928222,"byte_end":11928249,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/ rt.shutdown_on_idle()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928254,"byte_end":11928279,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/     .wait().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928284,"byte_end":11928309,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928314,"byte_end":11928321,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928326,"byte_end":11928329,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928334,"byte_end":11928355,"line_start":335,"line_end":335,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929607,"byte_end":11929619,"line_start":377,"line_end":377,"column_start":12,"column_end":24},"name":"shutdown_now","qualname":"<Runtime>::shutdown_now","value":"pub fn shutdown_now(Self) -> Shutdown","parent":null,"children":[],"decl_id":null,"docs":" Signals the runtime to shutdown immediately.","sig":null,"attributes":[{"value":"/ Signals the runtime to shutdown immediately.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928545,"byte_end":11928593,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928598,"byte_end":11928601,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Returns a future that completes once the shutdown operation has","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928606,"byte_end":11928673,"line_start":344,"line_end":344,"column_start":5,"column_end":72}},{"value":"/ completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928678,"byte_end":11928692,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928697,"byte_end":11928700,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This function will forcibly shutdown the runtime, causing any","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928705,"byte_end":11928770,"line_start":347,"line_end":347,"column_start":5,"column_end":70}},{"value":"/ in-progress work to become canceled. The shutdown steps are:","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928775,"byte_end":11928839,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928844,"byte_end":11928847,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928852,"byte_end":11928890,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928895,"byte_end":11928946,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928951,"byte_end":11928974,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928979,"byte_end":11928982,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11928987,"byte_end":11929059,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929064,"byte_end":11929137,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/ result in an error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929142,"byte_end":11929165,"line_start":356,"line_end":356,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929170,"byte_end":11929173,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929178,"byte_end":11929237,"line_start":358,"line_end":358,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929242,"byte_end":11929245,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929250,"byte_end":11929264,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929269,"byte_end":11929272,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929277,"byte_end":11929284,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929289,"byte_end":11929321,"line_start":363,"line_end":363,"column_start":5,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929326,"byte_end":11929352,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929357,"byte_end":11929360,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929365,"byte_end":11929392,"line_start":366,"line_end":366,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929397,"byte_end":11929415,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929420,"byte_end":11929423,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929428,"byte_end":11929453,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929458,"byte_end":11929461,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ // Shutdown the runtime","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929466,"byte_end":11929493,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/ rt.shutdown_now()","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929498,"byte_end":11929519,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     .wait().unwrap();","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929524,"byte_end":11929549,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929554,"byte_end":11929561,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929566,"byte_end":11929569,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929574,"byte_end":11929595,"line_start":376,"line_end":376,"column_start":5,"column_end":26}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19280,"byte_end":19300,"line_start":425,"line_end":425,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":22499,"byte_end":22519,"line_start":527,"line_end":527,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":23399,"byte_end":23419,"line_start":558,"line_end":558,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24809,"byte_end":24816,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34782,"byte_end":34793,"line_start":966,"line_end":966,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34933,"byte_end":34944,"line_start":972,"line_end":972,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":35073,"byte_end":35084,"line_start":978,"line_end":978,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50493,"byte_end":50504,"line_start":42,"line_end":42,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50655,"byte_end":50666,"line_start":48,"line_end":48,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61386,"byte_end":61397,"line_start":345,"line_end":345,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61754,"byte_end":61765,"line_start":361,"line_end":361,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":62431,"byte_end":62442,"line_start":391,"line_end":391,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":62480,"byte_end":62491,"line_start":393,"line_end":393,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70355,"byte_end":70364,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71292,"byte_end":71301,"line_start":46,"line_end":46,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71805,"byte_end":71814,"line_start":66,"line_end":66,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74527,"byte_end":74528,"line_start":79,"line_end":79,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77800,"byte_end":77801,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899098,"byte_end":11899105,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894584,"byte_end":11894589,"line_start":137,"line_end":137,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908616,"byte_end":11908623,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910969,"byte_end":11910975,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912053,"byte_end":11912059,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912598,"byte_end":11912604,"line_start":79,"line_end":79,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912931,"byte_end":11912939,"line_start":94,"line_end":94,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913065,"byte_end":11913073,"line_start":100,"line_end":100,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913382,"byte_end":11913389,"line_start":113,"line_end":113,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":525},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931735,"byte_end":11931742,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942736,"byte_end":11942744,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942901,"byte_end":11942909,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11943085,"byte_end":11943093,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943710,"byte_end":11943722,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945015,"byte_end":11945027,"line_start":61,"line_end":61,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945235,"byte_end":11945247,"line_start":69,"line_end":69,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945460,"byte_end":11945472,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921132,"byte_end":11921139,"line_start":113,"line_end":113,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929917,"byte_end":11929924,"line_start":391,"line_end":391,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3387,"byte_end":3392,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3428,"byte_end":3433,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/mod.rs","byte_start":5237,"byte_end":5253,"line_start":17,"line_end":17,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3466,"byte_end":3468,"line_start":117,"line_end":117,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3501,"byte_end":3503,"line_start":119,"line_end":119,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":121}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":158}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3589,"byte_end":3596,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":199}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3634,"byte_end":3641,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":220}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3676,"byte_end":3680,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":307}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3716,"byte_end":3721,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3731,"byte_end":3735,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":326}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3797,"byte_end":3805,"line_start":133,"line_end":133,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":415}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11892000,"byte_end":11892014,"line_start":47,"line_end":47,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":416}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/lib.rs","byte_start":3819,"byte_end":3826,"line_start":134,"line_end":134,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":465}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/mod.rs","byte_start":11903945,"byte_end":11903959,"line_start":115,"line_end":115,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":466}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":19280,"byte_end":19300,"line_start":425,"line_end":425,"column_start":6,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":22499,"byte_end":22519,"line_start":527,"line_end":527,"column_start":18,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":391},"to":{"krate":34,"index":43}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":23399,"byte_end":23419,"line_start":558,"line_end":558,"column_start":18,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":391},"to":{"krate":34,"index":53}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":24809,"byte_end":24816,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34782,"byte_end":34793,"line_start":966,"line_end":966,"column_start":21,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":34933,"byte_end":34944,"line_start":972,"line_end":972,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/codec/length_delimited.rs","byte_start":35073,"byte_end":35084,"line_start":978,"line_end":978,"column_start":19,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50493,"byte_end":50504,"line_start":42,"line_end":42,"column_start":36,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":50655,"byte_end":50666,"line_start":48,"line_end":48,"column_start":9,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61386,"byte_end":61397,"line_start":345,"line_end":345,"column_start":24,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":249},"to":{"krate":1,"index":3120}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":61754,"byte_end":61765,"line_start":361,"line_end":361,"column_start":26,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":249},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":62431,"byte_end":62442,"line_start":391,"line_end":391,"column_start":29,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":249},"to":{"krate":34,"index":573}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/reactor/poll_evented.rs","byte_start":62480,"byte_end":62491,"line_start":393,"line_end":393,"column_start":31,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":249},"to":{"krate":34,"index":598}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":70355,"byte_end":70364,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71292,"byte_end":71301,"line_start":46,"line_end":46,"column_start":20,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":407},"to":{"krate":18,"index":1430}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/enumerate.rs","byte_start":71805,"byte_end":71814,"line_start":66,"line_end":66,"column_start":18,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":407},"to":{"krate":18,"index":1784}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":72920,"byte_end":72926,"line_start":25,"line_end":25,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":468},"to":{"krate":0,"index":359}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/future.rs","byte_start":74527,"byte_end":74528,"line_start":79,"line_end":79,"column_start":31,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":363},"to":{"krate":0,"index":359}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":75569,"byte_end":75575,"line_start":23,"line_end":23,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":1430},"to":{"krate":0,"index":371}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/util/stream.rs","byte_start":77800,"byte_end":77801,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":376},"to":{"krate":0,"index":371}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/current_thread/mod.rs","byte_start":11899098,"byte_end":11899105,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs","byte_start":11894584,"byte_end":11894589,"line_start":137,"line_end":137,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":677},"to":{"krate":18,"index":527}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/builder.rs","byte_start":11908616,"byte_end":11908623,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11910969,"byte_end":11910975,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912053,"byte_end":11912059,"line_start":60,"line_end":60,"column_start":33,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":693},"to":{"krate":18,"index":550}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912598,"byte_end":11912604,"line_start":79,"line_end":79,"column_start":42,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":693},"to":{"krate":36,"index":166}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11912931,"byte_end":11912939,"line_start":94,"line_end":94,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913065,"byte_end":11913073,"line_start":100,"line_end":100,"column_start":16,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/current_thread/runtime.rs","byte_start":11913382,"byte_end":11913389,"line_start":113,"line_end":113,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/builder.rs","byte_start":11931735,"byte_end":11931742,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942736,"byte_end":11942744,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11942901,"byte_end":11942909,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":594},"to":{"krate":18,"index":468}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/shutdown.rs","byte_start":11943085,"byte_end":11943093,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11943710,"byte_end":11943722,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945015,"byte_end":11945027,"line_start":61,"line_end":61,"column_start":33,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":710},"to":{"krate":18,"index":550}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945235,"byte_end":11945247,"line_start":69,"line_end":69,"column_start":31,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":710},"to":{"krate":36,"index":67}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/task_executor.rs","byte_start":11945460,"byte_end":11945472,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":710},"to":{"krate":36,"index":166}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11921132,"byte_end":11921139,"line_start":113,"line_end":113,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/runtime/threadpool/mod.rs","byte_start":11929917,"byte_end":11929924,"line_start":391,"line_end":391,"column_start":15,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2295}}]}