{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","x25519_dalek","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"u64_backend\"","-C","metadata=4b59a6d66abcd91f","-C","extra-filename=-4b59a6d66abcd91f","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps","--extern","curve25519_dalek=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libcurve25519_dalek-d7468b4919cdb726.rmeta","--extern","rand_core=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/librand_core-e49d84fb8d971de2.rmeta","--extern","zeroize=/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libzeroize-512bd8ece20c1577.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/stp258-tokens/target/rls/debug/deps/libx25519_dalek-4b59a6d66abcd91f.rmeta"},"prelude":{"crate_id":{"name":"x25519_dalek","disambiguator":[16492821146506972259,14081933661810456331]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":4,"id":{"name":"curve25519_dalek","disambiguator":[15461195082006873104,1201787483057798155]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[13026914704469907224,16926152546635139588]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":20,"id":{"name":"digest","disambiguator":[3267007905718091736,6472354886699068987]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":21,"id":{"name":"generic_array","disambiguator":[17630325060485713573,8632611388700851125]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":22,"id":{"name":"typenum","disambiguator":[8726524992263171078,2989859816024006970]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":23,"id":{"name":"rand_core","disambiguator":[14894854827439599791,14726752619537885966]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":24,"id":{"name":"getrandom","disambiguator":[15029485651409574374,12768592724428488164]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[1505878593616001950,7496258804219435484]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":27,"id":{"name":"zeroize","disambiguator":[5786647434590390094,5762411277985029977]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":28,"id":{"name":"zeroize_derive","disambiguator":[1378422201010376007,1480377389608050320]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","num":29,"id":{"name":"subtle","disambiguator":[1574374193687963361,3487928300875664519]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":483,"byte_end":1075,"line_start":17,"line_end":36,"column_start":1,"column_end":26}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":1073,"byte_end":1074,"line_start":36,"line_end":36,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":483,"byte_end":1075,"line_start":17,"line_end":36,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":64}],"decl_id":null,"docs":" Note that docs will only build on nightly Rust until\n `feature(external_doc)` is stabilized.\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":483,"byte_end":493,"line_start":17,"line_end":17,"column_start":1,"column_end":11}},{"value":"/ Note that docs will only build on nightly Rust until","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":856,"byte_end":912,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ `feature(external_doc)` is stabilized.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/lib.rs","byte_start":913,"byte_end":955,"line_start":26,"line_end":26,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2092,"byte_end":2101,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::x25519::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Diffie-Hellman public key, corresponding to an [`EphemeralSecret`] or [`StaticSecret`] key.\n","sig":null,"attributes":[{"value":"/ A Diffie-Hellman public key, corresponding to an [`EphemeralSecret`] or [`StaticSecret`] key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":1778,"byte_end":1875,"line_start":26,"line_end":26,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2414,"byte_end":2422,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<PublicKey>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this public key to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert this public key to a byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2344,"byte_end":2388,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2393,"byte_end":2402,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2548,"byte_end":2556,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<PublicKey>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this public key as a byte array.\n","sig":null,"attributes":[{"value":"/ View this public key as a byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2481,"byte_end":2522,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2527,"byte_end":2536,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3186,"byte_end":3201,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"EphemeralSecret","qualname":"::x25519::EphemeralSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" A short-lived Diffie-Hellman secret key that can only be used to compute a single\n [`SharedSecret`].","sig":null,"attributes":[{"value":"/ A short-lived Diffie-Hellman secret key that can only be used to compute a single","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2614,"byte_end":2699,"line_start":56,"line_end":56,"column_start":1,"column_end":86}},{"value":"/ [`SharedSecret`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2700,"byte_end":2721,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2722,"byte_end":2725,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This type is identical to the [`StaticSecret`] type, except that the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2726,"byte_end":2798,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ [`EphemeralSecret::diffie_hellman`] method consumes and then wipes the secret key, and there","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2799,"byte_end":2895,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ are no serialization methods defined.  This means that [`EphemeralSecret`]s can only be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2896,"byte_end":2987,"line_start":61,"line_end":61,"column_start":1,"column_end":92}},{"value":"/ generated from fresh randomness by [`EphemeralSecret::new`] and the compiler statically checks","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2988,"byte_end":3086,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/ that the resulting secret is used at most once.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3087,"byte_end":3138,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"zeroize(drop)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3158,"byte_end":3174,"line_start":65,"line_end":65,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3381,"byte_end":3395,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"diffie_hellman","qualname":"<EphemeralSecret>::diffie_hellman","value":"pub fn diffie_hellman(Self, &PublicKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Perform a Diffie-Hellman key agreement between `self` and\n `their_public` key to produce a [`SharedSecret`].\n","sig":null,"attributes":[{"value":"/ Perform a Diffie-Hellman key agreement between `self` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3250,"byte_end":3311,"line_start":69,"line_end":69,"column_start":5,"column_end":66}},{"value":"/ `their_public` key to produce a [`SharedSecret`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3316,"byte_end":3369,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3562,"byte_end":3565,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<EphemeralSecret>::new","value":"pub fn new<T: RngCore + CryptoRng>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate an x25519 [`EphemeralSecret`] key.\n","sig":null,"attributes":[{"value":"/ Generate an x25519 [`EphemeralSecret`] key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3503,"byte_end":3550,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5106,"byte_end":5118,"line_start":114,"line_end":114,"column_start":12,"column_end":24},"name":"StaticSecret","qualname":"::x25519::StaticSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Diffie-Hellman secret key that can be used to compute multiple [`SharedSecret`]s.","sig":null,"attributes":[{"value":"/ A Diffie-Hellman secret key that can be used to compute multiple [`SharedSecret`]s.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4025,"byte_end":4112,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4113,"byte_end":4116,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This type is identical to the [`EphemeralSecret`] type, except that the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4117,"byte_end":4192,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ [`StaticSecret::diffie_hellman`] method does not consume the secret key, and the type provides","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4193,"byte_end":4291,"line_start":95,"line_end":95,"column_start":1,"column_end":99}},{"value":"/ serialization methods to save and load key material.  This means that the secret may be used","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4292,"byte_end":4388,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"/ multiple times (but does not *have to be*).","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4389,"byte_end":4436,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4437,"byte_end":4440,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Some protocols, such as Noise, already handle the static/ephemeral distinction, so the","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4441,"byte_end":4531,"line_start":99,"line_end":99,"column_start":1,"column_end":91}},{"value":"/ additional guarantees provided by [`EphemeralSecret`] are not helpful or would cause duplicate","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4532,"byte_end":4630,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ code paths.  In this case, it may be useful to","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4631,"byte_end":4681,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4682,"byte_end":4700,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/ use x25519_dalek::StaticSecret as SecretKey;","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4701,"byte_end":4749,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4750,"byte_end":4757,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ since the only difference between the two is that [`StaticSecret`] does not enforce at","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4758,"byte_end":4848,"line_start":105,"line_end":105,"column_start":1,"column_end":91}},{"value":"/ compile-time that the key is only used once.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":4849,"byte_end":4897,"line_start":106,"line_end":106,"column_start":1,"column_end":49}},{"value":"zeroize(drop)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5078,"byte_end":5094,"line_start":113,"line_end":113,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5374,"byte_end":5388,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"diffie_hellman","qualname":"<StaticSecret>::diffie_hellman","value":"pub fn diffie_hellman(&Self, &PublicKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Perform a Diffie-Hellman key agreement between `self` and\n `their_public` key to produce a `SharedSecret`.\n","sig":null,"attributes":[{"value":"/ Perform a Diffie-Hellman key agreement between `self` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5245,"byte_end":5306,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ `their_public` key to produce a `SharedSecret`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5311,"byte_end":5362,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5537,"byte_end":5540,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<StaticSecret>::new","value":"pub fn new<T: RngCore + CryptoRng>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate an x25519 key.\n","sig":null,"attributes":[{"value":"/ Generate an x25519 key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5498,"byte_end":5525,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5778,"byte_end":5786,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<StaticSecret>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Extract this key's bytes for serialization.\n","sig":null,"attributes":[{"value":"/ Extract this key's bytes for serialization.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5719,"byte_end":5766,"line_start":134,"line_end":134,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6521,"byte_end":6533,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::x25519::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" The result of a Diffie-Hellman key exchange.","sig":null,"attributes":[{"value":"/ The result of a Diffie-Hellman key exchange.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6296,"byte_end":6344,"line_start":154,"line_end":154,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6345,"byte_end":6348,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Each party computes this using their [`EphemeralSecret`] or [`StaticSecret`] and their","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6349,"byte_end":6439,"line_start":156,"line_end":156,"column_start":1,"column_end":91}},{"value":"/ counterparty's [`PublicKey`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6440,"byte_end":6473,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"zeroize(drop)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6493,"byte_end":6509,"line_start":159,"line_end":159,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6661,"byte_end":6669,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SharedSecret>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this shared secret to a byte array.\n","sig":null,"attributes":[{"value":"/ Convert this shared secret to a byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6588,"byte_end":6635,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6640,"byte_end":6649,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6802,"byte_end":6810,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SharedSecret>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this shared secret key as a byte array.\n","sig":null,"attributes":[{"value":"/ View this shared secret key as a byte array.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6728,"byte_end":6776,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6781,"byte_end":6790,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7411,"byte_end":7417,"line_start":196,"line_end":196,"column_start":8,"column_end":14},"name":"x25519","qualname":"::x25519::x25519","value":"pub fn x25519([u8; ], [u8; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The bare, byte-oriented x25519 function, exactly as specified in RFC7748.","sig":null,"attributes":[{"value":"/ The bare, byte-oriented x25519 function, exactly as specified in RFC7748.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7201,"byte_end":7278,"line_start":192,"line_end":192,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7279,"byte_end":7282,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This can be used with [`X25519_BASEPOINT_BYTES`] for people who","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7283,"byte_end":7350,"line_start":194,"line_end":194,"column_start":1,"column_end":68}},{"value":"/ cannot use the better, safer, and faster DH API.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7351,"byte_end":7403,"line_start":195,"line_end":195,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":56},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7691,"byte_end":7713,"line_start":203,"line_end":203,"column_start":11,"column_end":33},"name":"X25519_BASEPOINT_BYTES","qualname":"::x25519::X25519_BASEPOINT_BYTES","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, for use with the bare, byte-oriented x25519\n function.  This is provided for people who cannot use the typed\n DH API for some reason.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, for use with the bare, byte-oriented x25519","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7515,"byte_end":7584,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ function.  This is provided for people who cannot use the typed","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7585,"byte_end":7652,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ DH API for some reason.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":7653,"byte_end":7680,"line_start":202,"line_end":202,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2156,"byte_end":2165,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2328,"byte_end":2337,"line_start":42,"line_end":42,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3228,"byte_end":3243,"line_start":68,"line_end":68,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3784,"byte_end":3793,"line_start":85,"line_end":85,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5226,"byte_end":5238,"line_start":118,"line_end":118,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5867,"byte_end":5879,"line_start":140,"line_end":140,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6061,"byte_end":6070,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6569,"byte_end":6581,"line_start":162,"line_end":162,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":8469,"byte_end":8475,"line_start":219,"line_end":219,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2156,"byte_end":2165,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":2328,"byte_end":2337,"line_start":42,"line_end":42,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3228,"byte_end":3243,"line_start":68,"line_end":68,"column_start":6,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":3784,"byte_end":3793,"line_start":85,"line_end":85,"column_start":40,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5226,"byte_end":5238,"line_start":118,"line_end":118,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":5867,"byte_end":5879,"line_start":140,"line_end":140,"column_start":25,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6061,"byte_end":6070,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":1989}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":6569,"byte_end":6581,"line_start":162,"line_end":162,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/x25519-dalek-1.1.0/src/x25519.rs","byte_start":8469,"byte_end":8475,"line_start":219,"line_end":219,"column_start":42,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":4,"index":1080},"to":{"krate":1,"index":1989}}]}